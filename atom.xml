<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Darren</title>
  <subtitle>海亮的笔记本</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huanghailiang.github.io/"/>
  <updated>2017-09-03T13:19:26.142Z</updated>
  <id>https://huanghailiang.github.io/</id>
  
  <author>
    <name>Darren</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git本地库的建立与使用</title>
    <link href="https://huanghailiang.github.io/2017/09/03/Git%E6%9C%AC%E5%9C%B0%E5%BA%93%E7%9A%84%E5%BB%BA%E7%AB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>https://huanghailiang.github.io/2017/09/03/Git本地库的建立与使用/</id>
    <published>2017-09-03T12:54:27.000Z</published>
    <updated>2017-09-03T13:19:26.142Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git本地库的建立与使用&quot;&gt;&lt;a href=&quot;#Git本地库的建立与使用&quot; class=&quot;headerlink&quot; title=&quot;Git本地库的建立与使用&quot;&gt;&lt;/a&gt;Git本地库的建立与使用&lt;/h1&gt;&lt;p&gt;本笔记是自己在网上学习后整理后得到的，主要针对的是本地库的建立以及使用，对于远程库的操作这里暂时不涉及。&lt;/p&gt;
&lt;p&gt;本教程的本地库的建立主要是在linux系统上建立，windows上可以使用命令行的git bash 或者带有图形界面的TortoiseGit进行操作，有兴趣的话可以自己学习一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Git" scheme="https://huanghailiang.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>图片转换成字符图</title>
    <link href="https://huanghailiang.github.io/2017/09/02/%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E6%88%90%E5%AD%97%E7%AC%A6%E5%9B%BE/"/>
    <id>https://huanghailiang.github.io/2017/09/02/图片转换成字符图/</id>
    <published>2017-09-02T09:33:11.000Z</published>
    <updated>2017-09-02T10:01:00.944Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;图片转换成字符图&quot;&gt;&lt;a href=&quot;#图片转换成字符图&quot; class=&quot;headerlink&quot; title=&quot;图片转换成字符图&quot;&gt;&lt;/a&gt;图片转换成字符图&lt;/h1&gt;&lt;p&gt;因为之前写到了一些好玩的注释模板，当然网上有很多很多好玩的图片，我们不可能完全收集过来，当然也不可能正好有你自己所需要的图片，所以我们需要一个自己将图片转换成字符图的一个代码，这样我们就可以很方便的得到自己想得到的一些字符图。&lt;br&gt;
    
    </summary>
    
    
      <category term="娱乐" scheme="https://huanghailiang.github.io/tags/%E5%A8%B1%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>注释模板（仅供娱乐）</title>
    <link href="https://huanghailiang.github.io/2017/09/02/%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF%EF%BC%88%E4%BB%85%E4%BE%9B%E5%A8%B1%E4%B9%90%EF%BC%89/"/>
    <id>https://huanghailiang.github.io/2017/09/02/注释模板（仅供娱乐）/</id>
    <published>2017-09-02T08:57:39.000Z</published>
    <updated>2017-09-02T09:33:34.260Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;注释模板（仅供娱乐）&quot;&gt;&lt;a href=&quot;#注释模板（仅供娱乐）&quot; class=&quot;headerlink&quot; title=&quot;注释模板（仅供娱乐）&quot;&gt;&lt;/a&gt;注释模板（仅供娱乐）&lt;/h1&gt;&lt;p&gt;今天无意间在网上看到了一些好玩的注释，让我想起之前开始写代码的时候就已经有人开始在代码中添加这些东西，感觉挺好玩的，随手摘抄，仅供娱乐。&lt;br&gt;
    
    </summary>
    
    
      <category term="娱乐" scheme="https://huanghailiang.github.io/tags/%E5%A8%B1%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>vim操作</title>
    <link href="https://huanghailiang.github.io/2017/08/25/vim%E6%93%8D%E4%BD%9C/"/>
    <id>https://huanghailiang.github.io/2017/08/25/vim操作/</id>
    <published>2017-08-25T08:07:16.000Z</published>
    <updated>2017-08-25T08:11:23.590Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vim的基本操作&quot;&gt;&lt;a href=&quot;#vim的基本操作&quot; class=&quot;headerlink&quot; title=&quot;vim的基本操作&quot;&gt;&lt;/a&gt;vim的基本操作&lt;/h1&gt;&lt;p&gt;本人在实验楼学习的时候摘抄下来的，留作自己的笔记。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ubuntu基本操作" scheme="https://huanghailiang.github.io/tags/ubuntu%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>服务器安装问题补充（安装时Select and install software失败）</title>
    <link href="https://huanghailiang.github.io/2017/08/25/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E8%A1%A5%E5%85%85/"/>
    <id>https://huanghailiang.github.io/2017/08/25/服务器安装问题补充/</id>
    <published>2017-08-25T06:57:13.000Z</published>
    <updated>2017-08-26T07:18:04.825Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务器安装问题补充&quot;&gt;&lt;a href=&quot;#服务器安装问题补充&quot; class=&quot;headerlink&quot; title=&quot;服务器安装问题补充&quot;&gt;&lt;/a&gt;服务器安装问题补充&lt;/h1&gt;&lt;p&gt;之前写好的服务器安装教程已经写好了，针对与大部分服务器的安装应该都可以正常安装了，但是近期安装实验室服务器的时候遇到了问题。安装时Select and install software失败，这个问题在以前没有遇到过，不过也有可能时启动盘做的有问题吧，不过是刚从ubuntu官网上下载的系统做的启动盘，有点迷，不过先记录一下好了。&lt;/p&gt;
&lt;img src=&quot;/images/服务器安装问题补充.jpg&quot;&gt;
    
    </summary>
    
    
      <category term="手把手教你配置Ubuntu server服务器" scheme="https://huanghailiang.github.io/tags/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu-server%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>C语言编写程序计时</title>
    <link href="https://huanghailiang.github.io/2017/08/22/C%E8%AF%AD%E8%A8%80%E7%BC%96%E5%86%99%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%97%B6/"/>
    <id>https://huanghailiang.github.io/2017/08/22/C语言编写程序计时/</id>
    <published>2017-08-22T12:45:04.000Z</published>
    <updated>2017-08-22T12:55:00.386Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;C语言编写程序计时&quot;&gt;&lt;a href=&quot;#C语言编写程序计时&quot; class=&quot;headerlink&quot; title=&quot;C语言编写程序计时&quot;&gt;&lt;/a&gt;C语言编写程序计时&lt;/h1&gt;&lt;p&gt;在我们编程的时候，有时候需要我们去监测程序运行的时间问题，尤其是在做加速或者做优化的时候，一个程序运行的时间也许就是我们判断程序好坏的标准，所以我们有时候要进行计时。（因为用到了，所以做个记录方便下次查看）&lt;/p&gt;
    
    </summary>
    
    
      <category term="常用的C语言小程序代码" scheme="https://huanghailiang.github.io/tags/%E5%B8%B8%E7%94%A8%E7%9A%84C%E8%AF%AD%E8%A8%80%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>C 语言TXT文件的读写</title>
    <link href="https://huanghailiang.github.io/2017/08/22/C-%E8%AF%AD%E8%A8%80TXT%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%86%99/"/>
    <id>https://huanghailiang.github.io/2017/08/22/C-语言TXT文件的读写/</id>
    <published>2017-08-22T12:30:52.000Z</published>
    <updated>2017-08-22T12:36:17.106Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;C语言编写TXT文件的读写&quot;&gt;&lt;a href=&quot;#C语言编写TXT文件的读写&quot; class=&quot;headerlink&quot; title=&quot;C语言编写TXT文件的读写&quot;&gt;&lt;/a&gt;C语言编写TXT文件的读写&lt;/h1&gt;&lt;p&gt;本问针对的是对txt文件中数据的读写操作（非二进制的，二进制的可能后面会补充）,因为用到做个记录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="常用的C语言小程序代码" scheme="https://huanghailiang.github.io/tags/%E5%B8%B8%E7%94%A8%E7%9A%84C%E8%AF%AD%E8%A8%80%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>文件脚本编写问题</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E6%96%87%E4%BB%B6%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99%E9%97%AE%E9%A2%98-by%E9%BB%84%E6%B5%B7%E4%BA%AE/"/>
    <id>https://huanghailiang.github.io/2017/08/17/文件脚本编写问题-by黄海亮/</id>
    <published>2017-08-17T05:58:01.000Z</published>
    <updated>2017-08-17T07:18:23.941Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;文件脚本编写问题&quot;&gt;&lt;a href=&quot;#文件脚本编写问题&quot; class=&quot;headerlink&quot; title=&quot;文件脚本编写问题&quot;&gt;&lt;/a&gt;文件脚本编写问题&lt;/h1&gt;&lt;p&gt;在编写脚本的时候我们可能会遇到一些各种各样的小问题，比如放置位置，以及使用权限等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hadoop脚本编写" scheme="https://huanghailiang.github.io/tags/Hadoop%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>清理集群的脚本</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E6%B8%85%E7%90%86%E9%9B%86%E7%BE%A4%E7%9A%84%E8%84%9A%E6%9C%AC-by%E9%BB%84%E6%B5%B7%E4%BA%AE/"/>
    <id>https://huanghailiang.github.io/2017/08/17/清理集群的脚本-by黄海亮/</id>
    <published>2017-08-17T05:56:08.000Z</published>
    <updated>2017-08-17T07:19:36.902Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;清理集群的脚本&quot;&gt;&lt;a href=&quot;#清理集群的脚本&quot; class=&quot;headerlink&quot; title=&quot;清理集群的脚本&quot;&gt;&lt;/a&gt;清理集群的脚本&lt;/h1&gt;&lt;p&gt;该脚本旨在重新配置hadoop的时候我们需要清理一下集群中的东西，比如记录等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hadoop脚本编写" scheme="https://huanghailiang.github.io/tags/Hadoop%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>初始化集群</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%9B%86%E7%BE%A4-by%E9%BB%84%E6%B5%B7%E4%BA%AE/"/>
    <id>https://huanghailiang.github.io/2017/08/17/初始化集群-by黄海亮/</id>
    <published>2017-08-17T05:52:50.000Z</published>
    <updated>2017-08-17T07:19:21.558Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;初始化集群&quot;&gt;&lt;a href=&quot;#初始化集群&quot; class=&quot;headerlink&quot; title=&quot;初始化集群&quot;&gt;&lt;/a&gt;初始化集群&lt;/h1&gt;&lt;p&gt;该脚本主要时对第一次使用集群的时候进行一个初始化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hadoop脚本编写" scheme="https://huanghailiang.github.io/tags/Hadoop%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>所有节点 文件删除脚本编写</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9-%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99-by%E9%BB%84%E6%B5%B7%E4%BA%AE/"/>
    <id>https://huanghailiang.github.io/2017/08/17/所有节点-文件删除脚本编写-by黄海亮/</id>
    <published>2017-08-17T05:49:47.000Z</published>
    <updated>2017-08-17T07:19:42.101Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;所有节点-文件删除脚本编写&quot;&gt;&lt;a href=&quot;#所有节点-文件删除脚本编写&quot; class=&quot;headerlink&quot; title=&quot;所有节点 文件删除脚本编写&quot;&gt;&lt;/a&gt;所有节点 文件删除脚本编写&lt;/h1&gt;&lt;p&gt;该脚本旨在删除所有节点上相同的东西，比如hadoop的重新配置等，还有删除hadoop的log等文件，都比较方便。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hadoop脚本编写" scheme="https://huanghailiang.github.io/tags/Hadoop%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>所有节点 文件拷贝脚本编写</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9-%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99-by%E9%BB%84%E6%B5%B7%E4%BA%AE/"/>
    <id>https://huanghailiang.github.io/2017/08/17/所有节点-文件拷贝脚本编写-by黄海亮/</id>
    <published>2017-08-17T05:46:18.000Z</published>
    <updated>2017-08-17T07:19:46.838Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;所有节点-文件拷贝脚本编写&quot;&gt;&lt;a href=&quot;#所有节点-文件拷贝脚本编写&quot; class=&quot;headerlink&quot; title=&quot;所有节点 文件拷贝脚本编写&quot;&gt;&lt;/a&gt;所有节点 文件拷贝脚本编写&lt;/h1&gt;&lt;p&gt;该脚本旨在往每个节点拷贝数据，之前我们的拷贝是需要自己一个节点一个节点链接然后拷贝，但是如果我们每个节点都拷贝同样的数据时，这样做显然很麻烦，如果节点多的话还很浪费时间，这样我们就可以通过该脚本自己循环拷贝。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hadoop脚本编写" scheme="https://huanghailiang.github.io/tags/Hadoop%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>所有节点执行同一指令的操作</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E6%89%A7%E8%A1%8C%E5%90%8C%E4%B8%80%E6%8C%87%E4%BB%A4%E7%9A%84%E6%93%8D%E4%BD%9C-by%E9%BB%84%E6%B5%B7%E4%BA%AE/"/>
    <id>https://huanghailiang.github.io/2017/08/17/所有节点执行同一指令的操作-by黄海亮/</id>
    <published>2017-08-17T05:43:26.000Z</published>
    <updated>2017-08-17T07:18:16.566Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;所有节点执行同一指令的操作&quot;&gt;&lt;a href=&quot;#所有节点执行同一指令的操作&quot; class=&quot;headerlink&quot; title=&quot;所有节点执行同一指令的操作&quot;&gt;&lt;/a&gt;所有节点执行同一指令的操作&lt;/h1&gt;&lt;p&gt;该脚本旨在对每个节点都执行同一个指令，这样就不用每次都shell到每个子节点上去执行了，较为方便。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hadoop脚本编写" scheme="https://huanghailiang.github.io/tags/Hadoop%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>所有节点 文件查看脚本编写</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9-%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    <id>https://huanghailiang.github.io/2017/08/17/所有节点-文件查看脚本编写/</id>
    <published>2017-08-17T05:39:11.000Z</published>
    <updated>2017-08-17T07:19:52.101Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;所有节点-文件查看脚本编写&quot;&gt;&lt;a href=&quot;#所有节点-文件查看脚本编写&quot; class=&quot;headerlink&quot; title=&quot;所有节点 文件查看脚本编写&quot;&gt;&lt;/a&gt;所有节点 文件查看脚本编写&lt;/h1&gt;&lt;p&gt;该脚本用于一次查看所有集群节点相同位置下的文件，类似于手动在每个节点上输入ls指令进行查看。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hadoop脚本编写" scheme="https://huanghailiang.github.io/tags/Hadoop%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>扩展Slave的时候需要注意的一些问题</title>
    <link href="https://huanghailiang.github.io/2017/08/17/%E6%89%A9%E5%B1%95Slave%E7%9A%84%E6%97%B6%E5%80%99%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>https://huanghailiang.github.io/2017/08/17/扩展Slave的时候需要注意的一些问题/</id>
    <published>2017-08-17T05:35:31.000Z</published>
    <updated>2017-08-17T07:19:32.156Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;扩展Slave的时候需要注意的一些问题&quot;&gt;&lt;a href=&quot;#扩展Slave的时候需要注意的一些问题&quot; class=&quot;headerlink&quot; title=&quot;扩展Slave的时候需要注意的一些问题&quot;&gt;&lt;/a&gt;扩展Slave的时候需要注意的一些问题&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;扩展的时候可以先直接按照Hadoop集群安装配置教程先进行。&lt;/li&gt;
&lt;li&gt;这里需要更改 &lt;strong&gt;&lt;em&gt;/usr/local/hadoop/etc/hadoop&lt;/em&gt;&lt;/strong&gt; 路径下的 slave文件中的参数，需要把添加的节点加进去。
    
    </summary>
    
    
      <category term="Hadoop" scheme="https://huanghailiang.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop安装_单机伪分布式配置</title>
    <link href="https://huanghailiang.github.io/2017/08/16/Hadoop%E5%AE%89%E8%A3%85_%E5%8D%95%E6%9C%BA%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/"/>
    <id>https://huanghailiang.github.io/2017/08/16/Hadoop安装_单机伪分布式配置/</id>
    <published>2017-08-16T12:34:00.000Z</published>
    <updated>2017-08-17T07:18:32.951Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hadoop安装-单机伪分布式配置&quot;&gt;&lt;a href=&quot;#Hadoop安装-单机伪分布式配置&quot; class=&quot;headerlink&quot; title=&quot;Hadoop安装_单机伪分布式配置&quot;&gt;&lt;/a&gt;Hadoop安装_单机伪分布式配置&lt;/h1&gt;&lt;h2 id=&quot;创建hadoop账户&quot;&gt;&lt;a href=&quot;#创建hadoop账户&quot; class=&quot;headerlink&quot; title=&quot;创建hadoop账户&quot;&gt;&lt;/a&gt;创建hadoop账户&lt;/h2&gt;&lt;p&gt;添加用户：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo useradd -m hadoop -s /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;给用户设置密码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo passwd hadoop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;给用户管理员权限：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo adduser hadoop sudo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;更新apt&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装vim:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install vim
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Hadoop" scheme="https://huanghailiang.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hadoop集群安装配置教程</title>
    <link href="https://huanghailiang.github.io/2017/08/16/Hadoop%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
    <id>https://huanghailiang.github.io/2017/08/16/Hadoop集群安装配置教程/</id>
    <published>2017-08-16T12:28:00.000Z</published>
    <updated>2017-08-17T07:18:41.309Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hadoop集群安装&quot;&gt;&lt;a href=&quot;#hadoop集群安装&quot; class=&quot;headerlink&quot; title=&quot;hadoop集群安装&quot;&gt;&lt;/a&gt;hadoop集群安装&lt;/h1&gt;&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;Hadoop 集群的安装配置大致为如下流程:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1、选定一台机器作为 Master
2、在 Master 节点上配置 hadoop 用户、安装 SSH server、安装 Java 环境
3、在 Master 节点上安装 Hadoop，并完成配置
4、在其他 Slave 节点上配置 hadoop 用户、安装 SSH server、安装 Java 环境
5、将 Master 节点上的 /usr/local/hadoop 目录复制到其他 Slave 节点上
6、在 Master 节点上开启 Hadoop
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Hadoop" scheme="https://huanghailiang.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>建立自己的github博客</title>
    <link href="https://huanghailiang.github.io/2017/08/15/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github%E5%8D%9A%E5%AE%A2/"/>
    <id>https://huanghailiang.github.io/2017/08/15/搭建自己的github博客/</id>
    <published>2017-08-15T02:06:00.000Z</published>
    <updated>2017-08-22T12:41:13.770Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;可以根据博客中的hello-world文件中讲述的安装&quot;&gt;&lt;a href=&quot;#可以根据博客中的hello-world文件中讲述的安装&quot; class=&quot;headerlink&quot; title=&quot;可以根据博客中的hello-world文件中讲述的安装&quot;&gt;&lt;/a&gt;可以根据博客中的hello-world文件中讲述的安装&lt;/h1&gt;&lt;h1 id=&quot;下面是一些详细的步骤&quot;&gt;&lt;a href=&quot;#下面是一些详细的步骤&quot; class=&quot;headerlink&quot; title=&quot;下面是一些详细的步骤&quot;&gt;&lt;/a&gt;下面是一些详细的步骤&lt;/h1&gt;&lt;p&gt;1、安装node,可以去node的官网直接下载 &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://nodejs.org/en/&lt;/a&gt; （这里我下载的是node-v6.11.1-x64）&lt;br&gt;2、安装hexo，可以打开cmd终端输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g hexo-cli
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="搭建自己的github博客" scheme="https://huanghailiang.github.io/tags/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>深度学习环境搭建------by邵碧尧</title>
    <link href="https://huanghailiang.github.io/2017/07/23/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://huanghailiang.github.io/2017/07/23/深度学习环境搭建/</id>
    <published>2017-07-23T08:27:31.000Z</published>
    <updated>2017-08-17T05:21:35.936Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;深度学习环境搭建&quot;&gt;&lt;a href=&quot;#深度学习环境搭建&quot; class=&quot;headerlink&quot; title=&quot;深度学习环境搭建&quot;&gt;&lt;/a&gt;深度学习环境搭建&lt;/h1&gt;&lt;p&gt;开始接触深度学习一年多时间了，总是有种技术发展飞快，没等你掌握现有技术更牛X的技术又出来了。身处AI浪潮中，到现在越发有种感觉：深度学习可能很多问题都能解决，但我们自己并没有那么多精力去研究那么多方面，自然语言处理，自动驾驶，人脸识别等等，选定一个方向深入研究才是正解。至少目前是这么理解的，不对希望朋友指正！&lt;/p&gt;
&lt;p&gt;如今深度学习的框架很多，Caffe，TensorFlow，Torch等都各有各的优势，开始深度学习不可避免要配置深度学习的工作环境，如果不知道方法也许在开头就会花费很多时间，写这篇博客的目的就是帮助大家更快上手。下面介绍Caffe在Ubuntu 16.04上的搭建过程（Ubuntu 14.04同样可以）&lt;br&gt;
    
    </summary>
    
    
      <category term="深度学习环境搭建" scheme="https://huanghailiang.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>安装远程图形界面x2go------by邵碧尧</title>
    <link href="https://huanghailiang.github.io/2017/07/23/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu%20server%E6%9C%8D%E5%8A%A1%E5%99%A8_5/"/>
    <id>https://huanghailiang.github.io/2017/07/23/手把手教你配置Ubuntu server服务器_5/</id>
    <published>2017-07-23T08:25:31.000Z</published>
    <updated>2017-08-17T05:22:39.743Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;手把手教你配置Ubuntu-server服务器&quot;&gt;&lt;a href=&quot;#手把手教你配置Ubuntu-server服务器&quot; class=&quot;headerlink&quot; title=&quot;手把手教你配置Ubuntu server服务器&quot;&gt;&lt;/a&gt;手把手教你配置Ubuntu server服务器&lt;/h1&gt;&lt;h2 id=&quot;安装远程图形界面x2go&quot;&gt;&lt;a href=&quot;#安装远程图形界面x2go&quot; class=&quot;headerlink&quot; title=&quot;安装远程图形界面x2go&quot;&gt;&lt;/a&gt;安装远程图形界面x2go&lt;/h2&gt;&lt;p&gt;Ubuntu server 安装完成只有命令行界面，一般的工作在Windows下用 &lt;a href=&quot;https://www.netsarang.com/products/xsh_overview.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xshell&lt;/a&gt; 和 &lt;a href=&quot;https://winscp.net/eng/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;winscp&lt;/a&gt; ，一个输命令行，一个进行界面化文件管理，还是挺方便的， 但部分用户还是希望有个图形界面更加方便科研工作开展，这里推荐x2go这个轻量化桌面，安装也比较方便，下面就来介绍。&lt;br&gt;
    
    </summary>
    
    
      <category term="手把手教你配置Ubuntu server服务器" scheme="https://huanghailiang.github.io/tags/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu-server%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
</feed>
