<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[互信息]]></title>
      <url>/2017/09/17/%E4%BA%92%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<h1 id="互信息"><a href="#互信息" class="headerlink" title="互信息"></a>互信息</h1><p>在做医学图像分割时需要用到互信息来计算两幅图像的相似度。之前写好了函数，在此备份。</p>
<a id="more"></a>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">float</span> <span class="title">MI_hhl</span><span class="params">(<span class="keyword">float</span> ***Img1, <span class="keyword">float</span> ***Img2, <span class="keyword">int</span> Image_X_Size, <span class="keyword">int</span> Image_Y_Size, <span class="keyword">int</span> Image_Z_Size)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="comment">//绘制直方图</span></div><div class="line">	<span class="keyword">int</span> Hist_Img1[<span class="number">256</span>], Hist_Img2[<span class="number">256</span>];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; <span class="number">256</span>; t++)</div><div class="line">	&#123;</div><div class="line">		Hist_Img1[t] = <span class="number">0</span>;</div><div class="line">		Hist_Img2[t] = <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; Image_Z_Size; k++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Image_X_Size; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;Image_Y_Size; j++)</div><div class="line">			&#123;</div><div class="line">				Hist_Img1[(<span class="keyword">int</span>)Img1[k][i][j]]++;</div><div class="line">				Hist_Img2[(<span class="keyword">int</span>)Img2[k][i][j]]++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//绘制两个图像的联合直方图</span></div><div class="line">	<span class="keyword">int</span> Hist[<span class="number">256</span>][<span class="number">256</span>];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">256</span>; j++)</div><div class="line">		&#123;</div><div class="line">			Hist[i][j] = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; Image_Z_Size; k++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Image_X_Size; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;Image_Y_Size; j++)</div><div class="line">			&#123;</div><div class="line">				Hist[(<span class="keyword">int</span>)Img1[k][i][j]][(<span class="keyword">int</span>)Img2[k][i][j]]++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//计算单个概率</span></div><div class="line">	<span class="keyword">float</span> P_Img1[<span class="number">256</span>], P_Img2[<span class="number">256</span>];</div><div class="line">	<span class="keyword">float</span> all_number;</div><div class="line">	all_number = Image_X_Size * Image_Y_Size * Image_Z_Size;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; <span class="number">256</span>; t++)</div><div class="line">	&#123;</div><div class="line">		P_Img1[t] = (<span class="keyword">float</span>)Hist_Img1[t] / all_number;</div><div class="line">		P_Img2[t] = (<span class="keyword">float</span>)Hist_Img2[t] / all_number;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//计算联合概率</span></div><div class="line">	<span class="keyword">float</span> P_Hist[<span class="number">256</span>][<span class="number">256</span>];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">256</span>; j++)</div><div class="line">		&#123;</div><div class="line">			P_Hist[i][j] = (<span class="keyword">float</span>)Hist[i][j] / all_number;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//计算两个图像的互信息</span></div><div class="line">	<span class="keyword">float</span> Mut_INF = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">256</span>; j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (P_Hist[i][j] == <span class="number">0</span> || P_Img1[i] == <span class="number">0</span> || P_Img2[j] == <span class="number">0</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">continue</span>;</div><div class="line">			&#125;</div><div class="line">			Mut_INF += P_Hist[i][j] * <span class="built_in">log10</span>(P_Hist[i][j] / (P_Img1[i] * P_Img2[j]));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> Mut_INF;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 医学图像分割 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基于距离的计算方法]]></title>
      <url>/2017/09/17/%E5%9F%BA%E4%BA%8E%E8%B7%9D%E7%A6%BB%E7%9A%84%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h1 id="基于距离的计算方法"><a href="#基于距离的计算方法" class="headerlink" title="基于距离的计算方法"></a>基于距离的计算方法</h1><p>在因为之前项目中用到了欧氏距离，所以在网上看了一下，然后感觉还不错就转载到自己的笔记中。顺便测试了一下在博客中直接编写公式。</p>
<p>本文转自：<a href="http://blog.sina.com.cn/s/blog_52510b1d01015nrg.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_52510b1d01015nrg.html</a></p>
<a id="more"></a>
<h1 id="欧氏距离-Euclidean-Distance"><a href="#欧氏距离-Euclidean-Distance" class="headerlink" title="欧氏距离(Euclidean Distance)"></a>欧氏距离(Euclidean Distance)</h1><p>欧氏距离是最易于理解的一种距离计算方法，源自欧氏空间中两点间的距离公式。</p>
<p>(1)二维平面上两点a(x1,y1)与b(x2,y2)间的欧氏距离：</p>
<script type="math/tex; mode=display">
d_{12}=\sqrt{(x_1-x_2)^2+(y_1-y_2)^2}</script><p>(2)三维空间两点a(x1,y1,z1)与b(x2,y2,z2)间的欧氏距离：</p>
<script type="math/tex; mode=display">
d_{12}=\sqrt{(x_1-x_2)^2+(y_1-y_2)^2+(z_1-z_2)^2}</script><p>(3)两个n维向量a(x11,x12,…,x1n)与 b(x21,x22,…,x2n)间的欧氏距离：</p>
<script type="math/tex; mode=display">
d_{12}=\sqrt{\sum_{k=1}^n(x_{1k}-x_{2k})^2}</script><p>也可以用表示成向量运算的形式：</p>
<script type="math/tex; mode=display">
d_{12}=\sqrt{(a-b)(a-b)^T}</script><p>(4)Matlab计算欧氏距离</p>
<p>Matlab计算距离主要使用pdist函数。若X是一个M×N的矩阵，则pdist(X)将X矩阵M行的每一行作为一个N维向量，然后计算这M个向量两两间的距离。</p>
<p>例子：计算向量(0,0)、(1,0)、(0,2)两两间的欧式距离</p>
<p>X = [0 0 ; 1 0 ; 0 2]</p>
<p>D = pdist(X,’euclidean’)</p>
<p>结果：</p>
<p>D =</p>
<pre><code>1.0000    2.0000    2.2361
</code></pre><h1 id="曼哈顿距离-Manhattan-Distance"><a href="#曼哈顿距离-Manhattan-Distance" class="headerlink" title="曼哈顿距离(Manhattan Distance)"></a>曼哈顿距离(Manhattan Distance)</h1><p>从名字就可以猜出这种距离的计算方法了。想象你在曼哈顿要从一个十字路口开车到另外一个十字路口，驾驶距离是两点间的直线距离吗？显然不是，除非你能穿越大楼。实际驾驶距离就是这个“曼哈顿距离”。而这也是曼哈顿距离名称的来源， 曼哈顿距离也称为<strong>城市街区距离(City Block distance)</strong>。</p>
<p>(1)二维平面两点a(x1,y1)与b(x2,y2)间的曼哈顿距离</p>
<script type="math/tex; mode=display">
d_{12}=|x_1-x_2|+|y_1-y_2|</script><p>(2)两个n维向量a(x11,x12,…,x1n)与 b(x21,x22,…,x2n)间的曼哈顿距离</p>
<script type="math/tex; mode=display">
d_{12}=\sum_{k=1}^n|x_{1k}-x_{2k}|</script><p>(3) Matlab计算曼哈顿距离</p>
<p>例子：计算向量(0,0)、(1,0)、(0,2)两两间的曼哈顿距离</p>
<p>X = [0 0 ; 1 0 ; 0 2]</p>
<p>D = pdist(X, ‘cityblock’)</p>
<p>结果：</p>
<p>D =</p>
<pre><code> 1     2     3
</code></pre><h1 id="标准化欧氏距离-Standardized-Euclidean-distance"><a href="#标准化欧氏距离-Standardized-Euclidean-distance" class="headerlink" title="标准化欧氏距离(Standardized Euclidean distance )"></a>标准化欧氏距离(Standardized Euclidean distance )</h1><p>(1)标准欧氏距离的定义</p>
<p>标准化欧氏距离是针对简单欧氏距离的缺点而作的一种改进方案。标准欧氏距离的思路：既然数据各维分量的分布不一样，好吧！那我先将各个分量都“标准化”到均值、方差相等吧。均值和方差标准化到多少呢？这里先复习点统计学知识吧，假设样本集X的均值(mean)为m，标准差(standard deviation)为s，那么X的“标准化变量”表示为：</p>
<p>而且标准化变量的数学期望为0，方差为1。因此样本集的标准化过程(standardization)用公式描述就是：</p>
<script type="math/tex; mode=display">
X^* = \frac{X-m}{s}</script><p>标准化后的值 =  ( 标准化前的值  － 分量的均值 ) /分量的标准差</p>
<p>经过简单的推导就可以得到两个n维向量a(x11,x12,…,x1n)与 b(x21,x22,…,x2n)间的标准化欧氏距离的公式：</p>
<script type="math/tex; mode=display">
d_{12}=\sqrt{\sum_{k=1}^n(\frac{x_{1k}-x_{2k}}{s_k})^2}</script><p>如果将方差的倒数看成是一个权重，这个公式可以看成是一种<strong>加权欧氏距离(Weighted Euclidean distance)</strong>。</p>
<p>(2)Matlab计算标准化欧氏距离</p>
<p>例子：计算向量(0,0)、(1,0)、(0,2)两两间的标准化欧氏距离 (假设两个分量的标准差分别为0.5和1)</p>
<p>X = [0 0 ; 1 0 ; 0 2]</p>
<p>D = pdist(X, ‘seuclidean’,[0.5,1])</p>
<p>结果：</p>
<p>D =</p>
<pre><code>2.0000    2.0000    2.8284
</code></pre><h1 id="夹角余弦-Cosine"><a href="#夹角余弦-Cosine" class="headerlink" title="夹角余弦(Cosine)"></a>夹角余弦(Cosine)</h1><p>有没有搞错，又不是学几何，怎么扯到夹角余弦了？各位看官稍安勿躁。几何中夹角余弦可用来衡量两个向量方向的差异，机器学习中借用这一概念来衡量样本向量之间的差异。</p>
<p>(1)在二维空间中向量A(x1,y1)与向量B(x2,y2)的夹角余弦公式：</p>
<script type="math/tex; mode=display">
\cos \theta = \frac{x_1x_2+y_1y_2}{\sqrt{x_1^2+y_1^2} \sqrt{x_2^2+y_2^2}}</script><p>(2) 两个n维样本点a(x11,x12,…,x1n)和b(x21,x22,…,x2n)的夹角余弦</p>
<p>类似的，对于两个n维样本点a(x11,x12,…,x1n)和b(x21,x22,…,x2n)，可以使用类似于夹角余弦的概念来衡量它们间的相似程度。</p>
<script type="math/tex; mode=display">
\cos(\theta)=\frac{a \cdot b}{|a||b|}</script><p>即：</p>
<script type="math/tex; mode=display">
\cos(\theta)=\frac{\sum_{k=1}^n x_{1k}x_{2k}}{\sqrt{\sum_{k=1}^nx_{1k}^2}\sqrt{\sum_{k=1}^nx_{2k}^2}}</script><p>夹角余弦取值范围为[-1,1]。夹角余弦越大表示两个向量的夹角越小，夹角余弦越小表示两向量的夹角越大。当两个向量的方向重合时夹角余弦取最大值1，当两个向量的方向完全相反夹角余弦取最小值-1。</p>
<p>(3)Matlab计算夹角余弦</p>
<p>例子：计算(1,0)、( 1,1.732)、( -1,0)两两间的夹角余弦</p>
<p>X = [1 0 ; 1 1.732 ; -1 0]</p>
<p>D = 1- pdist(X, ‘cosine’)  % Matlab中的pdist(X, ‘cosine’)得到的是1减夹角余弦的值</p>
<p>结果：</p>
<p>D =</p>
<pre><code>    0.5000   -1.0000   -0.5000
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ssh连接服务器中断，如何让命令继续在服务器执行]]></title>
      <url>/2017/09/08/ssh%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E6%96%AD%EF%BC%8C%E5%A6%82%E4%BD%95%E8%AE%A9%E5%91%BD%E4%BB%A4%E7%BB%A7%E7%BB%AD%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%A7%E8%A1%8C/</url>
      <content type="html"><![CDATA[<h1 id="ssh连接linux服务器中断后，如何让命令继续在服务器运行"><a href="#ssh连接linux服务器中断后，如何让命令继续在服务器运行" class="headerlink" title="ssh连接linux服务器中断后，如何让命令继续在服务器运行"></a>ssh连接linux服务器中断后，如何让命令继续在服务器运行</h1><p>这个问题也许是我们这些小白比较头疼的问题，尤其对于那些做机器学习需要花很久的时间才能训练出一个结果。然而就在这时，因为各种不可抗力我们使用ssh连接服务器时，ssh的窗口突然断开了连接，那么在服务器上跑的程序就也跟着断掉了，之前所有跑的数据也将丢失，这样将会浪费我们大量的时间。</p>
<a id="more"></a>
<p>今天刚好有人跟我提到了这个问题，然后就简单上网查找资料，简单的学习一下，做个笔记方便自己以后查阅。</p>
<p>参考链接：</p>
<p><a href="http://blog.csdn.net/gukesdo/article/details/6901902" target="_blank" rel="external">http://blog.csdn.net/gukesdo/article/details/6901902</a></p>
<h1 id="为什么ssh一旦断开我们的进程也将会被杀掉？"><a href="#为什么ssh一旦断开我们的进程也将会被杀掉？" class="headerlink" title="为什么ssh一旦断开我们的进程也将会被杀掉？"></a>为什么ssh一旦断开我们的进程也将会被杀掉？</h1><p>元凶：SIGHUP 信号</p>
<p>让我们来看看为什么关掉窗口/断开连接会使得正在运行的程序死掉。</p>
<p>在Linux/Unix中，有这样几个概念：</p>
<p>进程组（process group）：一个或多个进程的集合，每一个进程组有唯一一个进程组ID，即进程组长进程的ID。 </p>
<p>会话期（session）：一个或多个进程组的集合，有唯一一个会话期首进程（session leader）。会话期ID为首进程的ID。 </p>
<p>会话期可以有一个单独的控制终端（controlling terminal）。与控制终端连接的会话期首进程叫做控制进程（controlling process）。当前与终端交互的进程称为前台进程组。其余进程组称为后台进程组。</p>
<p>根据POSIX.1定义：</p>
<p>挂断信号（SIGHUP）默认的动作是终止程序。 </p>
<p>当终端接口检测到网络连接断开，将挂断信号发送给控制进程（会话期首进程）。 </p>
<p>如果会话期首进程终止，则该信号发送到该会话期前台进程组。 </p>
<p>一个进程退出导致一个孤儿进程组中产生时，如果任意一个孤儿进程组进程处于STOP状态，发送SIGHUP和SIGCONT信号到该进程组中所有进程。 </p>
<p>因此当网络断开或终端窗口关闭后，控制进程收到SIGHUP信号退出，会导致该会话期内其他进程退出。</p>
<p><strong>这里我认为我们的进程被杀掉也就是因为ssh与服务器之间的通信断掉了，这个通信断掉之后linux程序就默认将该连接下的所有进程都杀掉</strong></p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>针对上面的问题，上面的参考链接中也有讲解，在此进行一个简单的整理。</p>
<p>这里主要有两个方案，一个是使用nohup指令，另一个是使用screen指令。看完这两个指令之后其实<strong>我更倾向于使用screen指令，因为screen指令更加的强大。
</strong></p>
<h2 id="nohup命令"><a href="#nohup命令" class="headerlink" title="nohup命令"></a>nohup命令</h2><p>nohup命令参考</p>
<p>　　nohup 命令</p>
<p>　　用途：不挂断地运行命令。</p>
<p>语法：nohup Command [ Arg … ] [　&amp; ]</p>
<p>　　描述：nohup 命令运行由 Command 参数和任何相关的 Arg 参数指定的命令，忽略所有挂断(SIGHUP)信号。在注销后使用 nohup 命令运行后台中的程序。要运行后台中的 nohup 命令，添加 &amp; ( 表示”and”的符号)到命令的尾部。</p>
<p>无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。如果标准错误是一个终端，那么把指定的命令写给标准错误的所有输出作为标准输出重定向到相同的文件描述符。</p>
<h3 id="nohup的简单使用"><a href="#nohup的简单使用" class="headerlink" title="nohup的简单使用"></a>nohup的简单使用</h3><p>在执行命令时在命令前面加上nohup，然后回车开始运行。</p>
<p><strong>这时你会发现该有的输出其实并没有输出出来，这个时候不要方，这是因为nohup命令将你的所有输出都输出到了当前文件夹下的nohup.out文件中，自己可以使用vim指令进行一个查看。</strong></p>
<p>nohup命令及其输出文件<br>　　nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang up)。<br>　　该命令的一般形式为：nohup command &amp;<br>　　使用nohup命令提交作业<br>　　如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件：<br>　　nohup command &gt; myout.file 2&gt;&amp;1 &amp;</p>
<p><strong>使用 jobs 查看任务。</strong></p>
<p><strong>使用 fg %n　关闭。</strong></p>
<h2 id="screen命令"><a href="#screen命令" class="headerlink" title="screen命令"></a>screen命令</h2><p>简单来说，Screen是一个可以在多个进程之间多路复用一个物理终端的窗口管理器。Screen中有会话的概念，用户可以在一个screen会话中创建多个screen窗口，在每一个screen窗口中就像操作一个真实的telnet/SSH连接窗口那样。在screen中创建一个新的窗口有这样几种方式：</p>
<p>1．直接在命令行键入screen命令</p>
<p>$ screen<br>Screen将创建一个执行shell的全屏窗口。你可以执行任意shell程序，就像在ssh窗口中那样。在该窗口中键入exit退出该窗口，如果这是该screen会话的唯一窗口，该screen会话退出，否则screen自动切换到前一个窗口。</p>
<p>2．Screen命令后跟你要执行的程序。</p>
<p>$ screen 【后面跟你执行程序的命令】</p>
<p>Screen创建一个执行vi test.c的单窗口会话，退出vi将退出该窗口/会话。</p>
<p>3．以上两种方式都创建新的screen会话。我们还可以在一个已有screen会话中创建新的窗口。在当前screen窗口中键入C-a c ，即Ctrl键+a键，之后再按下c键，screen 在该会话内生成一个新的窗口并切换到该窗口。</p>
<p>screen还有更高级的功能。你可以不中断screen窗口中程序的运行而暂时断开（detach）screen会话，并在随后时间重新连接（attach）该会话，重新控制各窗口中运行的程序。</p>
<h3 id="screen的简单使用"><a href="#screen的简单使用" class="headerlink" title="screen的简单使用"></a>screen的简单使用</h3><p>在所要执行的指令前添加screen.然后程序的运行等一切正常。（nohup的输出是定向到了nohup.out文件中，然而screen指令的输出是直接输出到了屏幕上的）</p>
<p>这个时候如果ssh终端断开了连接。我们只需要再次连接服务器然后输入指令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">screen -ls</div></pre></td></tr></table></figure>
<p>然后会得到类似下面的结果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">There is a screen on:</div><div class="line">	27267.pts-19.TITAN-X	(09/08/2017 03:49:10 PM)	(Detached)</div><div class="line">1 Socket <span class="keyword">in</span> /var/run/screen/S-huanghailiang.</div></pre></td></tr></table></figure>
<p>这里就会显示ssh断开之前的程序，<strong><em>其实断开后程序依然在后台在运行</em></strong>，只是我们这个时候需要将它放到前台来运行。这个时候我们们已经通过screen -ls查询到了线程号是27267了，所以我们只需要执行下面的指令即可恢复到前台了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">screen -r 27267</div></pre></td></tr></table></figure>
<p>如果想杀掉终端可以执行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">kill</span> 27267</div></pre></td></tr></table></figure>
<p>其他更多的指令可以通过screen —help来进行学习。</p>
<p>当然screen还有更多的快捷键值得我们学习。我们可以通过C-a ? 即先按ctrl+a以后再按？即可查看。</p>
<p><strong>通过观察我们可以发现它其实恢复了我们ssh断开前的那个界面。（所有的输出也都会在此显示出来）</strong></p>
<h1 id="注（个人理解）："><a href="#注（个人理解）：" class="headerlink" title="注（个人理解）："></a>注（个人理解）：</h1><p><strong>nohup</strong>虽然可以把所有的输出都写入到nohup.out中间来，但是在面对需要人机交互的时候它就不能正常使用了。另外在我做测试的时候，一旦ssh断开，虽然程序还在后台运行，但是好像并不会再把输出写入到nohup.out文件中，这一点很不好。</p>
<p><strong>screen</strong>相比之下就强大了很多，不仅可以满足人机交互，而且还可以将所有的输出都再次展示出来，方便我们查看。我对screen的理解是，其实它是一个虚拟的终端，我们运行的时候screen指令就为我们创建了一个虚拟的终端，所以我们再次连接后我们打开的还是这个虚拟的终端，所以我们可以更好的进行操作，而且screen支持开很多个终端。</p>
<p>它们两者的共性我认为都已经不受SIGHUP信号的影响了，所以即使断掉了ssh程序依旧会运行。</p>
]]></content>
      
        
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[快速哈达玛变换]]></title>
      <url>/2017/09/06/%E5%BF%AB%E9%80%9F%E5%93%88%E8%BE%BE%E7%8E%9B%E5%8F%98%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h1 id="快速哈达玛变换"><a href="#快速哈达玛变换" class="headerlink" title="快速哈达玛变换"></a>快速哈达玛变换</h1><p>在生成哈达玛矩阵的文章中我已经提到了沃尔什函数，其实也就是快速哈达玛变换，他是针对与压缩感知中压缩过程中对哈达玛矩阵的行进行一个变换，这么做可以更好的压缩图像，并更好的进行解压。</p>
<a id="more"></a>
<h1 id="快速哈达玛矩阵的代码实现"><a href="#快速哈达玛矩阵的代码实现" class="headerlink" title="快速哈达玛矩阵的代码实现"></a>快速哈达玛矩阵的代码实现</h1><p>简单的实现就是写成二进制表示没然后保存反向格雷码就是新矩阵所对应的行号。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> M 128</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> num = <span class="number">1</span>;	<span class="comment">//需要转换的数</span></div><div class="line"><span class="keyword">int</span> number = <span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gray_number</span><span class="params">(<span class="keyword">int</span> num_h)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">int</span>  binary[<span class="number">30</span>];<span class="comment">//保存反向二进制的值 </span></div><div class="line">	<span class="keyword">int</span>  Gray[<span class="number">30</span>];<span class="comment">//保存反向格雷码 </span></div><div class="line"></div><div class="line">	<span class="comment">////////////////////</span></div><div class="line">	<span class="keyword">int</span> M_m = M - <span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> M_num = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		M_m = M_m / <span class="number">2</span>;</div><div class="line">		M_num++;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"M_num=%d"</span>, M_num);</div><div class="line">		<span class="keyword">if</span> (M_m == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">////////////////////</span></div><div class="line">	<span class="built_in">printf</span>(<span class="string">"num_h=%d"</span>, num_h);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		binary[i] = num_h % <span class="number">2</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\ni=%d  binary[i]=%d\n"</span>, i, binary[i]);</div><div class="line">		num_h = num_h / <span class="number">2</span>;</div><div class="line">		i++;</div><div class="line">		<span class="keyword">if</span> (num_h == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">///////////////</span></div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\ni=%d\n"</span>, i);</div><div class="line">	<span class="keyword">for</span> (i = i; i&lt;M_num; i++)</div><div class="line">	&#123;</div><div class="line">		binary[i] = <span class="number">0</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\ni=%d  binary[i]=%d\n"</span>, i, binary[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="comment">////////////</span></div><div class="line">	<span class="keyword">int</span> j = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;i; j++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"binary[j]=%d   %d\n"</span>, binary[j], j);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n%d"</span>, i);</div><div class="line">	<span class="comment">//得到反向的格雷码</span></div><div class="line">	<span class="keyword">int</span> k = <span class="number">0</span>, Gray_num = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (k = <span class="number">0</span>; k&lt;i - <span class="number">1</span>; k++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> ((binary[k] - binary[k + <span class="number">1</span>]) == <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			Gray_num = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			Gray_num = <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		Gray[k] = Gray_num;</div><div class="line">	&#125;</div><div class="line">	Gray[i - <span class="number">1</span>] = binary[i - <span class="number">1</span>];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\nGray\n"</span>, i);</div><div class="line">	<span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;i; j++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>, Gray[j]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\nlast number\n"</span>, i);</div><div class="line">	<span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;i; j++)</div><div class="line">	&#123;</div><div class="line">		number += Gray[j] * <span class="built_in">pow</span>((<span class="keyword">double</span>)<span class="number">2</span>, (<span class="keyword">int</span>)(i - j - <span class="number">1</span>));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"number=%d"</span>, number);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="keyword">return</span> number;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	Gray_number(num);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"number=%d"</span>, number);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 常用的C语言小程序代码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[生成哈达玛矩阵]]></title>
      <url>/2017/09/06/%E7%94%9F%E6%88%90%E5%93%88%E8%BE%BE%E7%8E%9B%E7%9F%A9%E9%98%B5/</url>
      <content type="html"><![CDATA[<h1 id="哈达玛矩阵是什么"><a href="#哈达玛矩阵是什么" class="headerlink" title="哈达玛矩阵是什么"></a>哈达玛矩阵是什么</h1><p>哈达玛（Hadamard)矩阵是由+1和-1元素构成的正交方阵。所谓正交方阵，指它的任意两行（或两列）都是正交的，且任意一行（列）的所有元素的平方和等于方阵的阶数。即：设A为n阶由+1和-1元素构成的方阵，若AA‘=nI（这里A’为A的转置，I为单位方阵），则称A为n阶Hadamard矩阵。<br>　　已有人证明，Hadamard矩阵的阶数都是4的倍数。</p>
<a id="more"></a>
<h1 id="哈达玛矩阵的应用"><a href="#哈达玛矩阵的应用" class="headerlink" title="哈达玛矩阵的应用"></a>哈达玛矩阵的应用</h1><p>本人使用哈达玛矩阵是在压缩感知中知道的，在压缩中进行快速哈达玛变换（沃尔什函数）的变换以后就可以进行图像压缩，之后在运用TVAL3算法就可以进行一个解压缩，来还原原来的图像。现在的压缩比基本都在10%之下。</p>
<h1 id="哈达玛矩阵生成的代码"><a href="#哈达玛矩阵生成的代码" class="headerlink" title="哈达玛矩阵生成的代码"></a>哈达玛矩阵生成的代码</h1><p>这里的M和N表示矩阵的大小。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> M 32 </span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 32</span></div><div class="line"><span class="keyword">int</span> Hadamard[M][N];</div><div class="line"><span class="comment">//生成哈达玛矩阵的函数</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">CreateHadmard</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">long</span> k, temp, result = <span class="number">0</span>;</div><div class="line">	temp = i&amp;j;</div><div class="line">	<span class="keyword">for</span> (k = <span class="number">0</span>; k&lt;<span class="number">32</span>; k++)</div><div class="line">	&#123;</div><div class="line">		result = result + (temp &gt;&gt; k) &amp; <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (result % <span class="number">2</span> == <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">int</span> i, j;</div><div class="line"></div><div class="line">	<span class="built_in">printf</span>(<span class="string">"生成哈达玛矩阵\n"</span>);</div><div class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;M; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j&lt;N; j++)</div><div class="line">		&#123;</div><div class="line">			Hadamard[i][j] = CreateHadmard(i, j);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%3d"</span>, Hadamard[i][j]);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 常用的C语言小程序代码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C语言读取系统当前时间]]></title>
      <url>/2017/09/06/C%E8%AF%AD%E8%A8%80%E8%AF%BB%E5%8F%96%E7%B3%BB%E7%BB%9F%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/</url>
      <content type="html"><![CDATA[<h1 id="C语言读取系统当前时间"><a href="#C语言读取系统当前时间" class="headerlink" title="C语言读取系统当前时间"></a>C语言读取系统当前时间</h1><p>之前编程的时候我们需要来读取当前的时间，或者使用当前的时间对文件进行一个命名等，所以做一个笔记用来备忘。</p>
<a id="more"></a>
<h2 id="读取时间代码"><a href="#读取时间代码" class="headerlink" title="读取时间代码"></a>读取时间代码</h2><p><strong>C语言读取系统时间的代码如下：</strong></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  </span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;  </span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;  </span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">time_t</span> timep,Tim;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">tm</span> *<span class="title">p</span>;</span></div><div class="line">	time(&amp;timep);</div><div class="line">	p =  localtime(&amp;timep); <span class="comment">//此函数获得的tm结构体的时间，是已经进行过时区转化为本地时间     </span></div><div class="line">	<span class="comment">//p = gmtime(&amp;timep); //把日期和时间转换为格林威治(GMT)时间的函数 </span></div><div class="line">	<span class="keyword">int</span> Year = <span class="number">1900</span> + p-&gt;tm_year;</div><div class="line">	<span class="keyword">int</span> Month = <span class="number">1</span> + p-&gt;tm_mon;</div><div class="line">	<span class="keyword">int</span> Day = p-&gt;tm_mday;</div><div class="line">	<span class="keyword">int</span> Hour = p-&gt;tm_hour;</div><div class="line">	<span class="keyword">int</span> Minute = p-&gt;tm_min;</div><div class="line">	<span class="keyword">int</span> Second = p-&gt;tm_sec;	</div><div class="line">	<span class="keyword">char</span> year[<span class="number">20</span>];</div><div class="line">	<span class="keyword">char</span> month[<span class="number">20</span>];</div><div class="line">	<span class="keyword">char</span> day[<span class="number">20</span>];</div><div class="line">	<span class="keyword">char</span> hour[<span class="number">20</span>];</div><div class="line">	<span class="keyword">char</span> minute[<span class="number">20</span>];</div><div class="line">	<span class="keyword">char</span> second[<span class="number">20</span>];	</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"year=%d\n"</span>,Year);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"month=%d\n"</span>, Month);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"day=%d\n"</span>, Day);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"hour=%d\n"</span>, Hour);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"minute=%d\n"</span>, Minute);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"second=%d\n"</span>, Second);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上为简单的系统时间读取。<br>在Windows环境下好像运行是有问题的，这个时候需要在预编译头那里添加 _CRT_SECURE_NO_WARNINGS即可。</p>
<p><strong>localtime</strong>函数获得的tm结构体的时间，是已经进行过时区转化为本地时间，然而gmtime函数是把日期和时间转换为格林威治(GMT)时间的函数。</p>
<h2 id="要用这个时间对文件进行命名"><a href="#要用这个时间对文件进行命名" class="headerlink" title="要用这个时间对文件进行命名"></a>要用这个时间对文件进行命名</h2><p>在我们进行编程的时候有时候需要对文件进行命名，有时候一个程序是不停的循环运行的，我们还要区分程序跑出来的文件结果，所以这个时候我们如果使用时间来对文件命名的话就会方便很多，而且一定不会因为重名而被覆盖。</p>
<p>这个时候我们可以用sprintf和strcat这两个函数进行一个组合。<br>简单的例子如下：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">   <span class="keyword">char</span> name[<span class="number">100</span>] = <span class="string">"1616_"</span>;</div><div class="line"><span class="keyword">char</span> year[<span class="number">20</span>];</div><div class="line"><span class="keyword">char</span> month[<span class="number">20</span>];</div><div class="line"><span class="keyword">char</span> day[<span class="number">20</span>];</div><div class="line"><span class="keyword">char</span> hour[<span class="number">20</span>];</div><div class="line"><span class="keyword">char</span> minute[<span class="number">20</span>];</div><div class="line"><span class="keyword">char</span> second[<span class="number">20</span>];</div><div class="line"><span class="keyword">char</span> txt[<span class="number">5</span>] = <span class="string">".txt"</span>;	</div><div class="line"><span class="built_in">sprintf</span>(year, <span class="string">"%d"</span>, Year);</div><div class="line"><span class="built_in">sprintf</span>(month, <span class="string">"%d"</span>, Month);</div><div class="line"><span class="built_in">sprintf</span>(day, <span class="string">"%d"</span>, Day);</div><div class="line"><span class="built_in">sprintf</span>(hour, <span class="string">"%d"</span>, Hour);</div><div class="line"><span class="built_in">sprintf</span>(minute, <span class="string">"%d"</span>, Minute);</div><div class="line"><span class="built_in">sprintf</span>(second, <span class="string">"%d"</span>, Second);</div><div class="line"><span class="built_in">strcat</span>(name, year);</div><div class="line"><span class="built_in">strcat</span>(name, month);</div><div class="line"><span class="built_in">strcat</span>(name, day);</div><div class="line"><span class="built_in">strcat</span>(name, hour);</div><div class="line"><span class="built_in">strcat</span>(name, minute);</div><div class="line"><span class="built_in">strcat</span>(name, second);</div><div class="line"><span class="built_in">strcat</span>(name, txt);</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 常用的C语言小程序代码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用C语言自己写2048]]></title>
      <url>/2017/09/05/2048/</url>
      <content type="html"><![CDATA[<h1 id="用C语言自己写2048"><a href="#用C语言自己写2048" class="headerlink" title="用C语言自己写2048"></a>用C语言自己写2048</h1><p>2048是之前非常火爆的一个游戏，记得之前上课的时候很多同学都在玩这个游戏。尤其是一些比较无聊的课上玩的人更多。那么我们应该如何用代码自己来实现2048这个游戏的编写呢？</p>
<a id="more"></a>
<p>之前在实验楼网站学习linux的时候碰巧看到了一个教程，所以就试着玩了一下，代码编写也很简单，当然我也无聊的玩到了2048，所以我发现其实实验楼上面给的代码也是有点小bug的，所以我对代码进行了一个简单的更改。</p>
<p>实验楼该教程网址：</p>
<p><a href="https://www.shiyanlou.com/courses/155" target="_blank" rel="external">https://www.shiyanlou.com/courses/155</a></p>
<p><strong><em>下面就是操作及其我修改后的代码：</em></strong></p>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>要实现我们的 2048 小游戏，需要涉及一些数据结构的知识，以及一些 Linux 的系统调用。此外，为了方便在屏幕上使用字符绘图，我们还需要使用一个文本界面的屏幕绘图库 ncurses ，具体到操作就是在编译的时候需要加上 -lcurses 选项。</p>
<p>ncurses 库的安装操作如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libncurses5-dev</div></pre></td></tr></table></figure></p>
<h2 id="我修改后的代码"><a href="#我修改后的代码" class="headerlink" title="我修改后的代码"></a>我修改后的代码</h2><p>创建一个c文件，命名为2048.c</p>
<p>代码如下：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;curses.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">// 4*4方格</span></div><div class="line"><span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line"><span class="comment">// 方格里空格的个数</span></div><div class="line"><span class="keyword">int</span> empty;</div><div class="line"><span class="keyword">int</span> old_y, old_x;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span></span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">cnt_value</span><span class="params">(<span class="keyword">int</span> *new_y, <span class="keyword">int</span> *new_x)</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">game_over</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cnt_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    init();</div><div class="line">    play();</div><div class="line">    endwin();</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> x, y;</div><div class="line"></div><div class="line">    initscr();</div><div class="line">    cbreak();</div><div class="line">    noecho();</div><div class="line">    curs_set(<span class="number">0</span>);</div><div class="line"></div><div class="line">    empty = <span class="number">15</span>;</div><div class="line">    srand(time(<span class="number">0</span>));</div><div class="line">    x = rand() % <span class="number">4</span>;</div><div class="line">    y = rand() % <span class="number">4</span>;</div><div class="line">    a[y][x] = <span class="number">2</span>;</div><div class="line">    draw();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> n, m, x, y;</div><div class="line">    <span class="keyword">char</span> c[<span class="number">4</span>] = &#123;<span class="string">'0'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>&#125;;</div><div class="line"></div><div class="line">    clear();</div><div class="line">    <span class="keyword">for</span>(n = <span class="number">0</span>; n &lt; <span class="number">9</span>; n += <span class="number">2</span>)   <span class="comment">//横线</span></div><div class="line">        <span class="keyword">for</span>(m = <span class="number">0</span>; m &lt; <span class="number">21</span>; m++) &#123;</div><div class="line">            move(n, m);</div><div class="line">            addch(<span class="string">'-'</span>);</div><div class="line">            refresh();</div><div class="line">        &#125;</div><div class="line">    <span class="keyword">for</span>(m = <span class="number">0</span>; m &lt; <span class="number">22</span>; m += <span class="number">5</span>)  <span class="comment">//竖线</span></div><div class="line">        <span class="keyword">for</span>(n = <span class="number">1</span>; n &lt; <span class="number">8</span>; n++) &#123;</div><div class="line">            move(n, m);</div><div class="line">            addch(<span class="string">'|'</span>);</div><div class="line">            refresh();</div><div class="line">        &#125;</div><div class="line">    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)     <span class="comment">//数字</span></div><div class="line">        <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++) &#123;</div><div class="line">            draw_one(y, x);</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> i, m, k, j;</div><div class="line">    <span class="keyword">char</span> c[<span class="number">4</span>] = &#123;<span class="string">'0'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>, <span class="string">'0'</span>&#125;;</div><div class="line"></div><div class="line">    i = a[y][x];</div><div class="line">    m = <span class="number">0</span>;</div><div class="line">    <span class="keyword">do</span> &#123;</div><div class="line">        j = i % <span class="number">10</span>;</div><div class="line">        c[m++] = j + <span class="string">'0'</span>;</div><div class="line">        i = i / <span class="number">10</span>;</div><div class="line">    &#125;<span class="keyword">while</span>(i &gt; <span class="number">0</span>);</div><div class="line">    m = <span class="number">0</span>;</div><div class="line">    k = (x + <span class="number">1</span>) * <span class="number">5</span> - <span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>(c[m] != <span class="string">'0'</span>) &#123;</div><div class="line">        move(<span class="number">2</span>*y+<span class="number">1</span>, k);</div><div class="line">        addch(c[m++]);</div><div class="line">        k--;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> x, y, i, new_x, new_y, tmp;</div><div class="line">    <span class="keyword">int</span> old_empty, move;</div><div class="line">    <span class="keyword">char</span> ch;</div><div class="line"></div><div class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</div><div class="line">        move = <span class="number">0</span>;</div><div class="line">        old_empty = empty;</div><div class="line">        <span class="comment">//draw();</span></div><div class="line">        ch = getch();</div><div class="line">        <span class="keyword">switch</span>(ch) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="string">'A'</span>:</div><div class="line">            <span class="keyword">case</span> <span class="string">'a'</span>:</div><div class="line">                <span class="comment">//从左向右消去相同方块</span></div><div class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</div><div class="line">                    <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; ) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            x++;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = x + <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) &#123;</div><div class="line">                                <span class="keyword">if</span>(a[y][i] == <span class="number">0</span>) &#123;</div><div class="line">                                    <span class="keyword">continue</span>;</div><div class="line">                                &#125;</div><div class="line">                                <span class="keyword">else</span> &#123;</div><div class="line">                                    <span class="keyword">if</span>(a[y][x] == a[y][i]) &#123;</div><div class="line">                                        a[y][x] += a[y][i];</div><div class="line">                                        a[y][i] = <span class="number">0</span>;</div><div class="line">                                        x = i + <span class="number">1</span>;</div><div class="line">                                        empty++;</div><div class="line">                                        <span class="keyword">break</span>;</div><div class="line">                                    &#125;</div><div class="line">                                    <span class="keyword">else</span> &#123;</div><div class="line">                                        x = i;</div><div class="line">                                        <span class="keyword">break</span>;</div><div class="line">                                    &#125;</div><div class="line">                                &#125;</div><div class="line">                            &#125;</div><div class="line">                            x = i;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="comment">//向左移动方块</span></div><div class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</div><div class="line">                    <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = x; (i &gt; <span class="number">0</span>) &amp;&amp; (a[y][i<span class="number">-1</span>] == <span class="number">0</span>); i--) &#123;</div><div class="line">                                a[y][i<span class="number">-1</span>] = a[y][i];</div><div class="line">                                a[y][i] = <span class="number">0</span>;</div><div class="line">                            move = <span class="number">1</span>;</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'D'</span>:</div><div class="line">            <span class="keyword">case</span> <span class="string">'d'</span>:</div><div class="line">                <span class="comment">//从右向左消去相同方块</span></div><div class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</div><div class="line">                    <span class="keyword">for</span>(x = <span class="number">3</span>; x &gt;= <span class="number">0</span>; ) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            x--;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = x - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">                                <span class="keyword">if</span>(a[y][i] == <span class="number">0</span>) &#123;</div><div class="line">                                    <span class="keyword">continue</span>;</div><div class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(a[y][x] == a[y][i]) &#123;</div><div class="line">                                    a[y][x] += a[y][i];</div><div class="line">                                    a[y][i] = <span class="number">0</span>;</div><div class="line">                                    x = i - <span class="number">1</span>;</div><div class="line">                                    empty++;</div><div class="line">                                    <span class="keyword">break</span>;</div><div class="line">                                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                                    x = i;</div><div class="line">                                    <span class="keyword">break</span>;</div><div class="line">                                &#125;</div><div class="line">                            &#125;</div><div class="line">                            x = i;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="comment">//向右移动方块</span></div><div class="line">                <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</div><div class="line">                    <span class="keyword">for</span>(x = <span class="number">3</span>; x &gt;= <span class="number">0</span>; x--) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = x; (i &lt; <span class="number">3</span>) &amp;&amp; (a[y][i+<span class="number">1</span>] == <span class="number">0</span>); i++) &#123;</div><div class="line">                                a[y][i+<span class="number">1</span>] = a[y][i];</div><div class="line">                                a[y][i] = <span class="number">0</span>;</div><div class="line">                            move = <span class="number">1</span>;</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'W'</span>:</div><div class="line">            <span class="keyword">case</span> <span class="string">'w'</span>:</div><div class="line">                <span class="comment">//从上向下消去相同方块</span></div><div class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</div><div class="line">                    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; ) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            y++;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = y + <span class="number">1</span>; i &lt; <span class="number">4</span>; i++) &#123;</div><div class="line">                                <span class="keyword">if</span>(a[i][x] == <span class="number">0</span>) &#123;</div><div class="line">                                    <span class="keyword">continue</span>;</div><div class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(a[y][x] == a[i][x]) &#123;</div><div class="line">                                    a[y][x] += a[i][x];</div><div class="line">                                    a[i][x] = <span class="number">0</span>;</div><div class="line">                                    y = i + <span class="number">1</span>;</div><div class="line">                                    empty++;</div><div class="line">                                    <span class="keyword">break</span>;</div><div class="line">                                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                                    y = i;</div><div class="line">                                    <span class="keyword">break</span>;</div><div class="line">                                &#125;</div><div class="line">                            &#125;</div><div class="line">                            y = i;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="comment">//向上移动方块</span></div><div class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</div><div class="line">                    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = y; (i &gt; <span class="number">0</span>) &amp;&amp; (a[i<span class="number">-1</span>][x] == <span class="number">0</span>); i--) &#123;</div><div class="line">                                a[i<span class="number">-1</span>][x] = a[i][x];</div><div class="line">                                a[i][x] = <span class="number">0</span>;</div><div class="line">                            move = <span class="number">1</span>;</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'S'</span>:</div><div class="line">            <span class="keyword">case</span> <span class="string">'s'</span>:</div><div class="line">                <span class="comment">//从下向上消去相同方块</span></div><div class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</div><div class="line">                    <span class="keyword">for</span>(y = <span class="number">3</span>; y &gt;= <span class="number">0</span>; ) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            y--;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = y - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">                                <span class="keyword">if</span>(a[i][x] == <span class="number">0</span>) &#123;</div><div class="line">                                    <span class="keyword">continue</span>;</div><div class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(a[y][x] == a[i][x]) &#123;</div><div class="line">                                    a[y][x] += a[i][x];</div><div class="line">                                    a[i][x] = <span class="number">0</span>;</div><div class="line">                                    y = i <span class="number">-1</span>;</div><div class="line">                                    empty++;</div><div class="line">                                    <span class="keyword">break</span>;</div><div class="line">                                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                                    y = i;</div><div class="line">                                    <span class="keyword">break</span>;</div><div class="line">                                &#125;</div><div class="line">                            &#125;</div><div class="line">                            y = i;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="comment">//向下移动方块</span></div><div class="line">                <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++)</div><div class="line">                    <span class="keyword">for</span>(y = <span class="number">3</span>; y &gt;= <span class="number">0</span>; y--) &#123;</div><div class="line">                        <span class="keyword">if</span>(a[y][x] == <span class="number">0</span>) &#123;</div><div class="line">                            <span class="keyword">continue</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            <span class="keyword">for</span>(i = y; (i &lt; <span class="number">3</span>) &amp;&amp; (a[i+<span class="number">1</span>][x] == <span class="number">0</span>); i++) &#123;</div><div class="line">                                a[i+<span class="number">1</span>][x] = a[i][x];</div><div class="line">                                a[i][x] = <span class="number">0</span>;</div><div class="line">                            move = <span class="number">1</span>;</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'Q'</span>:</div><div class="line">            <span class="keyword">case</span> <span class="string">'q'</span>:</div><div class="line">                game_over();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(empty &lt;= <span class="number">0</span>)</div><div class="line">            game_over();</div><div class="line">        draw();</div><div class="line">        <span class="comment">//生成新方块</span></div><div class="line">        <span class="keyword">if</span>((empty != old_empty) || (move == <span class="number">1</span>)) &#123;  <span class="comment">//修复了不移动或消除方块也生成新方块的bug</span></div><div class="line">            <span class="keyword">do</span> &#123;</div><div class="line">                new_x = rand() % <span class="number">4</span>;</div><div class="line">                new_y = rand() % <span class="number">4</span>;</div><div class="line">            &#125;<span class="keyword">while</span>(a[new_y][new_x] != <span class="number">0</span>);</div><div class="line"></div><div class="line">            cnt_value(&amp;new_y, &amp;new_x);</div><div class="line"></div><div class="line">            <span class="keyword">do</span> &#123;</div><div class="line">                tmp = rand() % <span class="number">4</span>;</div><div class="line">            &#125;<span class="keyword">while</span>(tmp == <span class="number">0</span> || tmp == <span class="number">2</span>);</div><div class="line">            a[new_y][new_x] = tmp + <span class="number">1</span>;</div><div class="line">            empty--;</div><div class="line"></div><div class="line">            draw_one(new_y, new_x);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cnt_one</span><span class="params">(<span class="keyword">int</span> y, <span class="keyword">int</span> x)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> value = <span class="number">1</span>;</div><div class="line"></div><div class="line">                <span class="keyword">if</span>(y - <span class="number">1</span> &gt; <span class="number">0</span>)  </div><div class="line">                    a[y<span class="number">-1</span>][x] ? <span class="number">0</span> : value++;</div><div class="line">                <span class="keyword">if</span>(y + <span class="number">1</span> &lt; <span class="number">4</span>)</div><div class="line">                    a[y+<span class="number">1</span>][x] ? <span class="number">0</span> : value++;</div><div class="line">                <span class="keyword">if</span>(x - <span class="number">1</span> &gt;= <span class="number">0</span>)</div><div class="line">                    a[y][x<span class="number">-1</span>] ? <span class="number">0</span> : value++;</div><div class="line">                <span class="keyword">if</span>(x + <span class="number">1</span> &lt; <span class="number">4</span>)</div><div class="line">                    a[y][x+<span class="number">1</span>] ? <span class="number">0</span> : value++;</div><div class="line">                <span class="keyword">if</span>(y - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; x - <span class="number">1</span> &gt;= <span class="number">0</span>)</div><div class="line">                    a[y<span class="number">-1</span>][x<span class="number">-1</span>] ? <span class="number">0</span> : value++;</div><div class="line">                <span class="keyword">if</span>(y - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; x + <span class="number">1</span> &lt; <span class="number">4</span>)</div><div class="line">                    a[y<span class="number">-1</span>][x+<span class="number">1</span>] ? <span class="number">0</span> : value++;</div><div class="line">                <span class="keyword">if</span>(y + <span class="number">1</span> &lt; <span class="number">4</span> &amp;&amp; x - <span class="number">1</span> &gt;= <span class="number">0</span>)</div><div class="line">                    a[y+<span class="number">1</span>][x<span class="number">-1</span>] ? <span class="number">0</span> : value++;</div><div class="line">                <span class="keyword">if</span>(y + <span class="number">1</span> &lt; <span class="number">4</span> &amp;&amp; x + <span class="number">1</span> &lt; <span class="number">4</span>)</div><div class="line">                    a[y+<span class="number">1</span>][x+<span class="number">1</span>] ? <span class="number">0</span> : value++;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> value;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">cnt_value</span><span class="params">(<span class="keyword">int</span> *new_y, <span class="keyword">int</span> *new_x)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> max_x, max_y, x, y, value;</div><div class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</div><div class="line"></div><div class="line">    max = cnt_one(*new_y, *new_x);</div><div class="line">    <span class="keyword">for</span>(y = <span class="number">0</span>; y &lt; <span class="number">4</span>; y++)</div><div class="line">        <span class="keyword">for</span>(x = <span class="number">0</span>; x &lt; <span class="number">4</span>; x++) &#123;</div><div class="line">            <span class="keyword">if</span>(!a[y][x]) &#123;</div><div class="line">                value = cnt_one(y, x);</div><div class="line">                <span class="keyword">if</span>(value &gt; max &amp;&amp; old_y != y &amp;&amp; old_x != x) &#123;  <span class="comment">//避免在同一位置反复出现新方块</span></div><div class="line">                    *new_y = y;</div><div class="line">                    *new_x = x;</div><div class="line">                    old_x = x;</div><div class="line">                    old_y = y;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">game_over</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    sleep(<span class="number">1</span>);</div><div class="line">    endwin();</div><div class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="编译程序"><a href="#编译程序" class="headerlink" title="编译程序"></a>编译程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gcc 2048.c -o 2048 -lcurses</div></pre></td></tr></table></figure>
<h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./2048</div></pre></td></tr></table></figure>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>使用“w”;”a”;”s”;”d”;或者”W”;”A”;”S”;”D”来进行移动</p>
<p>效果图如下：</p>
<img src="/images/2048.png">]]></content>
      
        
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu server 硬盘挂载教程]]></title>
      <url>/2017/09/05/Ubuntu-server-%E7%A1%AC%E7%9B%98%E6%8C%82%E8%BD%BD%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="Ubuntu-server-硬盘挂载教程"><a href="#Ubuntu-server-硬盘挂载教程" class="headerlink" title="Ubuntu server 硬盘挂载教程"></a>Ubuntu server 硬盘挂载教程</h1><p>在我们使用服务器的时候，因为使用的人比较多，而且目前做机器学习的人比较多，然而机器学习那边需要训练一些数据，训练集比较大，这就对于我们服务器的存储能力是一个较大的体验，所以一块硬盘已经不能满足我们的需求，我们需要使用多块硬盘来一起存储我们的数据，但是Ubuntu系统要识别多块硬盘需要我们自己配置。</p>
<a id="more"></a>
<p><strong>本人认为有以下几种方法：</strong></p>
<p>1、在安装Ubuntu系统的时候，我们可以手动配置挂载。（这个我们有尝试过，不过理论上应该是可以实现的，不过我们一般比较懒，所以会选择自动分配，这样我们比较省事。然而自动分配的话，系统会让你自己选择一个空硬盘或者一个连续的没有用的磁盘空间进行。）</p>
<p>2、设置磁盘阵列（比如raid），这个好像也是要在安装系统前进行。简单来说就是将多块磁盘的逻辑分区方放到一起来当作一块使用。（不知道这样的理解对不对，不过呢，个人感觉实际效果就是这个样子的）然后再正常安装选择硬盘的时候你会发现有一个很大的硬盘。（当然这种方法可能也有一些限制，比如两块硬盘的大小要一样等要求，需要自己去找）。</p>
<p><strong>如果系统已经装好了，我们要用上面的两种方法我觉得很不现实的，所以有些时候我们需要另想办法的。</strong></p>
<p>3、可以使用LVM技术来创建逻辑分区，这个我在网上看到过，网址如下，感觉讲的还是比较详细的。</p>
<p>参考网址：<a href="http://blog.csdn.net/it_yuan/article/details/19242445" target="_blank" rel="external">http://blog.csdn.net/it_yuan/article/details/19242445</a></p>
<p>4、可以直接使用硬盘进行挂载。（也试用于优盘的挂载，不过是服务器版本，一般我们自己用的桌面版本好像它会自动加载优盘的，服务器版本需要自己手动设置的）</p>
<p>参考网址：<a href="http://zwkufo.blog.163.com/blog/static/258825120141283942244/" target="_blank" rel="external">http://zwkufo.blog.163.com/blog/static/258825120141283942244/</a></p>
<p><strong><em>由于前3种方法我没有亲自尝试，所以这里暂时先不说了，不过网上教程也有的，后面如果有机会的话，我可能会补充进来。所以这里我就简单说一些第四种方法好了。</em></strong></p>
<h1 id="硬盘挂载"><a href="#硬盘挂载" class="headerlink" title="硬盘挂载"></a>硬盘挂载</h1><p>  1、 sudo fdisk –lu (查看当前硬盘及分区情况) 可以看到类似界面</p>
<img src="/images/硬盘挂载教程1.png">
<p>  2、 sudo fdisk /dev/sdb(这里为想要挂载的硬盘名称)，利用该命令可以对硬盘进行分区，具体可以参考网址中的讲解更加详细</p>
<p>  3、 sudo mkfs –t ext4 /dev/sdb(硬盘格式化，-t ext4 表示将分区格式化成ext4文件系统类型)</p>
<p>  4、 sudo df –l(显示硬盘挂载情况)</p>
<p>  sudo mount –t ext4 /dev/sdb(想要挂载的硬盘) /devdata(目标挂载点)</p>
<p>  结束后可以用sudo df –l 查看是否成功</p>
<p>  5、 配置系统启动自动挂载，修改/etc/fstab文件，添加</p>
<p>  /devdata was on /dev/sdb</p>
<p>  UUID=37eaa526-5d96-4237-8468-603df5216ce9  /devdata(挂载点)   ext4   defaults     0     0</p>
<p>  UUID通过sudo blkid 可以查看</p>
<p>  其实好像输入/dev/sdb也是可以的，例如我在实验室服务器上面的挂载如下：</p>
<img src="/images/硬盘挂载教程2.png">
]]></content>
      
        
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git本地库的建立与使用]]></title>
      <url>/2017/09/03/Git%E6%9C%AC%E5%9C%B0%E5%BA%93%E7%9A%84%E5%BB%BA%E7%AB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="Git本地库的建立与使用"><a href="#Git本地库的建立与使用" class="headerlink" title="Git本地库的建立与使用"></a>Git本地库的建立与使用</h1><p>本笔记是自己在网上学习后整理后得到的，主要针对的是本地库的建立以及使用，对于远程库的操作这里暂时不涉及。</p>
<p>本教程的本地库的建立主要是在linux系统上建立，windows上可以使用命令行的git bash 或者带有图形界面的TortoiseGit进行操作，有兴趣的话可以自己学习一下。</p>
<a id="more"></a>
<h1 id="在linux版本上："><a href="#在linux版本上：" class="headerlink" title="在linux版本上："></a>在linux版本上：</h1><p>1、打开终端输入git，如果没有安装，按照提示指令进行安装。例如：sudo apt-get install git。如果已经安装会有如下显示<br><img src="/images/Git本地库的建立与使用1.png"></p>
<p>2、Git的配置<br>设置你的名字和email,就是你提交commit时的签名，每次提交记录里面都会包含这些信息。使用git config命令进行设置。<br><img src="/images/Git本地库的建立与使用2.png"></p>
<p>执行后会在根目录下建立一个叫.gitconfig的文件（该文件为隐藏文件需要使用ls -la查看到）</p>
<img src="/images/Git本地库的建立与使用3.png">
<p>其中隐藏文件.gitconfig的内容可以使用vim或者cat进行查看</p>
<img src="/images/Git本地库的建立与使用4.png">
<p>3、获取一个Git仓库，这里有两种方法，一种是直接clone一个仓库，另一个是初始化一个仓库。这里我们可以直接自己初始化一个仓库，当然clone仓库也是比较简单的，自己看一下就好。<br>首先需要自己创建一个仓库文件夹，路径什么的自己选择就好，创建使用mkdir就好。例如：mkdir project 就是创建了一个叫project的文件。这里我之前自己手动建立好了一个文件夹就直接使用cd命令进去就好了。初始化Git仓库使用git init命令，Git输出如下。</p>
<img src="/images/Git本地库的建立与使用5.png">
<p>使用ls -la 可以看出来有一个.git目录被创建，意味着仓库被初始化。</p>
<p>4、git仓库已经被创建好了，接下来就是一些基本操作了。</p>
<p>   <strong>基本流程：</strong><br>（1）、创建或者修改文件<br>（2）、使用git add命令添加新创建或修改的文件到本地的缓存区（Index）。使用的时候是git add &lt;文件名&gt;或者git add <em> 这</em>说明添加当前文件夹下的所有文件。</p>
<img src="/images/Git本地库的建立与使用6.png">
<p>（3）、使用git commit命令提交到本地代码库。git commit -m “双引号中间是你们提交代码时写的备注”   使用-m的目的是为了添加本次修改的注释，完成后就会记录一个新的版本。除了用git add命令，我们还可以使用git commit -a -m “双引号中间是你们提交代码时写的备注”  将所有没有加入到缓存区的修改也一起提交，但是 -a命令不能添加新建文件。<br><img src="/images/Git本地库的建立与使用7.png"></p>
<p>（4）（这一步我们的工程不需要，因为我们不需要同步到远程的代码库，因为同步到远程的代码库后相当于开源给了所有人,但是后期你们自己使用git的时候是可以使用的）使用git push命令将本地代码库同步到远端代码库。</p>
<p>git status命令查看当前git仓库的状态。</p>
<p>git commit提交了本地代码库以后，可以是使用git diff 命令再加上 —cached参数，看看缓存区中哪些文件被修改了。进入到git diff —cached界面后需要输入q才可以退出。如果没有 —cached参数，git diff会显示当前你所有已经做的但是没有加入到索引里的修改。所有修改完了以后都需要按照上面的步骤加上缓存区，在用commit提交到本地库。</p>
<p><strong>注：</strong>如果是修改文件，也需要使用git add命令添加到缓存区才可以提交。如果是删除文件，则直接使用git rm命令删除后悔自动将已删除文件的信息添加到缓存区，git commit提交后会将本地仓库中的对应文件删除。（【这一步我们不使用】如果本地仓库链接到了远程Git服务器，可以使用git push origin master 命令将本地仓库同步到远端服务器）。</p>
<p>5、git的基本操作以及介绍完了。但是基本都是个人操作的，下面介绍一下如果团队合作的话，每个人写一部分代码，最终合并的话，我们需要使用分支与合并的知识。</p>
<p>（1）、分支</p>
<p>使用 git branch &lt;分支名&gt;来创建分支。这里我将为大家每个人创建一个分支，分支名的命名方式我将使用*表示目前所在的分支。Master是默认的主分支。<br><img src="/images/Git本地库的建立与使用8.png"></p>
<p>使用git checkout  &lt;分支名&gt;来选择切换分支，例如下面我将会切换成我自己的分支：由图可以看到*已经跑到了hhl前面说明现在的分支是hhl。</p>
<img src="/images/Git本地库的建立与使用9.png">
<p>切换到自己的分支以后可以自己更改自己的程序，这样并不会影响到其他分支的程序。</p>
<p>（2）、合并</p>
<p>可以使用git  merge命令来进行合并。例如想合并hhl分支到主分支，则需要先切换到主分支上git checkout master 然后再将hhl分支合并到主分支中，git merge  -m “这里双引号里面依旧是注释”  hhl</p>
<p>-m参数仍然是填写合并的注释信息。</p>
<p>注：如果如果两个想要合并的分支都对同一个文件进行了修改，则在合并的时候会有冲突。这个地方需要我们使用vim编辑器手动解决冲突，然后再add再commit提交。</p>
<p>（【这一步也不需要，后期自己使用可以先了解一下】，合并完分支后，如果想删除分支的话使用 git branch -d &lt;分支名&gt;，这个只针对已经被当前分支合并了的分支，如果你想要前置删除某个分支的话使用 git branch -D &lt;分支名&gt;）</p>
<p><strong>撤销合并：</strong>如果合并完以后，想要把当前修改都放弃，可以使用 git reset —hard HEAD^ 进行撤销合并。</p>
<p>6、查看日志</p>
<p>git log 命令可以显示所有的提交。如果提交的历史纪录很长，回车会逐步显示，输入q可以退出。</p>
<img src="/images/Git本地库的建立与使用10.png">
<p>如果用git log —stat 它会显示在每个提交（commit）中哪些文件被修改，这些文件分别添加或删除多少行内容，这个命令相当于打印详细的提交记录。</p>
<p>小结，基本指令：</p>
<p>（1）git config :配置相关信息</p>
<p>（2）git clone ：复制仓库</p>
<p>（3）git init :初始化仓库</p>
<p>（4）git add ：添加更新内容到</p>
<p>（5）git diff :比较内容</p>
<p>（6）git status :获取当前项目状况</p>
<p>（7）git commit :提交</p>
<p>（8）git branch :分支相关</p>
<p>（9）git checkout :切换分支</p>
<p>（10）git merge :合并分支</p>
<p>（11）git reset :恢复版本</p>
<p>（12）git log :查看日志</p>
]]></content>
      
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[图片转换成字符图]]></title>
      <url>/2017/09/02/%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E6%88%90%E5%AD%97%E7%AC%A6%E5%9B%BE/</url>
      <content type="html"><![CDATA[<h1 id="图片转换成字符图"><a href="#图片转换成字符图" class="headerlink" title="图片转换成字符图"></a>图片转换成字符图</h1><p>因为之前写到了一些好玩的注释模板，当然网上有很多很多好玩的图片，我们不可能完全收集过来，当然也不可能正好有你自己所需要的图片，所以我们需要一个自己将图片转换成字符图的一个代码，这样我们就可以很方便的得到自己想得到的一些字符图。<br><a id="more"></a></p>
<h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h2><p>实验楼有该教程，个人觉得不错，还给了源码，所以摘抄代码下来学习<br><a href="https://www.shiyanlou.com/courses/370" target="_blank" rel="external">https://www.shiyanlou.com/courses/370</a></p>
<h1 id="python实现源码"><a href="#python实现源码" class="headerlink" title="python实现源码"></a>python实现源码</h1><p>编写<strong>ascii.py</strong>源代码</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#-*- coding:utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</div><div class="line"><span class="keyword">import</span> argparse</div><div class="line"></div><div class="line"><span class="comment">#命令行输入参数处理</span></div><div class="line">parser = argparse.ArgumentParser()</div><div class="line"></div><div class="line">parser.add_argument(<span class="string">'file'</span>)     <span class="comment">#输入文件</span></div><div class="line">parser.add_argument(<span class="string">'-o'</span>, <span class="string">'--output'</span>)   <span class="comment">#输出文件</span></div><div class="line">parser.add_argument(<span class="string">'--width'</span>, type = int, default = <span class="number">80</span>) <span class="comment">#输出字符画宽</span></div><div class="line">parser.add_argument(<span class="string">'--height'</span>, type = int, default = <span class="number">80</span>) <span class="comment">#输出字符画高</span></div><div class="line"></div><div class="line"><span class="comment">#获取参数</span></div><div class="line">args = parser.parse_args()</div><div class="line"></div><div class="line">IMG = args.file</div><div class="line">WIDTH = args.width</div><div class="line">HEIGHT = args.height</div><div class="line">OUTPUT = args.output</div><div class="line"></div><div class="line"><span class="comment">#这里的list可以自己定义</span></div><div class="line">ascii_char = list(<span class="string">"$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\|()1&#123;&#125;[]?-_+~&lt;&gt;i!lI;:,\"^`'. "</span>)</div><div class="line"></div><div class="line"><span class="comment"># 将256灰度映射到70个字符上</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_char</span><span class="params">(r,g,b,alpha = <span class="number">256</span>)</span>:</span></div><div class="line">    <span class="keyword">if</span> alpha == <span class="number">0</span>:</div><div class="line">        <span class="keyword">return</span> <span class="string">' '</span></div><div class="line">    length = len(ascii_char)</div><div class="line">    gray = int(<span class="number">0.2126</span> * r + <span class="number">0.7152</span> * g + <span class="number">0.0722</span> * b)</div><div class="line"></div><div class="line">    unit = (<span class="number">256.0</span> + <span class="number">1</span>)/length</div><div class="line">    <span class="keyword">return</span> ascii_char[int(gray/unit)]</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"></div><div class="line">    im = Image.open(IMG)</div><div class="line">    im = im.resize((WIDTH,HEIGHT), Image.NEAREST)</div><div class="line"></div><div class="line">    txt = <span class="string">""</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(HEIGHT):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(WIDTH):</div><div class="line">            txt += get_char(*im.getpixel((j,i)))</div><div class="line">        txt += <span class="string">'\n'</span></div><div class="line"></div><div class="line">    <span class="keyword">print</span> txt</div><div class="line">    </div><div class="line">    <span class="comment">#字符画输出到文件</span></div><div class="line">    <span class="keyword">if</span> OUTPUT:</div><div class="line">        <span class="keyword">with</span> open(OUTPUT,<span class="string">'w'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(txt)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">with</span> open(<span class="string">"output.txt"</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(txt)</div></pre></td></tr></table></figure>
<h2 id="代码的运行"><a href="#代码的运行" class="headerlink" title="代码的运行"></a>代码的运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python ascii.py ascii_dora.png</div></pre></td></tr></table></figure>
<h1 id="根据实验楼的效果展示"><a href="#根据实验楼的效果展示" class="headerlink" title="根据实验楼的效果展示"></a>根据实验楼的效果展示</h1><p>原图<br><img src="/images/ascii_dora.png"></p>
<p>效果图<br><img src="/images/dora_xiaoguo.png"></p>
]]></content>
      
        
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[注释模板（仅供娱乐）]]></title>
      <url>/2017/09/02/%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF%EF%BC%88%E4%BB%85%E4%BE%9B%E5%A8%B1%E4%B9%90%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="注释模板（仅供娱乐）"><a href="#注释模板（仅供娱乐）" class="headerlink" title="注释模板（仅供娱乐）"></a>注释模板（仅供娱乐）</h1><p>今天无意间在网上看到了一些好玩的注释，让我想起之前开始写代码的时候就已经有人开始在代码中添加这些东西，感觉挺好玩的，随手摘抄，仅供娱乐。<br><a id="more"></a></p>
<h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h2><p><a href="http://blog.csdn.net/ouyang_peng/article/details/51803181" target="_blank" rel="external">http://blog.csdn.net/ouyang_peng/article/details/51803181</a><br><a href="http://www.oschina.net/code/snippet_1046345_43901" target="_blank" rel="external">http://www.oschina.net/code/snippet_1046345_43901</a></p>
<h2 id="在VS中直接设置注释模板"><a href="#在VS中直接设置注释模板" class="headerlink" title="在VS中直接设置注释模板"></a>在VS中直接设置注释模板</h2><p>因为我只是觉得好玩，所以摘抄一下，具体设置可以参照上面第一个参考网址进行设置。</p>
<h1 id="佛祖保佑-永无bug"><a href="#佛祖保佑-永无bug" class="headerlink" title="佛祖保佑 永无bug"></a>佛祖保佑 永无bug</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> *                             _ooOoo_</span></div><div class="line"><span class="comment"> *                            o8888888o</span></div><div class="line"><span class="comment"> *                            88" . "88</span></div><div class="line"><span class="comment"> *                            (| -_- |)</span></div><div class="line"><span class="comment"> *                            O\  =  /O</span></div><div class="line"><span class="comment"> *                         ____/`---'\____</span></div><div class="line"><span class="comment"> *                       .'  \\|     |//  `.</span></div><div class="line"><span class="comment"> *                      /  \\|||  :  |||//  \</span></div><div class="line"><span class="comment"> *                     /  _||||| -:- |||||-  \</span></div><div class="line"><span class="comment"> *                     |   | \\\  -  /// |   |</span></div><div class="line"><span class="comment"> *                     | \_|  ''\---/''  |   |</span></div><div class="line"><span class="comment"> *                     \  .-\__  `-`  ___/-. /</span></div><div class="line"><span class="comment"> *                   ___`. .'  /--.--\  `. . __</span></div><div class="line"><span class="comment"> *                ."" '&lt;  `.___\_&lt;|&gt;_/___.'  &gt;'"".</span></div><div class="line"><span class="comment"> *               | | :  `- \`.;`\ _ /`;.`/ - ` : | |</span></div><div class="line"><span class="comment"> *               \  \ `-.   \_ __\ /__ _/   .-` /  /</span></div><div class="line"><span class="comment"> *          ======`-.____`-.___\_____/___.-`____.-'======</span></div><div class="line"><span class="comment"> *                             `=---='</span></div><div class="line"><span class="comment"> *          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></div><div class="line"><span class="comment"> *                     佛祖保佑        永无BUG</span></div><div class="line"><span class="comment"> *            佛曰:</span></div><div class="line"><span class="comment"> *                   写字楼里写字间，写字间里程序员；</span></div><div class="line"><span class="comment"> *                   程序人员写程序，又拿程序换酒钱。</span></div><div class="line"><span class="comment"> *                   酒醒只在网上坐，酒醉还来网下眠；</span></div><div class="line"><span class="comment"> *                   酒醉酒醒日复日，网上网下年复年。</span></div><div class="line"><span class="comment"> *                   但愿老死电脑间，不愿鞠躬老板前；</span></div><div class="line"><span class="comment"> *                   奔驰宝马贵者趣，公交自行程序员。</span></div><div class="line"><span class="comment"> *                   别人笑我忒疯癫，我笑自己命太贱；</span></div><div class="line"><span class="comment"> *                   不见满街漂亮妹，哪个归得程序员？</span></div><div class="line"><span class="comment">*/</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">////////////////////////////////////////////////////////////////////</span></div><div class="line"><span class="comment">//                          _ooOoo_                               //</span></div><div class="line"><span class="comment">//                         o8888888o                              //</span></div><div class="line"><span class="comment">//                         88" . "88                              //</span></div><div class="line"><span class="comment">//                         (| ^_^ |)                              //</span></div><div class="line"><span class="comment">//                         O\  =  /O                              //</span></div><div class="line"><span class="comment">//                      ____/`---'\____                           //</span></div><div class="line"><span class="comment">//                    .'  \\|     |//  `.                         //</span></div><div class="line"><span class="comment">//                   /  \\|||  :  |||//  \                        //</span></div><div class="line"><span class="comment">//                  /  _||||| -:- |||||-  \                       //</span></div><div class="line"><span class="comment">//                  |   | \\\  -  /// |   |                       //</span></div><div class="line"><span class="comment">//                  | \_|  ''\---/''  |   |                       //</span></div><div class="line"><span class="comment">//                  \  .-\__  `-`  ___/-. /                       //</span></div><div class="line"><span class="comment">//                ___`. .'  /--.--\  `. . ___                     //</span></div><div class="line"><span class="comment">//              ."" '&lt;  `.___\_&lt;|&gt;_/___.'  &gt;'"".                  //</span></div><div class="line"><span class="comment">//            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 //</span></div><div class="line"><span class="comment">//            \  \ `-.   \_ __\ /__ _/   .-` /  /                 //</span></div><div class="line"><span class="comment">//      ========`-.____`-.___\_____/___.-`____.-'========         //</span></div><div class="line"><span class="comment">//                           `=---='                              //</span></div><div class="line"><span class="comment">//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        //</span></div><div class="line"><span class="comment">//         佛祖保佑       永无BUG     永不修改                  //</span></div><div class="line"><span class="comment">////////////////////////////////////////////////////////////////////</span></div></pre></td></tr></table></figure>
<h1 id="神兽保佑-代码无BUG！"><a href="#神兽保佑-代码无BUG！" class="headerlink" title="神兽保佑 代码无BUG！"></a>神兽保佑 代码无BUG！</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// ┏┓　　　┏┓</span></div><div class="line"><span class="comment">// ┏┛┻━━━┛┻┓</span></div><div class="line"><span class="comment">// ┃　　　　　　　┃ 　</span></div><div class="line"><span class="comment">// ┃　　　━　　　┃</span></div><div class="line"><span class="comment">// ┃　┳┛　┗┳　┃</span></div><div class="line"><span class="comment">// ┃　　　　　　　┃</span></div><div class="line"><span class="comment">// ┃　　　┻　　　┃</span></div><div class="line"><span class="comment">// ┃　　　　　　　┃</span></div><div class="line"><span class="comment">// ┗━┓　　　┏━┛</span></div><div class="line"><span class="comment">// ┃　　　┃ 神兽保佑　　　　　　　　</span></div><div class="line"><span class="comment">// ┃　　　┃ 代码无BUG！</span></div><div class="line"><span class="comment">// ┃　　　┗━━━┓</span></div><div class="line"><span class="comment">// ┃　　　　　　　┣┓</span></div><div class="line"><span class="comment">// ┃　　　　　　　┏┛</span></div><div class="line"><span class="comment">// ┗┓┓┏━┳┓┏┛</span></div><div class="line"><span class="comment">// ┃┫┫　┃┫┫</span></div><div class="line"><span class="comment">// ┗┻┛　┗┻┛</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * ━━━━━━神兽出没━━━━━━</span></div><div class="line"><span class="comment"> * 　　　┏┓　　　┏┓</span></div><div class="line"><span class="comment"> * 　　┏┛┻━━━┛┻┓</span></div><div class="line"><span class="comment"> * 　　┃　　　　　　　┃</span></div><div class="line"><span class="comment"> * 　　┃　　　━　　　┃</span></div><div class="line"><span class="comment"> * 　　┃　┳┛　┗┳　┃</span></div><div class="line"><span class="comment"> * 　　┃　　　　　　　┃</span></div><div class="line"><span class="comment"> * 　　┃　　　┻　　　┃</span></div><div class="line"><span class="comment"> * 　　┃　　　　　　　┃</span></div><div class="line"><span class="comment"> * 　　┗━┓　　　┏━┛Code is far away from bug with the animal protecting</span></div><div class="line"><span class="comment"> * 　　　　┃　　　┃    神兽保佑,代码无bug</span></div><div class="line"><span class="comment"> * 　　　　┃　　　┃</span></div><div class="line"><span class="comment"> * 　　　　┃　　　┗━━━┓</span></div><div class="line"><span class="comment"> * 　　　　┃　　　　　　　┣┓</span></div><div class="line"><span class="comment"> * 　　　　┃　　　　　　　┏┛</span></div><div class="line"><span class="comment"> * 　　　　┗┓┓┏━┳┓┏┛</span></div><div class="line"><span class="comment"> * 　　　　　┃┫┫　┃┫┫</span></div><div class="line"><span class="comment"> * 　　　　　┗┻┛　┗┻┛</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * ━━━━━━感觉萌萌哒━━━━━━</span></div><div class="line"><span class="comment"> */</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 　　　　　　　　┏┓　　　┏┓</span></div><div class="line"><span class="comment"> * 　　　　　　　┏┛┻━━━┛┻┓</span></div><div class="line"><span class="comment"> * 　　　　　　　┃　　　　　　　┃ 　</span></div><div class="line"><span class="comment"> * 　　　　　　　┃　　　━　　　┃</span></div><div class="line"><span class="comment"> * 　　　　　　　┃　＞　　　＜　┃</span></div><div class="line"><span class="comment"> * 　　　　　　　┃　　　　　　　┃</span></div><div class="line"><span class="comment"> * 　　　　　　　┃...　⌒　...　┃</span></div><div class="line"><span class="comment"> * 　　　　　　　┃　　　　　　　┃</span></div><div class="line"><span class="comment"> * 　　　　　　　┗━┓　　　┏━┛</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　┃　Code is far away from bug with the animal protecting　　　　　　　　　　</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　┃   神兽保佑,代码无bug</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　┃　　　　　　　　　　　</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　┃  　　　　　　</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　┃</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　┃　　　　　　　　　　　</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　┗━━━┓</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　　　　　┣┓</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┃　　　　　　　┏┛</span></div><div class="line"><span class="comment"> * 　　　　　　　　　┗┓┓┏━┳┓┏┛</span></div><div class="line"><span class="comment"> * 　　　　　　　　　　┃┫┫　┃┫┫</span></div><div class="line"><span class="comment"> * 　　　　　　　　　　┗┻┛　┗┻┛</span></div><div class="line"><span class="comment"> */</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> *　　　　　　　　┏┓　　　┏┓+ +</span></div><div class="line"><span class="comment"> *　　　　　　　┏┛┻━━━┛┻┓ + +</span></div><div class="line"><span class="comment"> *　　　　　　　┃　　　　　　　┃ 　</span></div><div class="line"><span class="comment"> *　　　　　　　┃　　　━　　　┃ ++ + + +</span></div><div class="line"><span class="comment"> *　　　　　　 ████━████ ┃+</span></div><div class="line"><span class="comment"> *　　　　　　　┃　　　　　　　┃ +</span></div><div class="line"><span class="comment"> *　　　　　　　┃　　　┻　　　┃</span></div><div class="line"><span class="comment"> *　　　　　　　┃　　　　　　　┃ + +</span></div><div class="line"><span class="comment"> *　　　　　　　┗━┓　　　┏━┛</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃　　　┃　　　　　　　　　　　</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃　　　┃ + + + +</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃　　　┃　　　　Code is far away from bug with the animal protecting　　　　　　　</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃　　　┃ + 　　　　神兽保佑,代码无bug　　</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃　　　┃</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃　　　┃　　+　　　　　　　　　</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃　 　　┗━━━┓ + +</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃ 　　　　　　　┣┓</span></div><div class="line"><span class="comment"> *　　　　　　　　　┃ 　　　　　　　┏┛</span></div><div class="line"><span class="comment"> *　　　　　　　　　┗┓┓┏━┳┓┏┛ + + + +</span></div><div class="line"><span class="comment"> *　　　　　　　　　　┃┫┫　┃┫┫</span></div><div class="line"><span class="comment"> *　　　　　　　　　　┗┻┛　┗┻┛+ + + +</span></div><div class="line"><span class="comment"> */</span></div></pre></td></tr></table></figure>
<h1 id="程序员之歌"><a href="#程序员之歌" class="headerlink" title="程序员之歌"></a>程序员之歌</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> *                      江城子 . 程序员之歌</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> *                  十年生死两茫茫，写程序，到天亮。</span></div><div class="line"><span class="comment"> *                      千行代码，Bug何处藏。</span></div><div class="line"><span class="comment"> *                  纵使上线又怎样，朝令改，夕断肠。</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> *                  领导每天新想法，天天改，日日忙。</span></div><div class="line"><span class="comment"> *                      相顾无言，惟有泪千行。</span></div><div class="line"><span class="comment"> *                  每晚灯火阑珊处，夜难寐，加班狂。</span></div><div class="line"><span class="comment">*/</span></div></pre></td></tr></table></figure>
<h1 id="其他好玩的图片"><a href="#其他好玩的图片" class="headerlink" title="其他好玩的图片"></a>其他好玩的图片</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**********************************************************************</span></div><div class="line"><span class="comment">  .--,       .--,</span></div><div class="line"><span class="comment"> ( (  \.---./  ) )</span></div><div class="line"><span class="comment">  '.__/o   o\__.'</span></div><div class="line"><span class="comment">     &#123;=  ^  =&#125;</span></div><div class="line"><span class="comment">      &gt;  -  &lt;</span></div><div class="line"><span class="comment">     /       \</span></div><div class="line"><span class="comment">    //       \\</span></div><div class="line"><span class="comment">   //|   .   |\\</span></div><div class="line"><span class="comment">   "'\       /'"_.-~^`'-.</span></div><div class="line"><span class="comment">      \  _  /--'         `</span></div><div class="line"><span class="comment">    ___)( )(___</span></div><div class="line"><span class="comment">   (((__) (__)))    高山仰止,景行行止.虽不能至,心向往之。</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">**********************************************************************/</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**********************************************************************</span></div><div class="line"><span class="comment">                       ::</span></div><div class="line"><span class="comment">                      :;J7, :,                        ::;7:</span></div><div class="line"><span class="comment">                      ,ivYi, ,                       ;LLLFS:</span></div><div class="line"><span class="comment">                      :iv7Yi                       :7ri;j5PL</span></div><div class="line"><span class="comment">                     ,:ivYLvr                    ,ivrrirrY2X,</span></div><div class="line"><span class="comment">                     :;r@Wwz.7r:                :ivu@kexianli.</span></div><div class="line"><span class="comment">                    :iL7::,:::iiirii:ii;::::,,irvF7rvvLujL7ur</span></div><div class="line"><span class="comment">                   ri::,:,::i:iiiiiii:i:irrv177JX7rYXqZEkvv17</span></div><div class="line"><span class="comment">                ;i:, , ::::iirrririi:i:::iiir2XXvii;L8OGJr71i</span></div><div class="line"><span class="comment">              :,, ,,:   ,::ir@mingyi.irii:i:::j1jri7ZBOS7ivv,</span></div><div class="line"><span class="comment">                 ,::,    ::rv77iiiriii:iii:i::,rvLq@huhao.Li</span></div><div class="line"><span class="comment">             ,,      ,, ,:ir7ir::,:::i;ir:::i:i::rSGGYri712:</span></div><div class="line"><span class="comment">           :::  ,v7r:: ::rrv77:, ,, ,:i7rrii:::::, ir7ri7Lri</span></div><div class="line"><span class="comment">          ,     2OBBOi,iiir;r::        ,irriiii::,, ,iv7Luur:</span></div><div class="line"><span class="comment">        ,,     i78MBBi,:,:::,:,  :7FSL: ,iriii:::i::,,:rLqXv::</span></div><div class="line"><span class="comment">        :      iuMMP: :,:::,:ii;2GY7OBB0viiii:i:iii:i:::iJqL;::</span></div><div class="line"><span class="comment">       ,     ::::i   ,,,,, ::LuBBu BBBBBErii:i:i:i:i:i:i:r77ii</span></div><div class="line"><span class="comment">      ,       :       , ,,:::rruBZ1MBBqi, :,,,:::,::::::iiriri:</span></div><div class="line"><span class="comment">     ,               ,,,,::::i:  @arqiao.       ,:,, ,:::ii;i7:</span></div><div class="line"><span class="comment">    :,       rjujLYLi   ,,:::::,:::::::::,,   ,:i,:,,,,,::i:iii</span></div><div class="line"><span class="comment">    ::      BBBBBBBBB0,    ,,::: , ,:::::: ,      ,,,, ,,:::::::</span></div><div class="line"><span class="comment">    i,  ,  ,8BMMBBBBBBi     ,,:,,     ,,, , ,   , , , :,::ii::i::</span></div><div class="line"><span class="comment">    :      iZMOMOMBBM2::::::::::,,,,     ,,,,,,:,,,::::i:irr:i:::,</span></div><div class="line"><span class="comment">    i   ,,:;u0MBMOG1L:::i::::::  ,,,::,   ,,, ::::::i:i:iirii:i:i:</span></div><div class="line"><span class="comment">    :    ,iuUuuXUkFu7i:iii:i:::, :,:,: ::::::::i:i:::::iirr7iiri::</span></div><div class="line"><span class="comment">    :     :rk@Yizero.i:::::, ,:ii:::::::i:::::i::,::::iirrriiiri::,</span></div><div class="line"><span class="comment">     :      5BMBBBBBBSr:,::rv2kuii:::iii::,:i:,, , ,,:,:i@petermu.,</span></div><div class="line"><span class="comment">          , :r50EZ8MBBBBGOBBBZP7::::i::,:::::,: :,:,::i;rrririiii::</span></div><div class="line"><span class="comment">              :jujYY7LS0ujJL7r::,::i::,::::::::::::::iirirrrrrrr:ii:</span></div><div class="line"><span class="comment">           ,:  :@kevensun.:,:,,,::::i:i:::::,,::::::iir;ii;7v77;ii;i,</span></div><div class="line"><span class="comment">           ,,,     ,,:,::::::i:iiiii:i::::,, ::::iiiir@xingjief.r;7:i,</span></div><div class="line"><span class="comment">        , , ,,,:,,::::::::iiiiiiiiii:,:,:::::::::iiir;ri7vL77rrirri::</span></div><div class="line"><span class="comment">         :,, , ::::::::i:::i:::i:i::,,,,,:,::i:i:::iir;@Secbone.ii:::</span></div><div class="line"><span class="comment">**********************************************************************/</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐</span></div><div class="line"><span class="comment"> * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐</span></div><div class="line"><span class="comment"> * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘</span></div><div class="line"><span class="comment"> * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐</span></div><div class="line"><span class="comment"> * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│&amp; 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │</span></div><div class="line"><span class="comment"> * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤</span></div><div class="line"><span class="comment"> * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │&#123; [│&#125; ]│ | \ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │</span></div><div class="line"><span class="comment"> * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │</span></div><div class="line"><span class="comment"> * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│" '│ Enter  │               │ 4 │ 5 │ 6 │   │</span></div><div class="line"><span class="comment"> * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤</span></div><div class="line"><span class="comment"> * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │&lt; ,│&gt; .│? /│  Shift   │     │ ↑ │     │ 1 │ 2 │ 3 │   │</span></div><div class="line"><span class="comment"> * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││</span></div><div class="line"><span class="comment"> * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ ← │ ↓ │ → │ │   0   │ . │←─┘│</span></div><div class="line"><span class="comment"> * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘</span></div><div class="line"><span class="comment"> */</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment"> **************************************************************</span></div><div class="line"><span class="comment"> *                                                            *</span></div><div class="line"><span class="comment"> *   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *</span></div><div class="line"><span class="comment"> *    |                     ______                     |      *</span></div><div class="line"><span class="comment"> *    |                  .-"      "-.                  |      *</span></div><div class="line"><span class="comment"> *    |                 /            \                 |      *</span></div><div class="line"><span class="comment"> *    |     _          |              |          _     |      *</span></div><div class="line"><span class="comment"> *    |    ( \         |,  .-.  .-.  ,|         / )    |      *</span></div><div class="line"><span class="comment"> *    |     &gt; "=._     | )(__/  \__)( |     _.=" &lt;     |      *</span></div><div class="line"><span class="comment"> *    |    (_/"=._"=._ |/     /\     \| _.="_.="\_)    |      *</span></div><div class="line"><span class="comment"> *    |           "=._"(_     ^^     _)"_.="           |      *</span></div><div class="line"><span class="comment"> *    |               "=\__|IIIIII|__/="               |      *</span></div><div class="line"><span class="comment"> *    |              _.="| \IIIIII/ |"=._              |      *</span></div><div class="line"><span class="comment"> *    |    _     _.="_.="\          /"=._"=._     _    |      *</span></div><div class="line"><span class="comment"> *    |   ( \_.="_.="     `--------`     "=._"=._/ )   |      *</span></div><div class="line"><span class="comment"> *    |    &gt; _.="                            "=._ &lt;    |      *</span></div><div class="line"><span class="comment"> *    |   (_/                                    \_)   |      *</span></div><div class="line"><span class="comment"> *    |                                                |      *</span></div><div class="line"><span class="comment"> *    '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='      *</span></div><div class="line"><span class="comment"> *                                                            *</span></div><div class="line"><span class="comment"> *           LASCIATE OGNI SPERANZA, VOI CH'ENTRATE           *</span></div><div class="line"><span class="comment"> **************************************************************</span></div><div class="line"><span class="comment"> */</span></div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim操作]]></title>
      <url>/2017/08/25/vim%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h1 id="vim的基本操作"><a href="#vim的基本操作" class="headerlink" title="vim的基本操作"></a>vim的基本操作</h1><p>本人在实验楼学习的时候摘抄下来的，留作自己的笔记。</p>
<a id="more"></a>
<h1 id="游标移动"><a href="#游标移动" class="headerlink" title="游标移动"></a>游标移动</h1><p>按Esc进入普通模式，在该模式下使用方向键或者h,j,k,l键可以移动游标。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>按键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>h</td>
<td>左</td>
</tr>
<tr>
<td>l</td>
<td>右（小写L）</td>
</tr>
<tr>
<td>j</td>
<td>下</td>
</tr>
<tr>
<td>k</td>
<td>上</td>
</tr>
<tr>
<td>w</td>
<td>移动到下一个单词</td>
</tr>
<tr>
<td>b</td>
<td>移动到上一个单词</td>
</tr>
</tbody>
</table>
</div>
<h1 id="进入插入模式"><a href="#进入插入模式" class="headerlink" title="进入插入模式"></a>进入插入模式</h1><p>在普通模式下使用下面的键将进入插入模式，并可以从相应的位置开始输入</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>在当前光标处进行编辑</td>
</tr>
<tr>
<td>I</td>
<td>在行首插入</td>
</tr>
<tr>
<td>A</td>
<td>在行末插入</td>
</tr>
<tr>
<td>a</td>
<td>在光标后插入编辑</td>
</tr>
<tr>
<td>o</td>
<td>在当前行后插入一个新行</td>
</tr>
<tr>
<td>O</td>
<td>在当前行前插入一个新行</td>
</tr>
<tr>
<td>cw</td>
<td>替换从光标所在位置后到一个单词结尾的字符</td>
</tr>
</tbody>
</table>
</div>
<h1 id="命令行模式下保存文档"><a href="#命令行模式下保存文档" class="headerlink" title="命令行模式下保存文档"></a>命令行模式下保存文档</h1><p>从普通模式输入:进入命令行模式，输入w回车，保存文档。输入:w 文件名可以将文档另存为其他文件名或存到其它路径下</p>
<h1 id="命令行模式下退出vim"><a href="#命令行模式下退出vim" class="headerlink" title="命令行模式下退出vim"></a>命令行模式下退出vim</h1><p>从普通模式输入:进入命令行模式，输入wq回车，保存并退出编辑</p>
<p>以下为其它几种退出方式：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>:q!</td>
<td>强制退出，不保存</td>
</tr>
<tr>
<td>:q</td>
<td>退出</td>
</tr>
<tr>
<td>:wq!</td>
<td>强制保存并退出</td>
</tr>
<tr>
<td>:w &lt;文件路径&gt;</td>
<td>另存为</td>
</tr>
<tr>
<td>:saveas 文件路径</td>
<td>另存为</td>
</tr>
<tr>
<td>:x</td>
<td>保存并退出</td>
</tr>
<tr>
<td>:wq</td>
<td>保存并退出</td>
</tr>
</tbody>
</table>
</div>
<h1 id="普通模式下退出vim"><a href="#普通模式下退出vim" class="headerlink" title="普通模式下退出vim"></a>普通模式下退出vim</h1><p>普通模式下输入Shift+zz即可保存退出vim</p>
<h1 id="普通模式下删除vim文本信息"><a href="#普通模式下删除vim文本信息" class="headerlink" title="普通模式下删除vim文本信息"></a>普通模式下删除vim文本信息</h1><p>进入普通模式，使用下列命令可以进行文本快速删除：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>x</td>
<td>删除游标所在的字符</td>
</tr>
<tr>
<td>X</td>
<td>删除游标所在前一个字符</td>
</tr>
<tr>
<td>Delete</td>
<td>同x</td>
</tr>
<tr>
<td>dd</td>
<td>删除整行</td>
</tr>
<tr>
<td>dw</td>
<td>删除一个单词（不适用中文）</td>
</tr>
<tr>
<td>d$或D</td>
<td>删除至行尾</td>
</tr>
<tr>
<td>d^</td>
<td>删除至行首</td>
</tr>
<tr>
<td>dG</td>
<td>删除到文档结尾处</td>
</tr>
<tr>
<td>d1G</td>
<td>删至文档首部</td>
</tr>
</tbody>
</table>
</div>
<p>除此之外，你还可以在命令之前加上数字，表示一次删除多行，如：<br>2dd表示一次删除2行i</p>
<h1 id="重复执行上次命令"><a href="#重复执行上次命令" class="headerlink" title="重复执行上次命令"></a>重复执行上次命令</h1><p>在普通模式下.(小数点)表示重复上一次的命令操作</p>
<h1 id="执行指定次数相同的命令"><a href="#执行指定次数相同的命令" class="headerlink" title="执行指定次数相同的命令"></a>执行指定次数相同的命令</h1><p>进入普通模式输入N<command>，N表示重复后面的次数</p>
<p>例如：输入10x，删除10个连续字符</p>
<p>输入3dd，将会删除3行文本</p>
<p>在普通模式下，你还可以使用dw或者daw(delete a word)删除一个单词，所以你可以很容易的联想到dnw(n替换为相应数字)表示删除n个单词</p>
<h1 id="游标的快速跳转"><a href="#游标的快速跳转" class="headerlink" title="游标的快速跳转"></a>游标的快速跳转</h1><p>普通模式下，下列命令可以让光标快速调转到指定位置，我们分别讨论快速实现<strong>行间</strong>跳转和<strong>行内</strong>跳转</p>
<h2 id="行间跳转"><a href="#行间跳转" class="headerlink" title="行间跳转"></a>行间跳转</h2><div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>nG(n Shift+g)</td>
<td>游标移动到第 n 行(如果默认没有显示行号，请先进入命令模式，输入:set nu以显示行号)</td>
</tr>
<tr>
<td>gg</td>
<td>游标移动到到第一行</td>
</tr>
<tr>
<td>G(Shift+g)</td>
<td>到最后一行</td>
</tr>
</tbody>
</table>
</div>
<p><strong><em>小技巧：你在完成依次跳转后，可以使用Ctrl+o快速回到上一次(跳转前)光标所在位置</em></strong>,这个技巧很实用，比如当你在写代码时，忽然想起有个bug，需要修改，这时候你跳过去改好了，只需要按下Ctrl+o就可以回到你之前的位置。vim中会用很多类似的小技巧就等着你去发掘。</p>
<h2 id="行内跳转"><a href="#行内跳转" class="headerlink" title="行内跳转"></a>行内跳转</h2><p>普通模式下使用下列命令在行内按照单词为单位进行跳转</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>w</td>
<td>到下一个单词的开头</td>
</tr>
<tr>
<td>e</td>
<td>到下一个单词的结尾</td>
</tr>
<tr>
<td>b</td>
<td>到前一个单词的开头</td>
</tr>
<tr>
<td>ge</td>
<td>到前一个单词的结尾</td>
</tr>
<tr>
<td>0或^</td>
<td>到行头</td>
</tr>
<tr>
<td>$</td>
<td>到行尾</td>
</tr>
<tr>
<td>f&lt;字母&gt;</td>
<td>向后搜索&lt;字母&gt;并跳转到第一个匹配的位置(非常实用)</td>
</tr>
<tr>
<td>F&lt;字母&gt;</td>
<td>向前搜索&lt;字母&gt;并跳转到第一个匹配的位置</td>
</tr>
<tr>
<td>t&lt;字母&gt;</td>
<td>向后搜索&lt;字母&gt;并跳转到第一个匹配位置之前的一个字母(不常用)</td>
</tr>
<tr>
<td>T&lt;字母&gt;</td>
<td>向前搜索&lt;字母&gt;并跳转到第一个匹配位置之后的一个字母(不常用)</td>
</tr>
</tbody>
</table>
</div>
<h1 id="复制粘贴和剪切"><a href="#复制粘贴和剪切" class="headerlink" title="复制粘贴和剪切"></a>复制粘贴和剪切</h1><h2 id="复制及粘贴文本"><a href="#复制及粘贴文本" class="headerlink" title="复制及粘贴文本"></a>复制及粘贴文本</h2><p>  ● 普通模式中使用y复制</p>
<pre><code>  ○ 普通模式中，yy复制游标所在的整行（3yy表示复制3行）
  ○ 普通模式中，y^ 复制至行首，或y0。不含光标所在处字符。
  ○ 普通模式中，y$ 复制至行尾。含光标所在处字符。
  ○ 普通模式中，yw 复制一个单词。
  ○ 普通模式中，y2w 复制两个单词。
  ○ 普通模式中，yG 复制至文本末。
  ○ 普通模式中，y1G 复制至文本开头。
</code></pre><p>  ● 普通模式中使用p粘贴</p>
<pre><code>  ○ 普通模式中，p(小写)代表粘贴至光标后（下）
  ○ 普通模式中，P(大写)代表粘贴至光标前（上）
</code></pre><h2 id="剪切及粘贴"><a href="#剪切及粘贴" class="headerlink" title="剪切及粘贴"></a>剪切及粘贴</h2><p>其实前面讲得dd删除命令就是剪切，你每次dd删除文档内容后，便可以使用p来粘贴，也这一点可以让我们实现一个很爽快的功能——交换上下行</p>
<h1 id="字符的替换及撤销-Undo操作"><a href="#字符的替换及撤销-Undo操作" class="headerlink" title="字符的替换及撤销(Undo操作)"></a>字符的替换及撤销(Undo操作)</h1><h2 id="替换和撤销-Undo-命令"><a href="#替换和撤销-Undo-命令" class="headerlink" title="替换和撤销(Undo)命令"></a>替换和撤销(Undo)命令</h2><p>替换和Undo命令都是针对普通模式下的操作</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>r+&lt;待替换字母&gt;</td>
<td>将游标所在字母替换为指定字母</td>
</tr>
<tr>
<td>R</td>
<td>连续替换，直到按下Esc</td>
</tr>
<tr>
<td>cc</td>
<td>替换整行，即删除游标所在行，并进入插入模式</td>
</tr>
<tr>
<td>cw</td>
<td>替换一个单词，即删除一个单词，并进入插入模式</td>
</tr>
<tr>
<td>C(大写)</td>
<td>替换游标以后至行末~反转游标所在字母大小写</td>
</tr>
<tr>
<td>u{n}</td>
<td>撤销一次或n次操作</td>
</tr>
<tr>
<td>U(大写)</td>
<td>撤销当前行的所有修改</td>
</tr>
<tr>
<td>Ctrl+r</td>
<td>redo，即撤销undo的操作</td>
</tr>
</tbody>
</table>
</div>
<h1 id="快速缩进"><a href="#快速缩进" class="headerlink" title="快速缩进"></a>快速缩进</h1><p><strong>使用命令进行快速调整缩进操作</strong></p>
<pre><code>● 普通模式下输入15G，跳转到15行
● 普通模式下输入&gt;&gt; 整行将向右缩进（使用，用于格式化代码超爽）
● 普通模式下输入&lt;&lt; 整行向左回退
● 普通模式下输入:进入命令行模式下对shiftwidth值进行设置可以控制缩进和回退的字符数
</code></pre><h1 id="shiftwidth命令"><a href="#shiftwidth命令" class="headerlink" title="shiftwidth命令"></a>shiftwidth命令</h1><p>shiftwidth命令是指上一节&gt;&gt;命令产生的缩进（可以简写成sw）</p>
<p>普通模式下输入:进入命令行模式下对shiftwidth值进行设置可以控制缩进和回退的字符数</p>
<p>获取目前的设定值</p>
<pre><code>:set shiftwidth?
</code></pre><p>设置缩进为10个字符</p>
<pre><code>:set shiftwidth=10
</code></pre><p>输入ESC回到普通模式，再次尝试&gt;&gt;看缩进量是否变化</p>
<h1 id="调整文本位置"><a href="#调整文本位置" class="headerlink" title="调整文本位置"></a>调整文本位置</h1><p>命令行模式下输入:ce(center)命令使本行内容居中</p>
<pre><code>:ce
</code></pre><p>命令行模式下输入:ri(right)命令使本行文本靠右</p>
<pre><code>:ri
</code></pre><p>命令行模式下输入:le(left)命令使本行内容靠左</p>
<pre><code>:le
</code></pre><h1 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h1><h2 id="快速查找"><a href="#快速查找" class="headerlink" title="快速查找"></a>快速查找</h2><p>普通模式下输入/然后键入需要查找的字符串 按回车后就会进行查找。</p>
<p>？与/功能相同，只不过？是向上而/是向下查找。</p>
<p>进入查找之后，输入n和N可以继续查找</p>
<p>n表示继续查找，N反向查找</p>
<h2 id="高级查找"><a href="#高级查找" class="headerlink" title="高级查找"></a>高级查找</h2><pre><code>● 普通模式下输入\*寻找游标所在处的单词
● 普通模式下输入\#同上，但 \# 是向前（上）找，\*则是向后（下）找
● 普通模式下输入g\*同\* ，但部分符合该单词即可
● 普通模式下输入g\#同\# ，但部分符合该单词即可
</code></pre><p>以上查找n,N 的继续查找命令依然可以用</p>
<h1 id="多文件编辑"><a href="#多文件编辑" class="headerlink" title="多文件编辑"></a>多文件编辑</h1><p><strong>使用vim编辑多个文件</strong><br>编辑多个文件有两种形式，一种是在进入vim前使用的参数就是多个文件。另一种就是进入vim后再编辑其他的文件。<br>同时创建两个新文件并编辑</p>
<pre><code>$ vim 1.txt 2.txt
</code></pre><p>默认进入1.txt文件的编辑界面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">● 命令行模式下输入:n编辑2.txt文件，可以加!即:n!强制切换，之前一个文件的输入没有保存，仅仅切换到另一个文件</div><div class="line">● 命令行模式下输入:N编辑1.txt文件，可以加!即:N!强制切换，之前文件内的输入没有保存，仅仅是切换到另一个文件</div></pre></td></tr></table></figure></p>
<p>进入vim后打开新文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">● 命令行模式下输入:e 3.txt 打开新文件3.txt</div><div class="line">● 命令行模式下输入:e# 回到前一个文件</div><div class="line">● 命令行模式下输入:ls可以列出以前编辑过的文档</div><div class="line">● 命令行模式下输入:b 2.txt（或者编号）可以直接进入文件2.txt编辑</div><div class="line">● 命令行模式下输入:bd 2.txt（或者编号）可以删除以前编辑过的列表中的文件项目</div><div class="line">● 命令行模式下输入:e! 4.txt，新打开文件4.txt，放弃正在编辑的文件</div><div class="line">● 命令行模式下输入:f 显示正在编辑的文件名</div><div class="line">● 命令行模式下输入:f new.txt，改变正在编辑的文件名字为new.txt</div></pre></td></tr></table></figure></p>
<h1 id="恢复文件"><a href="#恢复文件" class="headerlink" title="恢复文件"></a>恢复文件</h1><p>如果因为断电等原因造成文档没有保存，可以采用恢复方式，vim -r进入文档后，输入:ewcover 1.txt来恢复</p>
<pre><code>$ vim -r 1.txt
</code></pre><h1 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h1><h2 id="可视模式命令简介"><a href="#可视模式命令简介" class="headerlink" title="可视模式命令简介"></a>可视模式命令简介</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">● 在普通模式下输入v（小写），进入字符选择模式，就可以移动光标，光标走过的地方就会选取。再次按下v会后就会取消选取。 </div><div class="line">● 在普通模式下输入Shift+v（小写），进入行选择模式，按下V之后就会把整行选取，您可以上下移动光标选更多的行，同样，再按一次Shift+v就可以取消选取。</div><div class="line">● 在普通模式下输入 Ctrl+v（小写），这是区域选择模式，可以进行矩形区域选择，再按一次Ctrl+v取消选取。</div><div class="line">● 在可视模式下输入d删除选取区域内容</div><div class="line">● 在可视模式下输入y复制选取区域内容</div></pre></td></tr></table></figure>
<h1 id="视窗操作"><a href="#视窗操作" class="headerlink" title="视窗操作"></a>视窗操作</h1><h2 id="视窗操作简介"><a href="#视窗操作简介" class="headerlink" title="视窗操作简介"></a>视窗操作简介</h2><p>vim可以在一个界面里打开多个窗口进行编辑，这些编辑窗口称为vim的视窗。</p>
<p>打开方法有很多种，例如可以使用在命令行模式下输入:new 打开一个新的vim视窗，并进入视窗编辑一个新文件（普通模式下输入Ctrl+w也可以,但是Ctrl+w在chrome下会与chrome关闭标签页的快捷键冲突，所以使用该快捷键你可以在IE或其它浏览器进行练习），除了:new命令，下述列举的多种方法也可以在命令模式或普通模式下打开新的视窗：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">● 命令行模式下输入:sp 1.txt 打开新的水平分屏视窗来编辑1.txt</div><div class="line">● 命令行模式下输入:vsp 2.txt 打开新的垂直分屏视窗来编辑2.txt</div><div class="line">● 普通模式下Ctrl-w s 将当前窗口分割成两个水平的窗口</div><div class="line">● 普通模式下Ctrl-w v 将当前窗口分割成两个垂直的窗口</div><div class="line">● 普通模式下Ctrl-w q 即 :q 结束分割出来的视窗。如果在新视窗中有输入需要使用强制符！即:q!</div><div class="line">● 普通模式下Ctrl-w o 打开一个视窗并且隐藏之前的所有视窗</div><div class="line">● 普通模式下Ctrl-w j 移至下面视窗</div><div class="line">● 普通模式下Ctrl-w k 移至上面视窗</div><div class="line">● 普通模式下Ctrl-w h 移至左边视窗</div><div class="line">● 普通模式下Ctrl-w l 移至右边视窗</div><div class="line">● 普通模式下Ctrl-w J 将当前视窗移至下面</div><div class="line">● 普通模式下Ctrl-w K 将当前视窗移至上面</div><div class="line">● 普通模式下Ctrl-w H 将当前视窗移至左边</div><div class="line">● 普通模式下Ctrl-w L 将当前视窗移至右边</div><div class="line">● 普通模式下Ctrl-w - 减小视窗的高度</div><div class="line">● 普通模式下Ctrl-w + 增加视窗的高度</div></pre></td></tr></table></figure></p>
<h1 id="文档加密"><a href="#文档加密" class="headerlink" title="文档加密"></a>文档加密</h1><h2 id="创建加密文档"><a href="#创建加密文档" class="headerlink" title="创建加密文档"></a>创建加密文档</h2><pre><code>$ vim -x file1
</code></pre><p>输入您的密码</p>
<p>确认密码</p>
<p>这样在下一次打开时，vim就会要求你输入密码</p>
<h1 id="在vim执行外部命令"><a href="#在vim执行外部命令" class="headerlink" title="在vim执行外部命令"></a>在vim执行外部命令</h1><p>在命令行模式中输入!可以执行外部的shell命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">● :!ls 用于显示当前目录的内容</div><div class="line">● :!rm FILENAME用于删除名为 FILENAME 的文件</div><div class="line">● :w FILENAME可将当前 VIM 中正在编辑的文件另存为 FILENAME 文件</div></pre></td></tr></table></figure></p>
<h1 id="帮助系统"><a href="#帮助系统" class="headerlink" title="帮助系统"></a>帮助系统</h1><h2 id="vim中的查看帮助"><a href="#vim中的查看帮助" class="headerlink" title="vim中的查看帮助"></a>vim中的查看帮助</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">● 普通模式下按F1打开vim自己预设的帮助文档</div><div class="line">● 命令行模式下输入:h shiftwidth 打开名为shiftwidth的帮助文件</div><div class="line">● 命令行模式下输入:ver 显示版本及参数</div></pre></td></tr></table></figure>
<h1 id="功能设定"><a href="#功能设定" class="headerlink" title="功能设定"></a>功能设定</h1><h2 id="vim的功能设定"><a href="#vim的功能设定" class="headerlink" title="vim的功能设定"></a>vim的功能设定</h2><p>可以在编辑文件的时候进行功能设定，如命令行模式下输入:set nu（显示行数），设定值退出vim后不会保存。要永久保存配置需要修改vim配置文件。</p>
<p>vim的配置文件~/.vimrc(实验楼环境中配置文件在/etc/vim/vimrc)，可以打开文件进行修改，不过务必小心不要影响vim正常使用</p>
<h1 id="获取目前的设定"><a href="#获取目前的设定" class="headerlink" title="获取目前的设定"></a>获取目前的设定</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">● 命令行模式下输入:set或者:se显示所有修改过的配置</div><div class="line">● 命令行模式下输入:set all 显示所有的设定值</div><div class="line">● 命令行模式下输入:set option? 显示option的设定值</div><div class="line">● 命令行模式下输入:set nooption 取消当期设定值</div></pre></td></tr></table></figure>
<h1 id="set功能的说明"><a href="#set功能的说明" class="headerlink" title="set功能的说明"></a>set功能的说明</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">● 命令行模式下输入:set autoindent(ai) 设置自动缩进</div><div class="line">● 命令行模式下输入:set autowrite(aw) 设置自动存档，默认未打开</div><div class="line">● 命令行模式下输入:set background=dark或light，设置背景风格</div><div class="line">● 命令行模式下输入:set backup(bk) 设置自动备份，默认未打开</div><div class="line">● 命令行模式下输入: set cindent(cin) 设置C语言风格缩进</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> ubuntu基本操作 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[服务器安装问题补充（安装时Select and install software失败）]]></title>
      <url>/2017/08/25/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E8%A1%A5%E5%85%85/</url>
      <content type="html"><![CDATA[<h1 id="服务器安装问题补充"><a href="#服务器安装问题补充" class="headerlink" title="服务器安装问题补充"></a>服务器安装问题补充</h1><p>之前写好的服务器安装教程已经写好了，针对与大部分服务器的安装应该都可以正常安装了，但是近期安装实验室服务器的时候遇到了问题。安装时Select and install software失败，这个问题在以前没有遇到过，不过也有可能时启动盘做的有问题吧，不过是刚从ubuntu官网上下载的系统做的启动盘，有点迷，不过先记录一下好了。</p>
<img src="/images/服务器安装问题补充.jpg">
<a id="more"></a>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="先跳过该步骤"><a href="#先跳过该步骤" class="headerlink" title="先跳过该步骤"></a>先跳过该步骤</h2><p>根据系统的提示遇到这个步骤的时候我们可以选择重新再来一次，也可以直接跳过该步骤，这个地方我尝试过，就算你重新再来几次也是这样的。当然如果你选择重新安装系统，如果没有换系统盘的话还是这样的，换了以后我也不确定的。</p>
<p>所以再此我选择跳过此步骤，直接开始下面的安装，最后安装完成，重启完成</p>
<h2 id="跳过后的问题及解决方案"><a href="#跳过后的问题及解决方案" class="headerlink" title="跳过后的问题及解决方案"></a>跳过后的问题及解决方案</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>跳过上面的步骤以后我们发现我们可以正常的进入系统。但是呢，在这个时候我们开始安装一些必要的软件的时候，我们会发现根本找不到安装包的，并且在输入的时候也不能补全命令。</p>
<h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="无法找到安装包"><a href="#无法找到安装包" class="headerlink" title="无法找到安装包"></a>无法找到安装包</h4><p>这个时候我们可以发现其实是因为我们apt的源有问题，当然开始的时候它也会让你找CD的路径来进行安装，虽然应该可以通过外接CD或者硬盘然后通过路径来安装，不过这样很是麻烦，所以我们必须要修复它。</p>
<p>这个时候我们可以去更新apt的源，这里建议使用清华的源，比较方便比较快。<br>清华源的网站：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></p>
<p>具体操作（因为没有安装vim呢，所以这里我们只能使用vi或者nano来进行文件系统的改写）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/apt/sources.list</div></pre></td></tr></table></figure>
<p>然后可以把里面的东西都删除掉或者使用“#”都注释掉<br>下面开始往里面方源了，vi的操作跟vim的操作是一样的</p>
<p>下面是我填写的源，可以照着填：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse</div></pre></td></tr></table></figure></p>
<h4 id="无法自动补全命令"><a href="#无法自动补全命令" class="headerlink" title="无法自动补全命令"></a>无法自动补全命令</h4><p>为了提高我们的效率我们一般会用Tab键进行补全的，这个时候我在进行安装的时候install并不能自动补全，所以我进行如下操作：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install bash-completion</div></pre></td></tr></table></figure>
<p>然后重启就可以了，问题解决。</p>
<h1 id="服务器的远程配置"><a href="#服务器的远程配置" class="headerlink" title="服务器的远程配置"></a>服务器的远程配置</h1><p>正常安装ubuntu系统的时候在出错的这一步我们其实是可以选择打开ssh远程登陆的，但是此时系统安装这一步出错了，我们应该怎么打开ssh远程登陆的，毕竟对于服务器我们不能每个人都坐在服务器前面插个显示器来用。</p>
<h2 id="首先安装ssh"><a href="#首先安装ssh" class="headerlink" title="首先安装ssh"></a>首先安装ssh</h2><pre><code>sudo apt-get install openssh-server
</code></pre><p>理论上来说安装了ssh以后服务器的ssh会自动打开的，如果不放心可以查看一下</p>
<pre><code>ps -e |grep ssh
</code></pre><p>如果看到sshd那说明ssh-server已经启动了。<br>如果没有则可以这样启动：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/ssh start</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service ssh start</div></pre></td></tr></table></figure></p>
<p>ssh-server配置文件位于/etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号<br>然后重启SSH服务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/ssh stop</div><div class="line">sudo /etc/init.d/ssh start</div></pre></td></tr></table></figure></p>
<h2 id="禁用root登陆"><a href="#禁用root登陆" class="headerlink" title="禁用root登陆"></a>禁用root登陆</h2><p>其实这个也可以不禁用的，但是为了安全，我们一般都是禁用root直接远程登陆的。<br>禁用的方法：<br>修改/etc/ssh/ssh_config文件<br>将其中的PermitRootLogin改成no就可以了，不过如果配置文件中没有这个的话，也可以直接手动输入。<br>然后重启ssh服务就可以了</p>
<pre><code>/etc/rc.d/sshd restart
</code></pre><p>当然如果为了安全的话，其实我们可以直接禁用掉密码登陆，采取用密钥登陆的方式，这样更安全。因为其实你的密码很容易被别人截获的，这个可以参看之前的博客进行设置。<br>另外补充一句：其实咱们使用的账户及密码等信息保存在 /etc/passwd 以及 /etc/shadow 中，密码采用crypt（）算法加密保存了而已。</p>
]]></content>
      
        
        <tags>
            
            <tag> 手把手教你配置Ubuntu server服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C语言编写程序计时]]></title>
      <url>/2017/08/22/C%E8%AF%AD%E8%A8%80%E7%BC%96%E5%86%99%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%97%B6/</url>
      <content type="html"><![CDATA[<h1 id="C语言编写程序计时"><a href="#C语言编写程序计时" class="headerlink" title="C语言编写程序计时"></a>C语言编写程序计时</h1><p>在我们编程的时候，有时候需要我们去监测程序运行的时间问题，尤其是在做加速或者做优化的时候，一个程序运行的时间也许就是我们判断程序好坏的标准，所以我们有时候要进行计时。（因为用到了，所以做个记录方便下次查看）</p>
<a id="more"></a>
<h2 id="在windows上进行计时"><a href="#在windows上进行计时" class="headerlink" title="在windows上进行计时"></a>在windows上进行计时</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"time.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">clock_t</span> start_time, finish_time;<span class="comment">/*计时*/</span></div><div class="line"><span class="keyword">double</span> cord_time;<span class="comment">/*计时*/</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	start_time = clock();<span class="comment">/*****************************计时开始***********************************/</span></div><div class="line">    <span class="comment">/*******************/</span></div><div class="line">    <span class="comment">/*这里编写程序*/</span></div><div class="line">    <span class="comment">/*******************/</span></div><div class="line">    finish_time = clock();<span class="comment">/***************************计时结束***********************************/</span></div><div class="line">     <span class="comment">//显示总的用时</span></div><div class="line">	cord_time = (<span class="keyword">double</span>)(finish_time - start_time) ;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"time=%f ms\n"</span>, cord_time);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="在linux上进行计时"><a href="#在linux上进行计时" class="headerlink" title="在linux上进行计时"></a>在linux上进行计时</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">time_substract</span><span class="params">(struct timeval *result, struct timeval *begin,struct timeval *end)</span></span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">if</span>(begin-&gt;tv_sec &gt; end-&gt;tv_sec)    <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    <span class="keyword">if</span>((begin-&gt;tv_sec == end-&gt;tv_sec) &amp;&amp; (begin-&gt;tv_usec &gt; end-&gt;tv_usec)) <span class="keyword">return</span> <span class="number">-2</span>;</div><div class="line">    result-&gt;tv_sec = (end-&gt;tv_sec - begin-&gt;tv_sec);</div><div class="line">    result-&gt;tv_usec = (end-&gt;tv_usec - begin-&gt;tv_usec);</div><div class="line">    <span class="keyword">if</span>(result-&gt;tv_usec &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        result-&gt;tv_sec--;</div><div class="line">        result-&gt;tv_usec += <span class="number">1000000</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">start</span>,<span class="title">stop</span>,<span class="title">diff</span>;</span></div><div class="line">    <span class="built_in">memset</span>(&amp;start,<span class="number">0</span>,<span class="keyword">sizeof</span>(struct timeval));</div><div class="line">    <span class="built_in">memset</span>(&amp;stop,<span class="number">0</span>,<span class="keyword">sizeof</span>(struct timeval));</div><div class="line">    <span class="built_in">memset</span>(&amp;diff,<span class="number">0</span>,<span class="keyword">sizeof</span>(struct timeval));</div><div class="line">    gettimeofday(&amp;start,<span class="number">0</span>);</div><div class="line">    <span class="comment">/*******************/</span></div><div class="line">    <span class="comment">/*这里编写程序*/</span></div><div class="line">    <span class="comment">/*******************/</span></div><div class="line">    gettimeofday(&amp;stop,<span class="number">0</span>);</div><div class="line">    time_substract(&amp;diff,&amp;start,&amp;stop);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Total time : %d s,%d us\n"</span>,(<span class="keyword">int</span>)diff.tv_sec,(<span class="keyword">int</span>)diff.tv_usec);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 常用的C语言小程序代码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C 语言TXT文件的读写]]></title>
      <url>/2017/08/22/C-%E8%AF%AD%E8%A8%80TXT%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%86%99/</url>
      <content type="html"><![CDATA[<h1 id="C语言编写TXT文件的读写"><a href="#C语言编写TXT文件的读写" class="headerlink" title="C语言编写TXT文件的读写"></a>C语言编写TXT文件的读写</h1><p>本问针对的是对txt文件中数据的读写操作（非二进制的，二进制的可能后面会补充）,因为用到做个记录。</p>
<a id="more"></a>
<h2 id="C语言编写TXT文件的读"><a href="#C语言编写TXT文件的读" class="headerlink" title="C语言编写TXT文件的读"></a>C语言编写TXT文件的读</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Read_file</span><span class="params">(<span class="keyword">double</span> **Matrix, <span class="keyword">char</span> *FileName, <span class="keyword">int</span> height, <span class="keyword">int</span> wide)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	FILE *fp = fopen(FileName, <span class="string">"r"</span>);</div><div class="line">	<span class="keyword">if</span> (!fp)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"can't open file\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; height; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; wide; j++)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">fscanf</span>(fp, <span class="string">"%lf"</span>, &amp;Matrix[i][j]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	fclose(fp);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="C语言编写TXT文件的写"><a href="#C语言编写TXT文件的写" class="headerlink" title="C语言编写TXT文件的写"></a>C语言编写TXT文件的写</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">FILE *fp = fopen(output, <span class="string">"w+"</span>);</div><div class="line"><span class="keyword">if</span> (!fp)</div><div class="line">&#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"can't open file\n"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; FC_height; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; FC_wide; j++)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">fprintf</span>(fp, <span class="string">"%lf\t"</span>, FC_matrix[i][j]);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">fprintf</span>(fp, <span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">	fclose(fp);</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 常用的C语言小程序代码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[文件脚本编写问题]]></title>
      <url>/2017/08/17/%E6%96%87%E4%BB%B6%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99%E9%97%AE%E9%A2%98-by%E9%BB%84%E6%B5%B7%E4%BA%AE/</url>
      <content type="html"><![CDATA[<h1 id="文件脚本编写问题"><a href="#文件脚本编写问题" class="headerlink" title="文件脚本编写问题"></a>文件脚本编写问题</h1><p>在编写脚本的时候我们可能会遇到一些各种各样的小问题，比如放置位置，以及使用权限等。</p>
<a id="more"></a>
<p>文件脚本编写好以后可以直接放置到 /usr/local/sbin 目录下面，这样就可以不用去申请环境变量了，使用起来也就比较方便了。</p>
<p>chmod a+x [文件名]  付给权限</p>
]]></content>
      
        
        <tags>
            
            <tag> Hadoop脚本编写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[清理集群的脚本]]></title>
      <url>/2017/08/17/%E6%B8%85%E7%90%86%E9%9B%86%E7%BE%A4%E7%9A%84%E8%84%9A%E6%9C%AC-by%E9%BB%84%E6%B5%B7%E4%BA%AE/</url>
      <content type="html"><![CDATA[<h1 id="清理集群的脚本"><a href="#清理集群的脚本" class="headerlink" title="清理集群的脚本"></a>清理集群的脚本</h1><p>该脚本旨在重新配置hadoop的时候我们需要清理一下集群中的东西，比如记录等。</p>
<a id="more"></a>
<h1 id="clear-sh源代码例子"><a href="#clear-sh源代码例子" class="headerlink" title="clear.sh源代码例子"></a>clear.sh源代码例子</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">stop-all.sh</div><div class="line">xrm.sh /tmp/hadoop</div><div class="line">xrm.sh /hadoop/logs</div><div class="line"><span class="built_in">echo</span> <span class="string">"clean done!"</span></div><div class="line">(主要为了清除tmp下面的文件hadoop还有logs)</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Hadoop脚本编写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初始化集群]]></title>
      <url>/2017/08/17/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%9B%86%E7%BE%A4-by%E9%BB%84%E6%B5%B7%E4%BA%AE/</url>
      <content type="html"><![CDATA[<h1 id="初始化集群"><a href="#初始化集群" class="headerlink" title="初始化集群"></a>初始化集群</h1><p>该脚本主要时对第一次使用集群的时候进行一个初始化。</p>
<a id="more"></a>
<h1 id="init-sh源代码例子"><a href="#init-sh源代码例子" class="headerlink" title="init.sh源代码例子"></a>init.sh源代码例子</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"> hdfs namenode -format</div><div class="line">start-all.sh</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">start-dfs.sh</div><div class="line">start-yarn.sh</div></pre></td></tr></table></figure></p>
<h1 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/hdfs dfs -mkdir -p /user/hadoop</div></pre></td></tr></table></figure>
<h1 id="查看显示目录"><a href="#查看显示目录" class="headerlink" title="查看显示目录"></a>查看显示目录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs –ls -R /</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Hadoop脚本编写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[所有节点 文件删除脚本编写]]></title>
      <url>/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9-%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99-by%E9%BB%84%E6%B5%B7%E4%BA%AE/</url>
      <content type="html"><![CDATA[<h1 id="所有节点-文件删除脚本编写"><a href="#所有节点-文件删除脚本编写" class="headerlink" title="所有节点 文件删除脚本编写"></a>所有节点 文件删除脚本编写</h1><p>该脚本旨在删除所有节点上相同的东西，比如hadoop的重新配置等，还有删除hadoop的log等文件，都比较方便。<br><a id="more"></a></p>
<h1 id="xrm-sh的源代码例子"><a href="#xrm-sh的源代码例子" class="headerlink" title="xrm.sh的源代码例子"></a>xrm.sh的源代码例子</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ] ; <span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> no args</div><div class="line"><span class="built_in">exit</span>;</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment">#get first argument</span></div><div class="line">arg1=<span class="variable">$1</span>;</div><div class="line">cuser=`whoami`</div><div class="line">fname=`basename <span class="variable">$arg1</span>`</div><div class="line">dir=`dirname <span class="variable">$arg1</span>`</div><div class="line"><span class="keyword">if</span> [ <span class="variable">$dir</span> == <span class="string">"."</span> ] ; <span class="keyword">then</span></div><div class="line">dir=`<span class="built_in">pwd</span>`</div><div class="line"><span class="comment">#	echo $dir</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="built_in">echo</span> -----------------rming <span class="variable">$arg1</span> from localhost-------------;</div><div class="line">rm -rf <span class="variable">$arg1</span></div><div class="line"><span class="built_in">echo</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> (( i=200;i&lt;=500;i=i+100)) ;</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="built_in">echo</span> ---------------rming <span class="variable">$arg1</span> from s<span class="variable">$i</span> -------------;</div><div class="line">ssh s<span class="variable">$i</span> rm -rf <span class="variable">$dir</span>/<span class="variable">$fname</span></div><div class="line"><span class="built_in">echo</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Hadoop脚本编写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[所有节点 文件拷贝脚本编写]]></title>
      <url>/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9-%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99-by%E9%BB%84%E6%B5%B7%E4%BA%AE/</url>
      <content type="html"><![CDATA[<h1 id="所有节点-文件拷贝脚本编写"><a href="#所有节点-文件拷贝脚本编写" class="headerlink" title="所有节点 文件拷贝脚本编写"></a>所有节点 文件拷贝脚本编写</h1><p>该脚本旨在往每个节点拷贝数据，之前我们的拷贝是需要自己一个节点一个节点链接然后拷贝，但是如果我们每个节点都拷贝同样的数据时，这样做显然很麻烦，如果节点多的话还很浪费时间，这样我们就可以通过该脚本自己循环拷贝。</p>
<a id="more"></a>
<h1 id="xcp-sh源代码例子"><a href="#xcp-sh源代码例子" class="headerlink" title="xcp.sh源代码例子"></a>xcp.sh源代码例子</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ] ; <span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> no args</div><div class="line"><span class="built_in">exit</span>;</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment">#get first argument</span></div><div class="line">arg1=<span class="variable">$1</span>;</div><div class="line">cuser=`whoami`</div><div class="line">fname=`basename <span class="variable">$arg1</span>`</div><div class="line">dir=`dirname <span class="variable">$arg1</span>`</div><div class="line"><span class="keyword">if</span> [ <span class="variable">$dir</span> == <span class="string">"."</span> ] ; <span class="keyword">then</span></div><div class="line">dir=`<span class="built_in">pwd</span>`</div><div class="line"><span class="comment">#	echo $dir</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="keyword">for</span> (( i=200;i&lt;=500;i=i+100)) ;</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="built_in">echo</span> -----------coping <span class="variable">$arg1</span> to <span class="variable">$i</span>------------------;</div><div class="line"><span class="keyword">if</span> [ -d <span class="variable">$arg1</span> ] ; <span class="keyword">then</span></div><div class="line">scp  -r  <span class="variable">$arg1</span> <span class="variable">$cuser</span>@s<span class="variable">$i</span>:<span class="variable">$dir</span></div><div class="line"><span class="keyword">else</span></div><div class="line">scp <span class="variable">$arg1</span> <span class="variable">$cuser</span>@s<span class="variable">$i</span>:<span class="variable">$dir</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="built_in">echo</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Hadoop脚本编写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[所有节点执行同一指令的操作]]></title>
      <url>/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E6%89%A7%E8%A1%8C%E5%90%8C%E4%B8%80%E6%8C%87%E4%BB%A4%E7%9A%84%E6%93%8D%E4%BD%9C-by%E9%BB%84%E6%B5%B7%E4%BA%AE/</url>
      <content type="html"><![CDATA[<h1 id="所有节点执行同一指令的操作"><a href="#所有节点执行同一指令的操作" class="headerlink" title="所有节点执行同一指令的操作"></a>所有节点执行同一指令的操作</h1><p>该脚本旨在对每个节点都执行同一个指令，这样就不用每次都shell到每个子节点上去执行了，较为方便。<br><a id="more"></a></p>
<h1 id="xcall-sh的源代码例子"><a href="#xcall-sh的源代码例子" class="headerlink" title="xcall.sh的源代码例子"></a>xcall.sh的源代码例子</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ] ; <span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> no args</div><div class="line"><span class="built_in">exit</span>;</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="built_in">echo</span> -----------------xcall <span class="variable">$arg1</span> from localhost-----------------</div><div class="line"><span class="variable">$@</span></div><div class="line"><span class="built_in">echo</span></div><div class="line"><span class="comment">#get first argument</span></div><div class="line"><span class="keyword">for</span> (( i=0;i&lt;=3;i=i+1));</div><div class="line"><span class="keyword">do</span> </div><div class="line"><span class="built_in">echo</span> --------------------xcall <span class="variable">$arg1</span> from Slave<span class="variable">$i</span> ------------------;</div><div class="line">ssh Slave<span class="variable">$i</span> <span class="variable">$@</span></div><div class="line"><span class="built_in">echo</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Hadoop脚本编写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[所有节点 文件查看脚本编写]]></title>
      <url>/2017/08/17/%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9-%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/</url>
      <content type="html"><![CDATA[<h1 id="所有节点-文件查看脚本编写"><a href="#所有节点-文件查看脚本编写" class="headerlink" title="所有节点 文件查看脚本编写"></a>所有节点 文件查看脚本编写</h1><p>该脚本用于一次查看所有集群节点相同位置下的文件，类似于手动在每个节点上输入ls指令进行查看。<br><a id="more"></a></p>
<h1 id="xls-sh的源代码例子"><a href="#xls-sh的源代码例子" class="headerlink" title="xls.sh的源代码例子"></a>xls.sh的源代码例子</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ] ; <span class="keyword">then</span></div><div class="line"><span class="built_in">echo</span> no args</div><div class="line"><span class="built_in">exit</span>;</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment">#get first argument</span></div><div class="line">arg1=<span class="variable">$1</span>;</div><div class="line">cuser=`whoami`</div><div class="line">fname=`basename <span class="variable">$arg1</span>`</div><div class="line">dir=`dirname <span class="variable">$arg1</span>`</div><div class="line"><span class="keyword">if</span> [ <span class="variable">$dir</span> == <span class="string">"."</span> ] ; <span class="keyword">then</span></div><div class="line">dir=`<span class="built_in">pwd</span>`</div><div class="line"><span class="comment">#	echo $dir</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> (( i=200;i&lt;=500;i=i+100)) ;</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="built_in">echo</span> ---------------ls <span class="variable">$arg1</span> from s<span class="variable">$i</span> -------------;</div><div class="line">ssh s<span class="variable">$i</span> ls <span class="variable">$dir</span>/<span class="variable">$fname</span> | xargs</div><div class="line"><span class="built_in">echo</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Hadoop脚本编写 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[扩展Slave的时候需要注意的一些问题]]></title>
      <url>/2017/08/17/%E6%89%A9%E5%B1%95Slave%E7%9A%84%E6%97%B6%E5%80%99%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="扩展Slave的时候需要注意的一些问题"><a href="#扩展Slave的时候需要注意的一些问题" class="headerlink" title="扩展Slave的时候需要注意的一些问题"></a>扩展Slave的时候需要注意的一些问题</h1><ol>
<li>扩展的时候可以先直接按照Hadoop集群安装配置教程先进行。</li>
<li>这里需要更改 <strong><em>/usr/local/hadoop/etc/hadoop</em></strong> 路径下的 slave文件中的参数，需要把添加的节点加进去。<a id="more"></a></li>
<li>并且在<strong>Master</strong>里面的 <strong>/etc/hosts</strong> 中添加新加节点的IP和节点的命名。（如果想用节点的命名来连接任意一台节点计算机的话，我们需要把这个操作在每台节点计算机上进行）</li>
<li>如果存在改变节点名字的操作，在<strong><em>文件scp传输的时候可能会有错误</em></strong>，但是在警告中下面的语句有提示让移除之前命名和IP的对应关系，复制下来直接操作就可以了，然后在接着使用scp进行文件传输就没有什么问题了。</li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hadoop安装_单机伪分布式配置]]></title>
      <url>/2017/08/16/Hadoop%E5%AE%89%E8%A3%85_%E5%8D%95%E6%9C%BA%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h1 id="Hadoop安装-单机伪分布式配置"><a href="#Hadoop安装-单机伪分布式配置" class="headerlink" title="Hadoop安装_单机伪分布式配置"></a>Hadoop安装_单机伪分布式配置</h1><h2 id="创建hadoop账户"><a href="#创建hadoop账户" class="headerlink" title="创建hadoop账户"></a>创建hadoop账户</h2><p>添加用户：</p>
<pre><code>sudo useradd -m hadoop -s /bin/bash
</code></pre><p>给用户设置密码：</p>
<pre><code>sudo passwd hadoop
</code></pre><p>给用户管理员权限：</p>
<pre><code>sudo adduser hadoop sudo
</code></pre><p>更新apt</p>
<pre><code>sudo apt-get update
</code></pre><p>安装vim:</p>
<pre><code>sudo apt-get install vim
</code></pre><a id="more"></a>
<h2 id="安装SSH、配置SSH无密码登陆"><a href="#安装SSH、配置SSH无密码登陆" class="headerlink" title="安装SSH、配置SSH无密码登陆"></a>安装SSH、配置SSH无密码登陆</h2><pre><code>sudo apt-get install openssh-server
ssh localhost
exit                           # 退出刚才的 ssh localhost
cd ~/.ssh/                     # 若没有该目录，请先执行一次ssh localhost
ssh-keygen -t rsa              # 会有提示，都按回车就可以
cat ./id_rsa.pub &gt;&gt; ./authorized_keys  # 加入授权
</code></pre><p>此时再   ssh localhost   时就可以无密码访问了。</p>
<h2 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h2><pre><code>sudo apt-get install openjdk-8-jre openjdk-8-jdk
dpkg -L openjdk-8-jdk | grep &#39;/bin/javac&#39;
vim ~/.bashrc
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
source ~/.bashrc    # 使变量设置生效
</code></pre><p>检查是否正确：</p>
<pre><code>echo $JAVA_HOME     # 检验变量值
java -version
$JAVA_HOME/bin/java -version  # 与直接执行 java -version 一样
</code></pre><p>如果设置正确的话，$JAVA_HOME/bin/java -version 会输出 java 的版本信息，且和 java -version 的输出结果一样</p>
<h2 id="安装-Hadoop-2"><a href="#安装-Hadoop-2" class="headerlink" title="安装 Hadoop 2"></a>安装 Hadoop 2</h2><p>Hadoop 2 可以通过 <a href="http://mirror.bit.edu.cn/apache/hadoop/common/" target="_blank" rel="external">http://mirror.bit.edu.cn/apache/hadoop/common/</a> 或者 <a href="http://mirrors.cnnic.cn/apache/hadoop/common/" target="_blank" rel="external">http://mirrors.cnnic.cn/apache/hadoop/common/</a> 下载，一般选择下载最新的稳定版本，即下载 “stable” 下的 hadoop-2.x.y.tar.gz 这个格式的文件，这是编译好的，另一个包含 src 的则是 Hadoop 源代码，需要进行编译才可使用。</p>
<p>我们选择将 Hadoop 安装至 /usr/local/ 中：</p>
<pre><code>sudo tar -zxf ~/下载/hadoop-2.7.3.tar.gz -C /usr/local    # 解压到/usr/local中
cd /usr/local/
sudo mv ./hadoop-2.7.3/ ./hadoop            # 将文件夹名改为hadoop
sudo chown -R hadoop ./hadoop       # 修改文件权限
</code></pre><p><strong>Hadoop 解压后即可使用。输入如下命令来检查 Hadoop 是否可用，成功则会显示 Hadoop 版本信息：</strong></p>
<pre><code>cd /usr/local/hadoop
./bin/hadoop version
</code></pre><h2 id="Hadoop单机配置-非分布式"><a href="#Hadoop单机配置-非分布式" class="headerlink" title="Hadoop单机配置(非分布式)"></a>Hadoop单机配置(非分布式)</h2><p>【这一步个人认为可以用来检测hadoop是否安装成功，可以不用管的】</p>
<pre><code>cd /usr/local/hadoop
mkdir ./input
cp ./etc/hadoop/*.xml ./input   # 将配置文件作为输入文件
./bin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-*.jar grep ./input ./output &#39;dfs[a-z.]+&#39;  （和上面一行连着的）
cat ./output/*          # 查看运行结果
rm -r ./output
</code></pre><h2 id="Hadoop伪分布式配置"><a href="#Hadoop伪分布式配置" class="headerlink" title="Hadoop伪分布式配置"></a>Hadoop伪分布式配置</h2><p>Hadoop 可以在单节点上以伪分布式的方式运行，Hadoop 进程以分离的 Java 进程来运行，节点既作为 NameNode 也作为 DataNode，同时，读取的是 HDFS 中的文件。</p>
<p>Hadoop 的配置文件位于 /usr/local/hadoop/etc/hadoop/ 中，伪分布式需要修改2个配置文件 core-site.xml 和 hdfs-site.xml 。Hadoop的配置文件是 xml 格式，每个配置以声明 property 的 name 和 value 的方式来实现。</p>
<p>修改配置文件 <strong>core-site.xml</strong> (通过 vim 编辑会比较方便: vim ./etc/hadoop/core-site.xml)，将当中的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">&lt;/configuration&gt;</div><div class="line">修改为下面配置：</div><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">             &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</div><div class="line">             &lt;value&gt;file:/usr/<span class="built_in">local</span>/hadoop/tmp&lt;/value&gt;</div><div class="line">             &lt;description&gt;Abase <span class="keyword">for</span> other temporary directories.&lt;/description&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">             &lt;name&gt;fs.defaultFS&lt;/name&gt;</div><div class="line">             &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>同样的，修改配置文件 <strong>hdfs-site.xml</strong>：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">             &lt;name&gt;dfs.replication&lt;/name&gt;</div><div class="line">             &lt;value&gt;1&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">             &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</div><div class="line">             &lt;value&gt;file:/usr/<span class="built_in">local</span>/hadoop/tmp/dfs/name&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">             &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</div><div class="line">             &lt;value&gt;file:/usr/<span class="built_in">local</span>/hadoop/tmp/dfs/data&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p><strong><em>配置完成后，执行 NameNode 的格式化:<br>成功的话，会看到 “successfully formatted” 和 “Exitting with status 0” 的提示，若为 “Exitting with status 1” 则是出错。</em></strong></p>
<p><strong>接着开启 NameNode 和 DataNode 守护进程。</strong></p>
<pre><code>./sbin/start-dfs.sh
</code></pre><p><strong>输入yes（可能第一次需要）</strong><br>启动完成后，可以通过命令 jps 来判断是否成功启动，若成功启动则会列出如下进程: “NameNode”、”DataNode” 和 “SecondaryNameNode”（如果 SecondaryNameNode 没有启动，请运行 sbin/stop-dfs.sh 关闭进程，然后再次尝试启动尝试）。如果没有 NameNode 或 DataNode ，那就是配置不成功，请仔细检查之前步骤，或通过查看启动日志排查原因。<br><strong>成功启动后，可以访问 Web 界面 <a href="http://localhost:50070/" target="_blank" rel="external">http://localhost:50070/</a> 查看 NameNode 和 Datanode 信息，还可以在线查看 HDFS 中的文件。</strong></p>
<h2 id="运行Hadoop伪分布式实例"><a href="#运行Hadoop伪分布式实例" class="headerlink" title="运行Hadoop伪分布式实例"></a>运行Hadoop伪分布式实例</h2><p><strong>（配置时其实也可以不用管，它只是跑了一个例子）</strong></p>
<p>上面的单机模式，grep 例子读取的是本地数据，伪分布式读取的则是 HDFS 上的数据。要使用 HDFS，首先需要在 HDFS 中创建用户目录：</p>
<pre><code>./bin/hdfs dfs -mkdir -p /user/hadoop
</code></pre><p>接着将 ./etc/hadoop 中的 xml 文件作为输入文件复制到分布式文件系统中，即将 /usr/local/hadoop/etc/hadoop 复制到分布式文件系统中的 /user/hadoop/input 中。我们使用的是 hadoop 用户，并且已创建相应的用户目录 /user/hadoop ，因此在命令中就可以使用相对路径如 input，其对应的绝对路径就是 /user/hadoop/input:</p>
<pre><code>./bin/hdfs dfs -mkdir input
./bin/hdfs dfs -put ./etc/hadoop/*.xml input
</code></pre><p>复制完成后，可以通过如下命令查看文件列表：</p>
<pre><code>./bin/hdfs dfs -ls input
</code></pre><p>伪分布式运行 MapReduce 作业的方式跟单机模式相同，区别在于伪分布式读取的是HDFS中的文件（可以将单机步骤中创建的本地 input 文件夹，输出结果 output 文件夹都删掉来验证这一点）。</p>
<pre><code>./bin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-*.jar grep input output &#39;dfs[a-z.]+&#39;
</code></pre><p>查看运行结果的命令（查看的是位于 HDFS 中的输出结果）：</p>
<pre><code>./bin/hdfs dfs -cat output/*
</code></pre><p>我们也可以将运行结果取回到本地：</p>
<pre><code>rm -r ./output    # 先删除本地的 output 文件夹（如果存在）
./bin/hdfs dfs -get output ./output     # 将 HDFS 上的 output 文件夹拷贝到本机
cat ./output/*
</code></pre><p>Hadoop 运行程序时，输出目录不能存在，否则会提示错误 “org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory hdfs://localhost:9000/user/hadoop/output already exists” ，因此若要再次执行，需要执行如下命令删除 output 文件夹:</p>
<pre><code>./bin/hdfs dfs -rm -r output    # 删除 output 文件夹
</code></pre><p>若要关闭 Hadoop，则运行</p>
<pre><code>./sbin/stop-dfs.sh
</code></pre><h2 id="启动YARN"><a href="#启动YARN" class="headerlink" title="启动YARN"></a>启动YARN</h2><p>（伪分布式不启动 YARN 也可以，一般不会影响程序执行）</p>
<p>YARN 是从 MapReduce 中分离出来的，负责资源管理与任务调度。YARN 运行于 MapReduce 之上，提供了高可用性、高扩展性</p>
<p><strong>上述通过 ./sbin/start-dfs.sh 启动 Hadoop，仅仅是启动了 MapReduce 环境，我们可以启动 YARN ，让 YARN 来负责资源管理与任务调度。</strong></p>
<p>首先修改配置文件 mapred-site.xml，这边需要先进行重命名：</p>
<pre><code>mv ./etc/hadoop/mapred-site.xml.template ./etc/hadoop/mapred-site.xml
</code></pre><p>然后再进行编辑，同样使用 vim 编辑 <strong>vim ./etc/hadoop/mapred-site.xml</strong> ：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">             &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</div><div class="line">             &lt;value&gt;yarn&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>接着修改配置文件 <strong>yarn-site.xml</strong>：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">             &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class="line">             &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class="line">            &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>然后就可以启动 YARN 了（需要先执行过 ./sbin/start-dfs.sh）：</p>
<pre><code>./sbin/start-yarn.sh      # 启动YARN
./sbin/mr-jobhistory-daemon.sh start historyserver  # 开启历史服务器，才能在Web中查看任务运行情况
</code></pre><p>开启后通过 <strong>jps</strong> 查看，可以看到多了 NodeManager 和 ResourceManager 两个后台进程<br>启动 YARN 之后，运行实例的方法还是一样的，仅仅是资源管理方式、任务调度不同。观察日志信息可以发现，不启用 YARN 时，是 “mapred.LocalJobRunner” 在跑任务，启用 YARN 之后，是 “mapred.YARNRunner” 在跑任务。启动 YARN 有个好处是可以通过 Web 界面查看任务的运行情况：<a href="http://master:8088/cluster" target="_blank" rel="external">http://master:8088/cluster</a>，</p>
<p>同样的，关闭 YARN 的脚本如下：</p>
<pre><code>./sbin/stop-yarn.sh
./sbin/mr-jobhistory-daemon.sh stop historyserver
</code></pre><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>Hadoop集群安装配置教程_Hadoop2.6.0_Ubuntu/CentOS：<br><a href="http://www.powerxing.com/install-hadoop-cluster/" target="_blank" rel="external">http://www.powerxing.com/install-hadoop-cluster/</a></p>
<p>Hadoop安装教程_单机/伪分布式配置_Hadoop2.6.0/Ubuntu14.04<br><a href="http://www.powerxing.com/install-hadoop/" target="_blank" rel="external">http://www.powerxing.com/install-hadoop/</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hadoop集群安装配置教程]]></title>
      <url>/2017/08/16/Hadoop%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="hadoop集群安装"><a href="#hadoop集群安装" class="headerlink" title="hadoop集群安装"></a>hadoop集群安装</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>Hadoop 集群的安装配置大致为如下流程:</p>
<pre><code>1、选定一台机器作为 Master
2、在 Master 节点上配置 hadoop 用户、安装 SSH server、安装 Java 环境
3、在 Master 节点上安装 Hadoop，并完成配置
4、在其他 Slave 节点上配置 hadoop 用户、安装 SSH server、安装 Java 环境
5、将 Master 节点上的 /usr/local/hadoop 目录复制到其他 Slave 节点上
6、在 Master 节点上开启 Hadoop
</code></pre><a id="more"></a>
<h2 id="创建hadoop账户"><a href="#创建hadoop账户" class="headerlink" title="创建hadoop账户"></a>创建hadoop账户</h2><p>添加用户：</p>
<pre><code>sudo useradd -m hadoop -s /bin/bash
</code></pre><p>给用户设置密码：</p>
<pre><code>sudo passwd hadoop
</code></pre><p>给用户管理员权限：</p>
<pre><code>sudo adduser hadoop sudo
</code></pre><h2 id="更新apt"><a href="#更新apt" class="headerlink" title="更新apt"></a>更新apt</h2><pre><code>sudo apt-get update
</code></pre><p>安装vim:</p>
<pre><code>sudo apt-get install vim
</code></pre><h2 id="安装Java环境"><a href="#安装Java环境" class="headerlink" title="安装Java环境"></a>安装Java环境</h2><pre><code>sudo apt-get install openjdk-8-jre openjdk-8-jdk
dpkg -L openjdk-8-jdk | grep &#39;/bin/javac&#39;
vim ~/.bashrc
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
source ~/.bashrc    # 使变量设置生效
检查是否正确：
echo $JAVA_HOME     # 检验变量值
java -version
$JAVA_HOME/bin/java -version  # 与直接执行 java -version 一样
</code></pre><p>如果设置正确的话，$JAVA_HOME/bin/java -version 会输出 java 的版本信息，且和 java -version 的输出结果一样</p>
<h2 id="安装-Hadoop-2"><a href="#安装-Hadoop-2" class="headerlink" title="安装 Hadoop 2"></a>安装 Hadoop 2</h2><p>Hadoop 2 可以通过 <a href="http://mirror.bit.edu.cn/apache/hadoop/common/" target="_blank" rel="external">http://mirror.bit.edu.cn/apache/hadoop/common/</a> 或者 <a href="http://mirrors.cnnic.cn/apache/hadoop/common/" target="_blank" rel="external">http://mirrors.cnnic.cn/apache/hadoop/common/</a> 下载，一般选择下载最新的稳定版本，即下载 “stable” 下的 hadoop-2.x.y.tar.gz 这个格式的文件，这是编译好的，另一个包含 src 的则是 Hadoop 源代码，需要进行编译才可使用。</p>
<h3 id="我们选择将-Hadoop-安装至-usr-local-中："><a href="#我们选择将-Hadoop-安装至-usr-local-中：" class="headerlink" title="我们选择将 Hadoop 安装至 /usr/local/ 中："></a>我们选择将 Hadoop 安装至 /usr/local/ 中：</h3><pre><code>sudo tar -zxf ~/下载/hadoop-2.7.3.tar.gz -C /usr/local    # 解压到/usr/local中
cd /usr/local/
sudo mv ./hadoop-2.7.3/ ./hadoop            # 将文件夹名改为hadoop
sudo chown -R hadoop ./hadoop       # 修改文件权限
Hadoop 解压后即可使用。输入如下命令来检查 Hadoop 是否可用，成功则会显示 Hadoop 版本信息：
cd /usr/local/hadoop
./bin/hadoop version
</code></pre><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>假设集群<strong>所用的节点都位于同一个局域网</strong>。</p>
<p>首先在 Master 节点上完成准备工作，并关闭 Hadoop (/usr/local/hadoop/sbin/stop-dfs.sh)，再进行后续集群配置。</p>
<p>为了便于区分，可以修改各个节点的主机名（在终端标题、命令行中可以看到主机名，以便区分）。在 Ubuntu中，我们在 Master 节点上执行如下命令修改主机名（即改为 Master，注意是区分大小写的）：</p>
<p>设置主机名：</p>
<pre><code>sudo vim /etc/hostname
</code></pre><p>设置IP</p>
<pre><code>sudo vim /etc/hosts
</code></pre><p>设置如下：</p>
<pre><code>192.168.1.121   Master
192.168.1.122   Slave1
</code></pre><p>我们在 /etc/hosts 中将该映射关系填写上去即可，如下图所示（一般该文件中只有一个 127.0.0.1，其对应名为 localhost，如果有多余的应删除，特别是不能有 “127.0.0.1 Master” 这样的记录）</p>
<p>配置好后需要在各个节点上执行如下命令，测试是否相互 ping 得通，如果 ping 不通，后面就无法顺利配置成功：<br>ping Master -c 3   # 只ping 3次，否则要按 Ctrl+c 中断<br>ping Slave1 -c 3</p>
<p><strong>继续下一步配置前，请先完成所有节点的网络配置，修改过主机名的话需重启才能生效。</strong></p>
<h2 id="SSH无密码登陆节点"><a href="#SSH无密码登陆节点" class="headerlink" title="SSH无密码登陆节点"></a>SSH无密码登陆节点</h2><pre><code>sudo apt-get install openssh-server
</code></pre><p><strong>Master上面操作：</strong></p>
<p>首先生成 Master 节点的公匙，在 Master 节点的终端中执行（因为改过主机名，所以还需要删掉原有的再重新生成一次）：</p>
<pre><code>cd ~/.ssh               # 如果没有该目录，先执行一次ssh localhost
rm ./id_rsa*            # 删除之前生成的公匙（如果有）
ssh-keygen -t rsa       # 一直按回车就可以
</code></pre><p>让 Master 节点需能无密码 SSH 本机，在 Master 节点上执行：</p>
<pre><code>cat ./id_rsa.pub &gt;&gt; ./authorized_keys    
</code></pre><p>完成后可执行 ssh Master 验证一下（可能需要输入 yes，成功后执行 exit 返回原来的终端）。接着在 Master 节点将上公匙传输到 Slave1 节点：（当然多个节点的话，每个节点都要传输）</p>
<pre><code>scp ~/.ssh/id_rsa.pub hadoop@Slave1:/home/hadoop/
</code></pre><p><strong>Slave1上面操作：</strong></p>
<p>接着在 Slave1 节点上，将 ssh 公匙加入授权：</p>
<pre><code>mkdir ~/.ssh       # 如果不存在该文件夹需先创建，若已存在则忽略
cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
rm ~/id_rsa.pub    # 用完就可以删掉了
</code></pre><p>如果有其他 Slave 节点，也要执行将 Master 公匙传输到 Slave 节点、在 Slave 节点上加入授权这两步。<br>（如果配置好了以后可以用 ssh Slave1 指令检验，发现可以不用密码就可以连接上了）</p>
<h3 id="配置PATH变量"><a href="#配置PATH变量" class="headerlink" title="配置PATH变量"></a>配置PATH变量</h3><p>在单机伪分布式配置教程的最后，说到可以将 Hadoop 安装目录加入 PATH 变量中，这样就可以在任意目录中直接使用 hadoo、hdfs 等命令了，如果还没有配置的，需要在 Master 节点上进行配置。首先执行 vim ~/.bashrc，加入一行：</p>
<pre><code>export PATH=$PATH:/usr/local/hadoop/bin:/usr/local/hadoop/sbin
</code></pre><p>保存后执行 </p>
<pre><code>source ~/.bashrc 
</code></pre><p>使配置生效</p>
<h3 id="配置集群-分布式环境"><a href="#配置集群-分布式环境" class="headerlink" title="配置集群/分布式环境"></a>配置集群/分布式环境</h3><p>集群/分布式模式需要修改 <strong><em>/usr/local/hadoop/etc/hadoop</em></strong> 中的5个配置文件，更多设置项可点击查看官方说明，这里仅设置了正常启动所必须的设置项： slaves、core-site.xml、hdfs-site.xml、mapred-site.xml、yarn-site.xml 。</p>
<p><strong><em>1,</em></strong> 文件 slaves，将作为 DataNode 的主机名写入该文件，每行一个，默认为 localhost，所以在伪分布式配置时，节点即作为 NameNode 也作为 DataNode。分布式配置可以保留 localhost，也可以删掉，让 Master 节点仅作为 NameNode 使用。</p>
<p>本教程让 Master 节点仅作为 NameNode 使用，因此<strong><em>将文件中原来的 localhost 删除，只添加一行内容：Slave1。（相应的如果有多个节点要都添加上的）</em></strong></p>
<p><strong><em>2,</em></strong> 文件 <strong><em>core-site.xml</em></strong> 改为下面的配置：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;fs.defaultFS&lt;/name&gt;</div><div class="line">                &lt;value&gt;hdfs:<span class="comment">//Master:9000&lt;/value&gt;</span></div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</div><div class="line">                &lt;value&gt;file:/usr/local/hadoop/tmp&lt;/value&gt;</div><div class="line">                &lt;description&gt;Abase for other temporary directories.&lt;/description&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p><strong><em>3,</em></strong> 文件 <strong><em>hdfs-site.xml</em></strong>，dfs.replication 一般设为 3，但我们只有一个 Slave 节点，所以 dfs.replication 的值还是设为 1：（如果是多个节点还是改为3）【这里的参数我的理解是数据备份多少次】<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</div><div class="line">                &lt;value&gt;Slave0:50090&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;dfs.replication&lt;/name&gt;</div><div class="line">                &lt;value&gt;3&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</div><div class="line">                &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</div><div class="line">                &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p><strong><em>4, </em></strong>文件 <strong><em>mapred-site.xml</em></strong> （可能需要先重命名，默认文件名为 mapred-site.xml.template），然后配置修改如下：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</div><div class="line">                &lt;value&gt;yarn&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</div><div class="line">                &lt;value&gt;Master:10020&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</div><div class="line">                &lt;value&gt;Master:19888&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p><strong><em>5,</em></strong> 文件 yarn-site.xml：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</div><div class="line">                &lt;value&gt;Master&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">                &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class="line">                &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>配置好后，将 Master 上的 /usr/local/Hadoop 文件夹复制到各个节点上。因为之前有跑过伪分布式模式，建议在切换到集群模式前先删除之前的临时文件。</p>
<p><strong><em>在 Master 节点上执行：</em></strong></p>
<pre><code>cd /usr/local
sudo rm -r ./hadoop/tmp     # 删除 Hadoop 临时文件
sudo rm -r ./hadoop/logs/*   # 删除日志文件
tar -zcf ~/hadoop.master.tar.gz ./hadoop   # 先压缩再复制
cd ~
scp ./hadoop.master.tar.gz Slave1:/home/hadoop
</code></pre><p><strong><em>在 Slave1 节点上执行：</em></strong>（如果有多个节点每个节点上都要执行一遍）</p>
<pre><code>sudo rm -r /usr/local/hadoop    # 删掉旧的（如果存在）
sudo tar -zxf ~/hadoop.master.tar.gz -C /usr/local
sudo chown -R hadoop /usr/local/hadoop
</code></pre><p>（如果启动不成功的话可以删除  /usr/loval  目录下的 logs和 tmp 再重新操作一次）<br>同样，如果有其他 Slave 节点，也要执行将 hadoop.master.tar.gz 传输到 Slave 节点、在 Slave 节点解压文件的操作。</p>
<p><strong><em>首次启动需要先在 Master 节点执行 NameNode 的格式化：</em></strong></p>
<pre><code>hdfs namenode -format       # 首次运行需要执行初始化，之后不需要
</code></pre><p>接着可以启动 hadoop 了，启动需要在 Master 节点上进行：</p>
<pre><code>start-dfs.sh
start-yarn.sh
mr-jobhistory-daemon.sh start historyserver
也可以在更目录下面执行
start-all.sh
mr-jobhistory-daemon.sh start historyserver
</code></pre><p>通过命令 jps 可以查看各个节点所启动的进程。<br>正确的话，在 Master 节点上可以看到 NameNode、ResourceManager、SecondrryNameNode、JobHistoryServer 进程</p>
<p>在 <strong>Slave</strong> 节点可以看到 DataNode 和 NodeManager 进程.</p>
<p>缺少任一进程都表示出错。另外还需要在 Master 节点上通过命令 hdfs dfsadmin -report 查看 DataNode 是否正常启动，如果 Live datanodes 不为 0 ，则说明集群启动成功。</p>
<p>也可以通过 Web 页面看到查看 DataNode 和 NameNode 的状态：<a href="http://master:50070/" target="_blank" rel="external">http://master:50070/</a>。如果不成功，可以通过启动日志排查原因。</p>
<p>同样可以通过 Web 界面查看任务进度 <a href="http://master:8088/cluster" target="_blank" rel="external">http://master:8088/cluster</a>，在 Web 界面点击 “Tracking UI” 这一列的 History 连接，可以看到任务的运行信息</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>Hadoop集群安装配置教程_Hadoop2.6.0_Ubuntu/CentOS：<br><a href="http://www.powerxing.com/install-hadoop-cluster/" target="_blank" rel="external">http://www.powerxing.com/install-hadoop-cluster/</a></p>
<p>Hadoop安装教程_单机/伪分布式配置_Hadoop2.6.0/Ubuntu14.04<br><a href="http://www.powerxing.com/install-hadoop/" target="_blank" rel="external">http://www.powerxing.com/install-hadoop/</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[建立自己的github博客]]></title>
      <url>/2017/08/15/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84github%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="可以根据博客中的hello-world文件中讲述的安装"><a href="#可以根据博客中的hello-world文件中讲述的安装" class="headerlink" title="可以根据博客中的hello-world文件中讲述的安装"></a>可以根据博客中的hello-world文件中讲述的安装</h1><h1 id="下面是一些详细的步骤"><a href="#下面是一些详细的步骤" class="headerlink" title="下面是一些详细的步骤"></a>下面是一些详细的步骤</h1><p>1、安装node,可以去node的官网直接下载 <a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a> （这里我下载的是node-v6.11.1-x64）<br>2、安装hexo，可以打开cmd终端输入</p>
<pre><code>npm install -g hexo-cli
</code></pre><a id="more"></a>
<p>3、安装完hexo后开始在电脑上建立一下自己写博客的文件夹，依旧是在cmd终端中运行</p>
<pre><code>cd C:\Users\Darren\Documents     #实际上是进入了电脑的文档文件夹
mkdir blog
cd blog
hexo init blog
cd blog
hexo s
然后就可以用 http://localhost:4000/ 来查看博客是否安装成功
npm install hexo-deployer-git --save
</code></pre><p>4、修改_config.yml这个配置文件</p>
<pre><code># Site
title: Darren
subtitle: 海亮的笔记本
description:
author: Darren
language: zh-Hans
timezone:


# Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repo: 
</code></pre><p>repo是自己在自己github中建立的地址</p>
<p>5、开始部署</p>
<pre><code>hexo d
</code></pre><p>之后可以去看一下你的博客就好了</p>
<p><a href="https://huanghailiang.github.io/">https://huanghailiang.github.io/</a></p>
<p>到此博客基本搭建完成了，剩下的东西就可以按照自己的兴趣去自己配置了。</p>
<h1 id="如果标签没有的话需要自己新建一个"><a href="#如果标签没有的话需要自己新建一个" class="headerlink" title="如果标签没有的话需要自己新建一个"></a>如果标签没有的话需要自己新建一个</h1><pre><code>hexo new page tags

里面修改为：

---
title: tags
date: 2017-08-15 11:06:32
type: tags
---
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> 搭建自己的github博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[深度学习环境搭建------by邵碧尧]]></title>
      <url>/2017/07/23/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="深度学习环境搭建"><a href="#深度学习环境搭建" class="headerlink" title="深度学习环境搭建"></a>深度学习环境搭建</h1><p>开始接触深度学习一年多时间了，总是有种技术发展飞快，没等你掌握现有技术更牛X的技术又出来了。身处AI浪潮中，到现在越发有种感觉：深度学习可能很多问题都能解决，但我们自己并没有那么多精力去研究那么多方面，自然语言处理，自动驾驶，人脸识别等等，选定一个方向深入研究才是正解。至少目前是这么理解的，不对希望朋友指正！</p>
<p>如今深度学习的框架很多，Caffe，TensorFlow，Torch等都各有各的优势，开始深度学习不可避免要配置深度学习的工作环境，如果不知道方法也许在开头就会花费很多时间，写这篇博客的目的就是帮助大家更快上手。下面介绍Caffe在Ubuntu 16.04上的搭建过程（Ubuntu 14.04同样可以）<br><a id="more"></a></p>
<h2 id="Caffe"><a href="#Caffe" class="headerlink" title="Caffe"></a>Caffe</h2><p>Caffe的环境搭建在几个框架中是最麻烦的，因为Caffe用到的依赖库很多，如果配置GPU版有时候显卡驱动和CUDA也能把你折腾好久。CPU版和GPU版主要差别就是在NVIDIA显卡驱动和CUDA的安装上，其他框架要用到NVIDIA显卡其实差别也就是这样，因此这也算服务器基础。两个版本有区别的地方会注明。</p>
<h3 id="Nvidia-driver"><a href="#Nvidia-driver" class="headerlink" title="Nvidia driver"></a>Nvidia driver</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">lspci | grep -i nvidia</div><div class="line"></div><div class="line">sudo add-apt-repository ppa:graphics-drivers/ppa</div><div class="line"></div><div class="line">sudo apt-get update</div><div class="line"></div><div class="line">sudo apt-get install nvidia-352 % 版本自己查询</div><div class="line"></div><div class="line">sudo shutdown -r now</div></pre></td></tr></table></figure>
<p>重启后用下面命令查看驱动版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /proc/driver/nvidia/version</div></pre></td></tr></table></figure>
<h3 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h3><p>到<a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="external">CUDA</a>官网下载CUDA安装文件，选择对应版本</p>
<p><img src="http://img.blog.csdn.net/20170717163846347?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>这里有下载deb [local]文件，后面会说runfile [local]的用法，先卖个关子。<br>下载好后cd到存放安装的文件夹，使用一下命令，文件名千万别手输，善用tab键</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo dpkg -i cuda-repo-ubuntu1604*amd64.deb</div><div class="line"></div><div class="line">sudo apt-get update</div><div class="line"></div><div class="line">sudo apt-get install cuda</div></pre></td></tr></table></figure>
<p>安装结束，添加环境变量（如果安装服务器，环境变量在每个用户下都需要添加一次，应该是有更聪明的方法，目前还没有找到）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">echo &apos;export PATH=/usr/local/cuda/bin:$PATH&apos; &gt;&gt; ~/.bashrc</div><div class="line"></div><div class="line">echo &apos;export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH&apos; &gt;&gt; ~/.bashrc</div><div class="line"></div><div class="line">source ~/.bashrc</div></pre></td></tr></table></figure>
<p>查看安装CUDA版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvcc -V</div></pre></td></tr></table></figure>
<p>显示下图信息说明安装好了</p>
<p><img src="http://img.blog.csdn.net/20170717164703121?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>再重启下电脑</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo shutdown -r now</div></pre></td></tr></table></figure>
<h3 id="cuDNN"><a href="#cuDNN" class="headerlink" title="cuDNN"></a>cuDNN</h3><p>这是深度学习训练过程中的加速算法包，到<a href="https://developer.nvidia.com/cudnn" target="_blank" rel="external">cuDNN</a> 下载对应的安装包，cd到安装包所在文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">tar xvf cudnn*.tgz</div><div class="line"></div><div class="line">cd cuda</div><div class="line"></div><div class="line">sudo cp */*.h /usr/local/cuda/include/</div><div class="line"></div><div class="line">sudo cp */libcudnn* /usr/local/cuda/lib64/</div><div class="line"></div><div class="line">sudo chmod a+r /usr/local/cuda/lib64/libcudnn*</div></pre></td></tr></table></figure>
<p>上面说runfile (local)卖了个关子，可以显卡驱动和CUDA一起安装，属于比较方便的方法，和之前的方法有什么差别目前还不知道</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sh cuda_8.0.61_375.26_linux.run</div></pre></td></tr></table></figure>
<p>运行这句命令，接下来根据提示操作就好了<br>结束后按照上面的方法添加环境变量</p>
<h3 id="依赖库安装（CPU版从这里开始）"><a href="#依赖库安装（CPU版从这里开始）" class="headerlink" title="依赖库安装（CPU版从这里开始）"></a>依赖库安装（CPU版从这里开始）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line"></div><div class="line">sudo apt-get upgrade</div><div class="line"></div><div class="line">sudo apt-get install build-essential cmake g++ gfortran git pkg-config python-dev software-properties-common wget</div><div class="line"></div><div class="line">sudo apt-get autoremove</div><div class="line"></div><div class="line">sudo rm -rf /var/lib/apt/lists/*</div><div class="line"></div><div class="line">sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler</div><div class="line"></div><div class="line">sudo apt-get install --no-install-recommends libboost-all-dev</div><div class="line"></div><div class="line">sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev</div><div class="line"></div><div class="line">sudo apt-get install -y libatlas-base-dev</div><div class="line"></div><div class="line">sudo apt-get install -y python-pip</div></pre></td></tr></table></figure>
<h3 id="下载Caffe"><a href="#下载Caffe" class="headerlink" title="下载Caffe"></a>下载Caffe</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line"></div><div class="line">mkdir git //在home下新建一个git文件夹，用来存放那些从github上git下来的文件</div><div class="line"></div><div class="line">git clone https://github.com/BVLC/caffe.git //从github上git caffe</div><div class="line"></div><div class="line">cd caffe</div><div class="line"></div><div class="line">cp Makefile.config.example Makefile.config</div></pre></td></tr></table></figure>
<p>修改Makefile.config</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">//如果你不使用GPU的话，就将</div><div class="line"></div><div class="line"># CPU_ONLY := 1</div><div class="line"></div><div class="line">修改成：</div><div class="line"></div><div class="line">CPU_ONLY := 1</div><div class="line"></div><div class="line">//若使用cudnn，则将</div><div class="line"></div><div class="line"># USE_CUDNN := 1</div><div class="line"></div><div class="line">修改成：</div><div class="line"></div><div class="line">USE_CUDNN := 1</div><div class="line"></div><div class="line">//若使用的opencv版本是3的，则将</div><div class="line"></div><div class="line"># OPENCV_VERSION := 3</div><div class="line"></div><div class="line">修改为：</div><div class="line"></div><div class="line">OPENCV_VERSION := 3</div><div class="line"></div><div class="line">//若要使用python来编写layer，则需要将</div><div class="line"></div><div class="line"># WITH_PYTHON_LAYER := 1</div><div class="line"></div><div class="line">修改为</div><div class="line"></div><div class="line">WITH_PYTHON_LAYER := 1</div><div class="line"></div><div class="line">//重要的一项</div><div class="line"></div><div class="line">将# Whatever else you find you need goes here.下面的</div><div class="line"></div><div class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include</div><div class="line"></div><div class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib</div><div class="line"></div><div class="line">修改为：</div><div class="line"></div><div class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial</div><div class="line"></div><div class="line">LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial</div><div class="line"></div><div class="line">//这是因为ubuntu16.04的文件包含位置发生了变化，尤其是需要用到的hdf5的位置，所以需要更改这一路径</div></pre></td></tr></table></figure>
<p>创建Hdf5文件链接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">find . -type f -exec sed -i -e &apos;s^&quot;hdf5.h&quot;^&quot;hdf5/serial/hdf5.h&quot;^g&apos; -e &apos;s^&quot;hdf5_hl.h&quot;^&quot;hdf5/serial/hdf5_hl.h&quot;^g&apos; &apos;&#123;&#125;&apos; \;</div><div class="line"></div><div class="line">cd /usr/lib/x86_64-linux-gnu</div><div class="line"></div><div class="line">sudo ln -s libhdf5_serial.so.10.1.0 libhdf5.so</div><div class="line"></div><div class="line">sudo ln -s libhdf5_serial_hl.so.10.0.2 libhdf5_hl.so</div></pre></td></tr></table></figure>
<p>执行caffe下python文件夹下的指令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd python</div><div class="line"></div><div class="line">for req in $(cat requirements.txt); do pip install $req; done</div><div class="line"></div><div class="line">\\目的是检查caffe所需要的python的库的版本，如果出现红字错误说明版本不满足要求，执行下面语句</div><div class="line"></div><div class="line">for req in $(cat requirements.txt); do sudo -H pip install $req --upgrade; done</div></pre></td></tr></table></figure>
<p>编辑/usr/local/cuda/include/host_config.h，将其中的第115行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!</div><div class="line">% 改为</div><div class="line">//#error -- unsupported GNU version! gcc versions later than 4.9 are not supported!</div></pre></td></tr></table></figure>
<p>make 各种文件（cd到Caffe文件夹）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">make all -j8 //j8代表计算机cpu有8个核，因此可以多线程一起make，这样make的速度会快很多。一般常用的还有j4</div><div class="line"></div><div class="line">make test -j8</div><div class="line"></div><div class="line">make runtest -j8</div><div class="line"></div><div class="line">make pycaffe //编译python接口</div><div class="line"></div><div class="line">make distribute</div></pre></td></tr></table></figure></p>
<p>到这里搭建完毕</p>
]]></content>
      
        
        <tags>
            
            <tag> 深度学习环境搭建 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装远程图形界面x2go------by邵碧尧]]></title>
      <url>/2017/07/23/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu%20server%E6%9C%8D%E5%8A%A1%E5%99%A8_5/</url>
      <content type="html"><![CDATA[<h1 id="手把手教你配置Ubuntu-server服务器"><a href="#手把手教你配置Ubuntu-server服务器" class="headerlink" title="手把手教你配置Ubuntu server服务器"></a>手把手教你配置Ubuntu server服务器</h1><h2 id="安装远程图形界面x2go"><a href="#安装远程图形界面x2go" class="headerlink" title="安装远程图形界面x2go"></a>安装远程图形界面x2go</h2><p>Ubuntu server 安装完成只有命令行界面，一般的工作在Windows下用 <a href="https://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="external">xshell</a> 和 <a href="https://winscp.net/eng/index.php" target="_blank" rel="external">winscp</a> ，一个输命令行，一个进行界面化文件管理，还是挺方便的， 但部分用户还是希望有个图形界面更加方便科研工作开展，这里推荐x2go这个轻量化桌面，安装也比较方便，下面就来介绍。<br><a id="more"></a><br>首先在服务器上安装一些必要的软件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install software-properties-common</div><div class="line">sudo add-apt-repository ppa:x2go/stable</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install x2goserver x2goserver-xsession</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install -y xfce4 xfce4-goodies xubuntu-desktop</div></pre></td></tr></table></figure>
<p>很简单，几条命令结束就OK了。结束用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hostname -I</div></pre></td></tr></table></figure>
<p>查看ip，后面在Windows下要用到</p>
<p>然后在 Windows 或者 OS X 下安装一个客户端 <a href="http://wiki.x2go.org/doku.php/download:start" target="_blank" rel="external">x2go client</a> ,安装结束打开会跳出如下窗口</p>
<p><img src="http://img.blog.csdn.net/20170707213101276?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>在”Host” 中填写服务器ip<br>“Login”中填写要登录的username<br>“Session type”下拉菜单选择“XFCE”，点击OK结束。</p>
<p><img src="http://img.blog.csdn.net/20170707213552457?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>在这里输入密码就可以远程连接服务器，同时拥有图形界面了。</p>
<p>配置服务器系列到这里就结束了，小白我自己也在后面多多积累相关的技巧，有了新的经验再来更新，希望大家支持！</p>
]]></content>
      
        
        <tags>
            
            <tag> 手把手教你配置Ubuntu server服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[管理服务器用户------by邵碧尧]]></title>
      <url>/2017/07/23/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu%20server%E6%9C%8D%E5%8A%A1%E5%99%A8_4/</url>
      <content type="html"><![CDATA[<h1 id="手把手教你配置Ubuntu-server服务器"><a href="#手把手教你配置Ubuntu-server服务器" class="headerlink" title="手把手教你配置Ubuntu server服务器"></a>手把手教你配置Ubuntu server服务器</h1><h2 id="管理服务器用户"><a href="#管理服务器用户" class="headerlink" title="管理服务器用户"></a>管理服务器用户</h2><p>管理服务器用户，一项一项开始说，首先要管理，当然要现有用户咯。添加用户我是用adduser 命令，相当于一个简单的交互过程，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo adduser username</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>然后会让你确定用户名，用户密码这些信息，结束后在/home目录下就有一个对应用户名的文件夹了。<br>管理员添加用户后，用户自己可以通过</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">passwd</div></pre></td></tr></table></figure>
<p>来更新自己的密码。</p>
<p>哪天可能那个用户惹到root管理员了，管理员要删掉那个用户，怎么操作，非常简单</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">userdel username</div></pre></td></tr></table></figure>
<p>秒删好吧！所以不要惹管理员</p>
<p>如果想修改用户名有改怎么办，有几种方案</p>
<p>第一种，简单粗暴，按照上面的方法删掉用户重新建</p>
<p>第二种，优雅一点，两条命令搞定</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">usermod -l New_Login_Name, -md Home_Directory Old_Login_Name </div><div class="line">groupmod -n NewName OldName</div></pre></td></tr></table></figure>
<p>管理员会给服务器装一些基本的软件，有的用户想装自己需要的软件，但是没有权限怎么办嘞？每次都找管理员也是烦的，因此可以给部分用户 sudo 权限，怎么操作呢？<br>修改/etc/sudoers文件，在 root ALL=(ALL) ALL下方添加要给权限的用户名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root ALL=(ALL) ALL</div><div class="line">username ALL=(ALL) ALL</div></pre></td></tr></table></figure>
<p>还有种方法就是直接创建管理者账号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo adduser username sudo</div></pre></td></tr></table></figure>
<p>以上就是一些最基本的用户管理指令，刚开始是够用了，到后面反正慢慢积累嘛</p>
]]></content>
      
        
        <tags>
            
            <tag> 手把手教你配置Ubuntu server服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[设置服务器网络------by邵碧尧]]></title>
      <url>/2017/07/23/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu%20server%E6%9C%8D%E5%8A%A1%E5%99%A8_3/</url>
      <content type="html"><![CDATA[<h1 id="手把手教你配置Ubuntu-server服务器"><a href="#手把手教你配置Ubuntu-server服务器" class="headerlink" title="手把手教你配置Ubuntu server服务器"></a>手把手教你配置Ubuntu server服务器</h1><h2 id="设置服务器网络"><a href="#设置服务器网络" class="headerlink" title="设置服务器网络"></a>设置服务器网络</h2><p>之前两篇讲了服务器系统安装和硬盘挂载，这篇总结下网络设置。具体开始讲之前先说说如何实现其他人可以访问服务器。一种方法是由一个网口出来接路由器，用户都连接到路由器的网络上，不管是通过有线还是WiFi，把用户都归到同一个网络下。另一种方法就比较bug了，像清华大学那样，整个学校有线网和无线的Tsinghua都是同一个网络，所以就不需要路由器了，之前不知道还倒腾了很久。又有人要问了，那如何让外网的人可以访问服务器呢？不好意思，我没有研究过，另一个原因也是担心网络安全的问题，毕竟没有学过相关的知识，所以搭个服务器内部用就完了。如果有大神在这方面比较有研究，我也非常欢迎交流。（邮箱：shaobiyao@gmail.com）<br><a id="more"></a><br>说回来，先解决基本问题再说</p>
<p>sudo vim /etc/network/interfaces</p>
<p>修改如下部分：</p>
<p>auto eth0（这个名称每台机器不一样，可以通过ifconfig -a查询）<br>iface eth0 inet static<br>address 192.168.0.117 #选用同一个网络下不冲突的ip<br>gateway 192.168.0.1 #gateway and netmask 可以通过查看同一网络下的Windows电脑的信息获得，都一样的<br>netmask 255.255.255.0</p>
<p>sudo vim /etc/resolvconf/resolv.conf.d/base(网上有说修改/etc/resolv.conf的，这个文件修改完会被系统覆盖，等于白改)<br>nameserver XXX.XXX.XXX.XXX #和同一网络中Windows的电脑一样</p>
<p>重启网卡：</p>
<p>sudo /etc/init.d/network restart</p>
<p>用ping www.baidu.com测试是否成功</p>
]]></content>
      
        
        <tags>
            
            <tag> 手把手教你配置Ubuntu server服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[服务器多硬盘挂载------by邵碧尧]]></title>
      <url>/2017/07/23/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu%20server%E6%9C%8D%E5%8A%A1%E5%99%A8_2/</url>
      <content type="html"><![CDATA[<h1 id="手把手教你配置Ubuntu-server服务器"><a href="#手把手教你配置Ubuntu-server服务器" class="headerlink" title="手把手教你配置Ubuntu server服务器"></a>手把手教你配置Ubuntu server服务器</h1><h2 id="服务器多硬盘挂载"><a href="#服务器多硬盘挂载" class="headerlink" title="服务器多硬盘挂载"></a>服务器多硬盘挂载</h2><p>现在科研中需要处理的数据量经常性会非常大，因此服务器基本都会采用固态硬盘加机械硬盘的解决方案来实现服务器性能和成本的平衡，系统装在固态中，用户数据和数据集存放在机械硬盘中。接下来就讲下如何挂载硬盘</p>
<p>参考网页：</p>
<p><a href="http://zwkufo.blog.163.com/blog/static/258825120141283942244/" target="_blank" rel="external">http://zwkufo.blog.163.com/blog/static/258825120141283942244/</a><br><a href="http://www.jianshu.com/p/5c12289dbcd1" target="_blank" rel="external">http://www.jianshu.com/p/5c12289dbcd1</a><br><a id="more"></a><br>sudo fdisk –lu (查看当前硬盘及分区情况) 可以看到类似界面</p>
<p> <img src="http://img.blog.csdn.net/20170707140012854?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>列表中我们可以看到所有硬盘，找到要挂载的硬盘名称，例如/dev/sdb</p>
<ol>
<li><p>sudo fdisk /dev/sdb(这里为想要挂载的硬盘名称)，利用该命令可以对硬盘进行分区，具体可以参考网页1中的讲解更加详细</p>
</li>
<li><p>sudo mkfs –t ext4 /dev/sdb(硬盘格式化，-t ext4 表示将分区格式化成ext4文件系统类型)</p>
</li>
<li><p>sudo df –l(显示硬盘挂载情况)<br>sudo mount –t ext4 /dev/sdb(想要挂载的硬盘) /devdata(目标挂载点)<br>结束后可以用sudo df –l 查看是否成功</p>
</li>
<li>配置系统启动自动挂载，修改/etc/fstab文件，添加<h1 id="devdata-was-on-dev-sdb"><a href="#devdata-was-on-dev-sdb" class="headerlink" title="/devdata was on /dev/sdb"></a>/devdata was on /dev/sdb</h1>UUID=37eaa526-5d96-4237-8468-603df5216ce9  /devdata(挂载点)   ext4   defaults     0     2<br>硬盘的UUID通过命令 sudo blkid 进行查看</li>
</ol>
<p>这样就把/dev/sdb挂载到/devdata这个文件夹下了。有人要问了，我不要挂这里，要把硬盘挂到/home目录下怎么办？接下来就是解决这个问题</p>
<p>首先要做的是卸载原先的挂载点，怎么做，很简单， sudo umount /dev/sdb(这里好像是写挂载的文件夹名也可以，但我没有试过)，再用 sudo df -l 查看，原先挂载的硬盘就没有了。</p>
<p>接下来你得挂载已经分区好的硬盘，然后把 home 目录下的全部文件拷贝到硬盘挂载的目录下。然后删除 home 目录，最后把第一步挂载好的新硬盘重新挂载在 home 目录下。</p>
<p>挂载设置好的硬盘</p>
<p><img src="http://img.blog.csdn.net/20170707142035471?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>同步 home 目录所有文件，删除之前的 home 目录下的所有文件</p>
<p><img src="http://img.blog.csdn.net/20170707142632300?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>确定同步成功之后，删除旧 home 目录</p>
<p><img src="http://img.blog.csdn.net/20170707142723858?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>重新挂载新硬盘并设置启动挂载</p>
<p><img src="http://img.blog.csdn.net/20170707142916104?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>这里如果失败的话就修改/etc/fstab文件，把原先的挂载点改成/home<br>再 sudo df -l，就可以看到成功挂载到/home下了，不过这样对新机器是没什么影响，如果原先机器上有非root用户，这样操作后就GG了，还是要做好数据备份</p>
]]></content>
      
        
        <tags>
            
            <tag> 手把手教你配置Ubuntu server服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu server 16.04 安装教程------by邵碧尧]]></title>
      <url>/2017/07/23/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E9%85%8D%E7%BD%AEUbuntu%20server%E6%9C%8D%E5%8A%A1%E5%99%A8_1/</url>
      <content type="html"><![CDATA[<h1 id="手把手教你配置Ubuntu-server服务器"><a href="#手把手教你配置Ubuntu-server服务器" class="headerlink" title="手把手教你配置Ubuntu server服务器"></a>手把手教你配置Ubuntu server服务器</h1><p>近期实验室来了台新的服务器，第一次从头到尾把配置过程走了一遍，特来此总结一番，希望可以帮助到想入坑的童鞋。我将从以下几个方面来总结配置服务器的过程(系统版本为Ubuntu server 16.04)</p>
<ul>
<li><strong>Ubuntu server 16.04 安装教程</strong></li>
<li><strong>服务器多硬盘挂载</strong></li>
<li><strong>设置服务器网络</strong></li>
<li><strong>管理服务器用户</strong></li>
<li><strong>安装远程图形界面<em>x2go</em></strong></li>
</ul>
<hr>
<a id="more"></a>
<h2 id="Ubuntu-server-16-04-安装教程"><a href="#Ubuntu-server-16-04-安装教程" class="headerlink" title="Ubuntu server 16.04 安装教程"></a>Ubuntu server 16.04 安装教程</h2><hr>
<h3 id="Ubuntu-server-16-04-启动U盘制作"><a href="#Ubuntu-server-16-04-启动U盘制作" class="headerlink" title="Ubuntu server 16.04 启动U盘制作"></a>Ubuntu server 16.04 启动U盘制作</h3><p>用装系统，没启用U盘怎么行呢！Ubuntu系统的启动U盘制作非常简单，首先从<a href="https://www.ubuntu.com/download/server" target="_blank" rel="external">官网</a>下载对应版本的系统镜像文件，下一步你需要一个空白的U盘，用于写入镜像文件，如果U盘中有资料千万做好备份。写入镜像文件的软件可以使用<a href="https://cn.ultraiso.net/xiazai.html" target="_blank" rel="external">软碟通</a>。</p>
<p>用软碟通打开镜像文件</p>
<p><img src="http://img.blog.csdn.net/20170706160133736?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>菜单中“启动”-&gt;“写入硬盘映像”</p>
<p><img src="http://img.blog.csdn.net/20170706160043376?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>写入U盘中，点击“写入”，然后就可以吃着火锅唱着歌等着进度条跑完就好了</p>
<p><img src="http://img.blog.csdn.net/20170706160538657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<h3 id="安装Ubuntu-server"><a href="#安装Ubuntu-server" class="headerlink" title="安装Ubuntu server"></a>安装Ubuntu server</h3><p><strong>Markdown　Extra</strong>　表格语法：<br>首先用U盘启动，之前需要查下主板进入boot menu的快捷键（一般是Esc，Del，F2，F12等），选择自己U盘启动（可能会有一个UEFI选项，两者都行）</p>
<p><strong>2017.7.12 update</strong>: 推荐大家安装时都选择英文版本，有时候选择中文版在最后安装的时候会报一些没办法解决的错误</p>
<p>用启动盘成功引导之后，出现下面的界面，恭喜你完成了第一步</p>
<p><img src="http://img.blog.csdn.net/20170706161239911?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>选择语言你喜欢什么语言就什么语言咯</p>
<p><img src="http://img.blog.csdn.net/20170706161432408?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>选择是否继续安装所选择的语言版本，选择”yes</p>
<p><img src="http://img.blog.csdn.net/20170706161619078?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>选择”否”，默认键盘模式就好了</p>
<p><img src="http://img.blog.csdn.net/20170706161824038?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20170706162022884?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20170706162043616?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>然后等进度条跑完，到这里键盘就已经好了，下面来配置服务器的一些基本信息。主机名自己起，但只能用字母和数字</p>
<p><img src="http://img.blog.csdn.net/20170706162337736?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>激动人心的时候到了，设置服务器的第一个用户，没错，就是你啦</p>
<p><img src="http://img.blog.csdn.net/20170706162712197?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>设置密码</p>
<p><img src="http://img.blog.csdn.net/20170706162730865?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>要不要加密主目录，先“否”吧</p>
<p><img src="http://img.blog.csdn.net/20170706162837668?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>设置时区，还是默认</p>
<p><img src="http://img.blog.csdn.net/20170706163002307?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>接下来就是最关键的，选择系统安装硬盘，作者小白就不用“手动”了</p>
<p><img src="http://img.blog.csdn.net/20170706163203372?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>这里选择空白区（理想情况就是系统装在固态中，然后再挂载一个大的机械硬盘）</p>
<p><img src="http://img.blog.csdn.net/20170706163621240?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>这里我是选了一块空白的固态，大小是“max”</p>
<p><img src="http://img.blog.csdn.net/20170706163748076?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>分区设定结束并将修改写入磁盘，结束后出现下面窗口</p>
<p><img src="http://img.blog.csdn.net/20170706164031657?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>用空格选择：OpenSSH server</p>
<p><img src="http://img.blog.csdn.net/20170706164143362?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>选择“yes”</p>
<p><img src="http://img.blog.csdn.net/20170706164247665?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>“continue”重启，完工</p>
<p><img src="http://img.blog.csdn.net/20170706164317696?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvUm9nZXIxNw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>网络什么的安装过程不配置都没有问题，系统装好了再解决，放心大胆搞，最坏就是重装嘛，硬件一般不会搞坏。今天先写到这里，后面我接着按照前面的大纲更新，其实网上这些东西都有，我就是帮大家归纳总结下，希望对大家有帮助吧</p>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> 手把手教你配置Ubuntu server服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 系统设置密钥登陆]]></title>
      <url>/2017/07/22/Ubuntu%20%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE%E5%AF%86%E9%92%A5%E7%99%BB%E9%99%86/</url>
      <content type="html"><![CDATA[<h1 id="Ubuntu-系统设置密钥登陆"><a href="#Ubuntu-系统设置密钥登陆" class="headerlink" title="Ubuntu 系统设置密钥登陆"></a>Ubuntu 系统设置密钥登陆</h1><p>本文主要参考文档<br>    <a href="http://www.downgle.com/zt/zqxouw0qwvstzrouysrloolz.html" target="_blank" rel="external">http://www.downgle.com/zt/zqxouw0qwvstzrouysrloolz.html</a><br>    <a href="http://blog.csdn.net/kenhins/article/details/51585565" target="_blank" rel="external">http://blog.csdn.net/kenhins/article/details/51585565</a><br>自己简单整理留作备份以备后期查看<br><a id="more"></a><br>个人感觉用密钥登陆比用密码登陆安全很多，所以一旦生成密码之后一定不要将自己的密钥给别人，否者别人将很轻松的登陆你的账户，当然我发现如果你使用XShell远程连接ubuntu服务器的时候你可以再给密钥加上一层密码的。</p>
<h2 id="密钥的生成"><a href="#密钥的生成" class="headerlink" title="密钥的生成"></a>密钥的生成</h2><p>这一步如果你使用XShell的话其实很简单，在上面的工具中有一个“新建用户密钥生成向导”，进去你自己一定会的，这里就不多说了</p>
<h1 id="设置密钥登陆"><a href="#设置密钥登陆" class="headerlink" title="设置密钥登陆"></a>设置密钥登陆</h1><p>首先需要修改一些配置文件</p>
<pre><code>vim /etc/ssh/sshd_config
</code></pre><p>进入sshd_config文件后需要更改几个地方</p>
<pre><code> PubkeyAuthentication yes    #启用公告密钥配对认证方式 
 AuthorizedKeysFile  %h/.ssh/authorized_keys    #设定PublicKey文件路径
 RSAAuthentication yes  #允许RSA密钥
 PasswordAuthentication no #禁止密码验证登录,如果启用的话,RSA认证登录就没有意义了
 #禁用root账户登录，非必要，但为了安全性，请配置
 PermitRootLogin no
</code></pre><p>其实我在配置的时候发现其中有些找了很多遍都没有找到，然后我就直接手动照着输入一遍也是可以的。</p>
<p>然后保存配置，重新启动服务</p>
<pre><code>service sshd restart
</code></pre><h1 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h1><p>由上面的配置文件我们可以看出来密钥放置的位置应该在用户根目录下的.ssh/authorized_keys中，如果系统本身就有authorize_keys，那么你就可以直接将你的公钥复制进来但是一般情况下刚装好的新机器没有这个目录，这就需要我们先生成一个(这里我们可以直接进入你要创建的账户去进行，可以使用指令 su 需要创建的用户名)</p>
<pre><code>ssh-keygen
</code></pre><p>输入该指令后一路回车即可<br>回头用指令</p>
<pre><code>ll
</code></pre><p>你可以发现在当前用户的更目录下就会生成一个 .ssh的文件夹,然后再进入这个文件夹操作</p>
<pre><code>cd ~/.ssh
vim authorized_keys
</code></pre><p>把自己生成的公钥复制进来就可以了<br>然后保存，并且更改文件模式</p>
<pre><code>chmod 600 authorized_keys
</code></pre><h3 id="注意：有些时候复制的时候可能不全，尤其前面缺少几个字母，这个需要自己检查一下，否则登陆会不成功的"><a href="#注意：有些时候复制的时候可能不全，尤其前面缺少几个字母，这个需要自己检查一下，否则登陆会不成功的" class="headerlink" title="注意：有些时候复制的时候可能不全，尤其前面缺少几个字母，这个需要自己检查一下，否则登陆会不成功的"></a>注意：有些时候复制的时候可能不全，尤其前面缺少几个字母，这个需要自己检查一下，否则登陆会不成功的</h3>]]></content>
      
        
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu密钥登录教程]]></title>
      <url>/2017/07/22/ubuntu%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="ubuntu密钥登录教程"><a href="#ubuntu密钥登录教程" class="headerlink" title="ubuntu密钥登录教程"></a>ubuntu密钥登录教程</h1><h2 id="上文已经讲诉了ubuntu系统设置密匙登陆，接下来讲解一下如何登陆。"><a href="#上文已经讲诉了ubuntu系统设置密匙登陆，接下来讲解一下如何登陆。" class="headerlink" title="上文已经讲诉了ubuntu系统设置密匙登陆，接下来讲解一下如何登陆。"></a>上文已经讲诉了ubuntu系统设置密匙登陆，接下来讲解一下如何登陆。</h2><h3 id="本文使用XShell进行远程连接"><a href="#本文使用XShell进行远程连接" class="headerlink" title="本文使用XShell进行远程连接"></a>本文使用XShell进行远程连接</h3><h3 id="使用WinSCP来进行ubuntu与ubuntu之间的文件的传输"><a href="#使用WinSCP来进行ubuntu与ubuntu之间的文件的传输" class="headerlink" title="使用WinSCP来进行ubuntu与ubuntu之间的文件的传输"></a>使用WinSCP来进行ubuntu与ubuntu之间的文件的传输</h3><a id="more"></a>
<h1 id="XShell"><a href="#XShell" class="headerlink" title="XShell"></a>XShell</h1><p>首先现在登录时输入密码那一栏已经变成了灰色，这个时候只能使用密匙登录了。<br><img src="http://img.blog.csdn.net/20170716230052647?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>拿到密钥的第一步可以先添加密钥<br><img src="http://img.blog.csdn.net/20170716230143712?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20170716230209146?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>找到自己密钥的路径即可<br><img src="http://img.blog.csdn.net/20170716230239310?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>密钥导入进来以后那个文件就可以不要了，当然如果还有其他地方需要的话还需要导入其他的地方，不过如果误删了不要方，旁边还有导出呢。<br>导入成功以后可以进入属性<br><img src="http://img.blog.csdn.net/20170716230314907?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>大家可以更改密码，初始密码都为空的，这个地方相当于你再给你的密钥又手动加了一层密码，当然也可以不加，因为我发现加了以后登录的时候还要你自己输入一遍。<br>属性上面还有一公钥，这个里面就是我们放到服务器中的东西，这个东西不要给别人，当然我给你们的密匙你们更不能给别人，否者别人就可以轻松的登录你的账号了。<br>剩下的登录方法更以前一样。</p>
<h1 id="WinSCP"><a href="#WinSCP" class="headerlink" title="WinSCP"></a>WinSCP</h1><p>同样此时winscp用密码也登录不上了<br><img src="http://img.blog.csdn.net/20170716230438986?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>确认</p>
<p>直接在之前建立的那个里面更改就好，点击编辑<br><img src="http://img.blog.csdn.net/20170716230513915?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>然后点高级<br><img src="http://img.blog.csdn.net/20170716230529320?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>验证<br><img src="http://img.blog.csdn.net/20170716230551613?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>然后添加密钥文件的路径<br><img src="http://img.blog.csdn.net/20170716230616590?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>右下角选择所有文件<br><img src="http://img.blog.csdn.net/20170716230644369?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>选择密匙<br>然后有一个格式转换，选择确定<br><img src="http://img.blog.csdn.net/20170716230702329?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>然后保存确定保存就完了，大功告成可以链接了。</p>
]]></content>
      
        
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[双系统时ubuntu更改开机引导]]></title>
      <url>/2017/07/22/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%97%B6ubuntu%E6%9B%B4%E6%94%B9%E5%BC%80%E6%9C%BA%E5%BC%95%E5%AF%BC/</url>
      <content type="html"><![CDATA[<p>我们在windows上安装ubuntu双系统的时候，ubuntu的引导会默认先进入ubuntu系统，这对于那些想使用ubuntu但是并不常用ubuntu系统的人有一些不方便。<br>在网上我有看到EaseBCD这个软件可以用来管理启动项的。<br>但是因为个人之前和身边的朋友使用过，感觉其实并没有解决用户的问题，不安装EaseBCD的时候只用进入一次选择界面，而安装完EaseBCD的时候我们竟然需要进入两次引导界面，这就很不方便。（此处之争对ubuntu其他的双系统也许EaseBCD会更加方便些）另外之前一个朋友发现这个地方很不方便，于是就卸载了EaseBCD结果他的系统完全进不去了，最后在大神的指导下才修复进入了windows系统。<br><a id="more"></a><br>说了这么多到底如何更改启动项呢？其实使用ubuntu自带的系统文件就可以了。</p>
<h1 id="根据ubuntu自带的系统文件就可以修改启动顺序"><a href="#根据ubuntu自带的系统文件就可以修改启动顺序" class="headerlink" title="根据ubuntu自带的系统文件就可以修改启动顺序"></a>根据ubuntu自带的系统文件就可以修改启动顺序</h1><p>进入系统文件</p>
<pre><code>sudo vim /etc/default/grub
</code></pre><p>进去之后找到GRUB_DEFAULT，它代表启动顺序。<br>然后后面的数字需要根据自己电脑开机时显示的顺序进行选择<br>当然里面还有很多的文件，还可以修改其他的参数，比如，选择界面等待的时间等（默认是10s,如果觉得开机时间太久了，可以自行更改的）</p>
]]></content>
      
        
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu环境下降低gcc和g++的版本]]></title>
      <url>/2017/07/22/ubuntu-Reduce-the-version-gcc-g++/</url>
      <content type="html"><![CDATA[<p>有时候我们在跑别人的程序的时候发现自己编译器的版本过高以至于不能运行，这个时候我们就需要降低编译器的版本。</p>
<h1 id="首先安装低版本的编译器"><a href="#首先安装低版本的编译器" class="headerlink" title="首先安装低版本的编译器"></a>首先安装低版本的编译器</h1><p>这里由于本人用的ubuntu16.04所以编译器自带的是gcc-5.4和g++-5.4,但是需要低版本的，经过测试现在还可以安装4.7的版本</p>
<pre><code>sudo apt-get install gcc-4.7 gcc-4.7-multilib g++-4.7 g++-4.7-multilib
</code></pre><a id="more"></a>
<h1 id="配置级别"><a href="#配置级别" class="headerlink" title="配置级别"></a>配置级别</h1><pre><code>sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.7 50
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 40
</code></pre><p>接着输入</p>
<pre><code>sudo update-alternatives --config gcc
</code></pre><p>然后可以自己选择版本。</p>
<p>同理配置好了gcc还要配置g++</p>
<pre><code>sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.7 50
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 40
</code></pre><p>同理g++的选择为：</p>
<pre><code>sudo update-alternatives --config g++
</code></pre><p>如果想删除可选项的话可以键入以下指令：</p>
<pre><code>sudo update-alternatives --remove gcc /usr/bin/gcc-4.5
</code></pre><p>本文是自己跟同门根据网上资料整理而得，希望对大家有用。</p>
]]></content>
      
        
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu16.04 Server install CUDA]]></title>
      <url>/2017/07/22/ubuntu16-04-Server-install-CUDA/</url>
      <content type="html"><![CDATA[<h1 id="ubuntu16-04-Server-安装CUDA"><a href="#ubuntu16-04-Server-安装CUDA" class="headerlink" title="ubuntu16.04 Server 安装CUDA"></a>ubuntu16.04 Server 安装CUDA</h1><p>在安装CUDA的时候经常会遇到CUDA安装失败的情况，一般遇到的不允许第三方软件的安装，或者是自带的驱动nouveau的存在。</p>
<h2 id="允许第三方软件的安装"><a href="#允许第三方软件的安装" class="headerlink" title="允许第三方软件的安装"></a>允许第三方软件的安装</h2><p>这个需要自己重启电脑进入bios系统中去关闭UEFI的安全启动/安全引导<br><a id="more"></a></p>
<h2 id="关闭自带的驱动nouveau"><a href="#关闭自带的驱动nouveau" class="headerlink" title="关闭自带的驱动nouveau"></a>关闭自带的驱动nouveau</h2><pre><code>sudo vim /etc/modprobe.d/blacklist.conf
</code></pre><p>在该文件中添加以下几行：</p>
<pre><code>blacklist vga16fb 
blacklist rivafb 
blacklist rivatv 
blacklist nvidiafb
options nouveau modeset=0
</code></pre><p>添加完以后保存该文件<br>接着更新该文件，使配置有用</p>
<pre><code>sudo update-initramfs -u
</code></pre><p>最后查看nouveau驱动禁止是否成功，如果没有内容则说明禁用成功。</p>
<h3 id="如果nouveau驱动禁用后没有效果，可以进行强制移除该驱动（如果上面的方法禁用成功可以不使用该方法）"><a href="#如果nouveau驱动禁用后没有效果，可以进行强制移除该驱动（如果上面的方法禁用成功可以不使用该方法）" class="headerlink" title="如果nouveau驱动禁用后没有效果，可以进行强制移除该驱动（如果上面的方法禁用成功可以不使用该方法）"></a>如果nouveau驱动禁用后没有效果，可以进行强制移除该驱动（如果上面的方法禁用成功可以不使用该方法）</h3><p>将这个驱动备份出来然后移除</p>
<pre><code>mv /lib/modules/3.0.0-12-generic/kernel/drivers/gpu/drm/nouveau/nouveau.ko /lib/modules/3.0.0-12-generic/kernel/drivers/gpu/drm/nouveau/nouveau.ko.org
</code></pre><p>重新加载</p>
<pre><code> update-initramfs -u
</code></pre><p>重启发现字体已经变大了，卸载成功。</p>
<h2 id="CUDA的安装"><a href="#CUDA的安装" class="headerlink" title="CUDA的安装"></a>CUDA的安装</h2><p>因为本文说的ubuntu Server所以安装完一般使没有图形界面的，所以不需要去禁用图形界面，如果不是server版本的话一般还需要禁用图形界面的（可以用ctrl+alt+F1进入文本界面，F1~F6都可以F7是退出文本界面）。<br>禁用图形界面的语句：</p>
<pre><code>sudo service lightdm stop
</code></pre><p>打开图形界面的语句：</p>
<pre><code>sudo service lightdm start
</code></pre><p>nouveau禁用成功了，bios中的UEFI也已经关了，这个时候就可以安心的装CUDA了。<br>首先需要安装依赖项：</p>
<pre><code>sudo apt-get install build-essential pkg-config linux-headers-$(uname -r)
或者下面的方法也可以（用了上面的语句下面的语句就不需要了）：
sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler 
sudo apt-get install --no-install-recommends libboost-all-dev
sudo apt-get install libopenblas-dev liblapack-dev libatlas-base-dev
sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev
</code></pre><p>下载CUDA的安装包<br><a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="external">https://developer.nvidia.com/cuda-downloads</a><br>可以去NVIDIA的官网去下载，可以根据需求下载。<br>本文下载的runfile，其他形式的文本运行方法在下载界面有介绍的。<br>下载好后用U盘或者SCP等上传到服务器上，接下来进入cuda安装包的地方执行，当然这里根据你的安装包的型号。</p>
<pre><code>sudo sh cuda_8.0.61_375.26_linux.run
</code></pre><p>执行以后会有一堆文本让你读，很多，不过可以直接按q退出，然后按照要求先accept，然后再按照自己的需求安装，因为上面没有手动安装过nvidia的驱动，所以这里需要选择安装驱动的，否则cuda即使安装上了也没有用的。选择完了就开始安装了，安装完成后会有一个Summary显示安装的情况的。<br><img src="http://img.blog.csdn.net/20170715165538644?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFycmVuODE3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>到此基本安装完了，可以使用下面的语句去检测nvidia驱动是否安装成功：</p>
<pre><code>cat /proc/driver/nvidia/version
</code></pre><p>如果可以弹出来驱动的版本信息等，说明安装成功，否者没有安装成功。</p>
<p>安装完后此时查找cuda是找不到的，因为还没有配置环境变量。<br>接下来配置环境变量：</p>
<pre><code>echo &#39;export PATH=/usr/local/cuda/bin:$PATH&#39; &gt;&gt; ~/.bashrc
echo &#39;export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH&#39; &gt;&gt; ~/.bashrc
source ~/.bashrc
</code></pre><p>配置完环境变量后再检查一下cuda是否安装成功</p>
<pre><code>nvcc -V
</code></pre><p>提示上面的必须是大写的V，小写的v是不能够被识别的。</p>
<h2 id="如果要卸载或者重装"><a href="#如果要卸载或者重装" class="headerlink" title="如果要卸载或者重装"></a>如果要卸载或者重装</h2><p>卸载或者重新安装了。这个时候需要先卸载之前安装的。这个在用run文件安装的时候，最后那个summary已经告诉我们如何卸载了。</p>
<pre><code>To uninstall the CUDA Toolkit. run the uninstall scrip in /usr/local/cuda-8.0/bin
To uninstall the NVIDIA Driver. run nvidia-unistall
</code></pre><p>可以先按照上面的提示去卸载CUDA和NVIDIA驱动，当然还有其他的方法</p>
<pre><code>sudo apt-get --purge remove &lt;package_name&gt;
</code></pre><h3 id="本文参考网络上各种资源自己配置完自己实验室电脑后整理所得，做一个备忘所用，当然也希望对大家有用。"><a href="#本文参考网络上各种资源自己配置完自己实验室电脑后整理所得，做一个备忘所用，当然也希望对大家有用。" class="headerlink" title="本文参考网络上各种资源自己配置完自己实验室电脑后整理所得，做一个备忘所用，当然也希望对大家有用。"></a>本文参考网络上各种资源自己配置完自己实验室电脑后整理所得，做一个备忘所用，当然也希望对大家有用。</h3>]]></content>
      
        
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Thanks]]></title>
      <url>/2017/07/22/thanks/</url>
      <content type="html"><![CDATA[<p>Thanks for JingJing’s help to me!</p>
]]></content>
      
        
        <tags>
            
            <tag> start </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/07/21/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
        <tags>
            
            <tag> start </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
